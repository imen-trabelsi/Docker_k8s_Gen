{
    "source_code_info": {
        "language": "PHP",
        "framework": "Symfony",
        "dependencies": {
            "composer.json": "{\n    \"autoload\": {\n        \"psr-4\": {\n            \"\": \"src/\"\n        },\n        \"classmap\": [ \"app/AppKernel.php\", \"app/AppCache.php\" ]\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Outstack\\\\Enveloper\\\\Tests\\\\\": \"tests/\"\n        }\n    },\n    \"require\": {\n        \"symfony/symfony\": \"^4.2\",\n        \"symfony/monolog-bundle\": \"^3.3\",\n        \"symfony/polyfill-apcu\": \"^1.0\",\n        \"symfony/options-resolver\": \"^4.1\",\n        \"symfony/config\": \"^4.1\",\n        \"symfony/http-foundation\": \"^4.1\",\n        \"symfony/psr-http-message-bridge\": \"^1.1\",\n        \"symfony/http-kernel\": \"^4.1\",\n        \"symfony/framework-bundle\": \"^4.1\",\n        \"swiftmailer/swiftmailer\": \"^6.0\",\n        \"twig/twig\": \"^2.13\",\n        \"league/flysystem\": \"^1.0\",\n        \"league/flysystem-memory\": \"^1.0\",\n        \"zendframework/zend-diactoros\": \"^1.4\",\n        \"psr/http-message\": \"^1.0\",\n        \"php-http/client-common\": \"^1.8\",\n        \"doctrine/orm\": \"^2.6\",\n        \"doctrine/doctrine-bundle\": \"^1.9.1\",\n        \"league/json-guard\": \"^1.0\",\n        \"league/json-reference\": \"^1.0\",\n        \"symfony/messenger\": \"^4.1\",\n        \"sensio/framework-extra-bundle\": \"^5.2\",\n        \"symfony/serializer-pack\": \"^1.0\"\n    },\n    \"require-dev\": {\n        \"symfony/phpunit-bridge\": \"^3.4\"\n    }\n}\n"
        },
        "database": null,
        "build_system": "Composer",
        "config_files": {
            "docker-compose.yml": "version: '3.1'\nservices:\n    enveloper:\n        build: .\n        ports:\n            - 8080:8080\n        environment:\n            - SYMFONY_ENV=prod\n            - ENVELOPER_SMTP_HOST=mailhog\n            - ENVELOPER_SMTP_PORT=1025\n            - ENVELOPER_SMTP_USER=test\n            - ENVELOPER_SMTP_PASSWORD=test\n            - ENVELOPER_DEFAULT_SENDER_NAME=Default Sender\n            - ENVELOPER_DEFAULT_SENDER_EMAIL=noreply@example.com\n            - ENVELOPER_DB_DSN=sqlite:////app/data/enveloper.sqlite\n            - ENVELOPER_PIPEPRINT_URL=http://pipeprint\n        links:\n            - mailhog\n            - pipeprint\n    pipeprint:\n        image: outstack/pipeprint\n        environment:\n          - 'PIPEPRINT_ENGINE_CONFIG={\"twig\": \"http://twig\", \"mjml\": \"http://mjml\"}'\n        links:\n            - twig\n            - mjml\n\n    twig:\n        image: outstack/pipeprint-engine-twig\n        restart: on-failure\n    mjml:\n        image: outstack/pipeprint-engine-mjml\n        restart: on-failure\n\n    mailhog:\n        image: mailhog/mailhog\n        ports:\n            - 8025:8025",
            "Dockerfile": "FROM php:7.4-fpm-alpine3.12 as deps\nCOPY --from=composer:1.6 /usr/bin/composer /usr/bin/composer\nWORKDIR /app\nCOPY app/AppKernel.php /app/app/\nCOPY app/AppCache.php /app/app/\nCOPY composer.json /app/\nCOPY composer.lock /app/\nRUN composer install --optimize-autoloader --no-interaction --ignore-platform-reqs --no-scripts\n\nFROM php:7.4-fpm-alpine3.12\nMAINTAINER Adam Quaile <adamquaile@gmail.com>\nRUN apk update --no-cache \\\n    && apk add openssl \\\n    && apk add ca-certificates \\\n    && apk add zlib-dev \\\n    && apk add bash \\\n    && apk add nginx=1.18.0-r0 \\\n    && apk add zip \\\n    && apk add libzip-dev=1.6.1-r1 \\\n    && apk add unzip \\\n    && docker-php-source extract \\\n    && docker-php-ext-install zip \\\n    && docker-php-ext-install bcmath \\\n    && docker-php-source delete \\\n    && wget https://raw.githubusercontent.com/chrismytton/shoreman/380e745d1c2cd7bc163a1485ee57b20c76395198/shoreman.sh && chmod +x shoreman.sh && mv shoreman.sh /usr/local/bin/shoreman\n\nWORKDIR /app\nCOPY --from=deps /app/vendor /app/vendor\nCOPY . /app\nRUN cp /app/infrastructure/php-fpm/php-fpm.conf /usr/local/etc/php-fpm.conf && \\\n    cp /app/infrastructure/php-fpm/www.conf     /usr/local/etc/php-fpm.d/www.conf && \\\n    cp /app/infrastructure/nginx/nginx.conf     /etc/nginx/nginx.conf && \\\n    cp /app/infrastructure/nginx/vhost.conf     /etc/nginx/conf.d/default.conf\n\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log\n\nENV SYMFONY_ENV prod\nEXPOSE 8080\nRUN addgroup enveloper && adduser -D -G enveloper enveloper && \\\n    chown -R enveloper:enveloper \\\n        /app \\\n        /var/lib/nginx/ \\\n        /etc/nginx\nUSER enveloper\nCMD [\"/usr/local/bin/shoreman\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            ".gitignore",
            ".travis.yml",
            "Dockerfile",
            "Dockerfile.docs",
            "LICENSE.md",
            "Procfile",
            "README.md",
            "composer.json",
            "composer.lock",
            "docker-compose.dev.yml",
            "docker-compose.tests.yml",
            "docker-compose.travis.yml",
            "docker-compose.yml",
            "phpunit.xml.dist",
            "test.sh",
            "test_travis.sh"
        ],
        "folders": [
            "app",
            "bin",
            "config",
            "docs",
            "infrastructure",
            "schemata",
            "src",
            "tests",
            "var",
            "web"
        ]
    }
}