{
    "docker_info": {
        "base_image": "alchemyfr/phraseanet-base:1.2.2",
        "multi_stage_build": true,
        "exposed_ports": [],
        "user": [
            "app"
        ],
        "labels": [],
        "health_checks": [
            "HEALTHCHECK CMD wget --spider http://127.0.0.1/login || nginx -s reload || exit 1",
            "HEALTHCHECK CMD wget --spider http://127.0.0.1/ || nginx -s reload || exit"
        ],
        "build_args": [
            "SSH_PRIVATE_KEY",
            "PHRASEANET_PLUGINS"
        ],
        "envs": [],
        "copy_instructions": [
            "COPY --from=composer:2.1.6 /usr/bin/composer /usr/bin/composer",
            "WORKDIR /var/alchemy/Phraseanet",
            "COPY docker/caching/composer.* ./",
            "COPY --chown=app  . .",
            "ADD ./docker/builder/root /",
            "COPY --from=builder --chown=app /var/alchemy/Phraseanet /var/alchemy/Phraseanet",
            "ADD ./docker/phraseanet/root /",
            "WORKDIR /var/alchemy/Phraseanet",
            "COPY --from=builder --chown=app /var/alchemy/Phraseanet /var/alchemy/Phraseanet",
            "ADD ./docker/phraseanet/root /",
            "WORKDIR /var/alchemy/Phraseanet",
            "COPY --from=builder --chown=app /var/alchemy/Phraseanet /var/alchemy/Phraseanet",
            "ADD ./docker/phraseanet/root /",
            "WORKDIR /var/alchemy/Phraseanet",
            "COPY ./docker/phraseanet/worker/supervisor.conf /etc/supervisor/",
            "COPY ./docker/phraseanet/worker/logrotate/worker /etc/logrotate.d/",
            "ADD ./docker/nginx/root /",
            "COPY --from=builder /var/alchemy/Phraseanet/www /var/alchemy/Phraseanet/www",
            "ADD ./docker/phraseanet/saml-sp/root /"
        ],
        "execution": [
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/bootstrap/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[]"
                ]
            },
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"docker/phraseanet/setup/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[]"
                ]
            },
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"docker/phraseanet/fpm/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"php-fpm\",",
                    "\"-F\"]"
                ]
            },
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"docker/phraseanet/worker/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"/bin/bash\",",
                    "\"bin/run-worker.sh\"]"
                ]
            },
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"nginx\",",
                    "\"-g\",",
                    "\"daemon",
                    "off;\"]"
                ]
            },
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/bootstrap/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"/bootstrap/bin/start-servers.sh\"]"
                ]
            }
        ],
        "run": [
            [
                "cd /tmp \\",
                "&& curl -O https://nodejs.org/download/release/v10.24.1/node-v10.24.1-linux-x64.tar.gz",
                "&& tar -xvf node-v10.24.1-linux-x64.tar.gz",
                "&& cp -Rf node-v10.24.1-linux-x64/* /usr/",
                "&& curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -",
                "&& echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list",
                "&& apt-get update",
                "&& apt-get install -y --no-install-recommends",
                "yarn",
                "nano",
                "vim",
                "iputils-ping",
                "zsh",
                "ssh",
                "telnet",
                "autoconf",
                "libtool",
                "python3",
                "pkg-config",
                "&& apt-get clean",
                "&& rm -rf /var/lib/apt/lists",
                "&& git clone https://github.com/robbyrussell/oh-my-zsh.git /bootstrap/.oh-my-zsh",
                "&& mkdir -p /var/alchemy/Phraseanet",
                "&& chown -R app:app /var/alchemy"
            ],
            [
                "echo 'memory_limit = 2048M' >> /usr/local/etc/php/conf.d/docker-php-ram-limit.ini",
                ""
            ],
            [
                "composer install --prefer-dist --no-dev --no-progress --classmap-authoritative --no-interaction --no-scripts",
                "#    && rm -rf vendor composer.*"
            ],
            [
                "make install",
                ""
            ],
            [
                "( \\",
                "test ! -z \"${SSH_PRIVATE_KEY}\"",
                "&& mkdir -p ~/.ssh",
                "&& echo \"${SSH_PRIVATE_KEY}\" > ~/.ssh/id_rsa",
                "# make sure github domain.com is accepted"
            ],
            [
                "./docker/phraseanet/plugins/console install",
                ""
            ],
            [
                "apt-get update",
                "RUN apt-get install -y --no-install-recommends  supervisor"
            ],
            [
                "apt-get install -y --no-install-recommends  logrotate",
                "RUN mkdir -p /var/log/supervisor",
                "&& chown -R app: /var/log/supervisor",
                "&& apt-get clean",
                "&& rm -rf /var/lib/apt/lists"
            ],
            [
                "chmod 644 /etc/logrotate.d/worker",
                ""
            ],
            [
                "adduser --uid 1000 --disabled-password app",
                "RUN apk add --update apache2-utils",
                "&& rm -rf /var/cache/apk/*"
            ],
            [
                "apt-get update \\",
                "&& apt-get install -y",
                "apt-transport-https",
                "ca-certificates",
                "gnupg2",
                "wget",
                "nginx",
                "zlib1g-dev",
                "automake",
                "git",
                "libmcrypt-dev",
                "libzmq3-dev",
                "libtool",
                "locales",
                "gettext",
                "mcrypt",
                "libldap2-dev",
                "&& curl -Ls https://github.com/simplesamlphp/simplesamlphp/releases/download/simplesamlphp-1.10.0/simplesamlphp-1.10.0.tar.gz | tar xzvf - -C /var/www/"
            ]
        ]
    }
}