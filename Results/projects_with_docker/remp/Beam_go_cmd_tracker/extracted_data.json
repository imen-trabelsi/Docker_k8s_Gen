{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n    \"licenses\": [\n        {\n            \"type\": \"MIT\",\n            \"url\": \"https://github.com/remp2020/remp/blob/master/LICENSE.md\"\n        }\n    ],\n    \"private\": true,\n    \"scripts\": {\n        \"dev\": \"npx mix\",\n        \"watch\": \"npx mix watch\",\n        \"watch-poll\": \"npx mix watch -- --watch-options-poll=1000\",\n        \"hot\": \"npx mix watch --hot\",\n        \"web-production\": \"npx mix --production\",\n        \"iota-dev\": \"npx cross-env REMP_TARGET=iota mix\",\n        \"iota-watch\": \"npx cross-env REMP_TARGET=iota mix watch\",\n        \"iota-watch-poll\": \"npx cross-env REMP_TARGET=iota mix watch -- --watch-options-poll=1000\",\n        \"iota-hot\": \"npx cross-env REMP_TARGET=iota mix watch --hot\",\n        \"iota-production\": \"npx cross-env REMP_TARGET=iota mix --production\",\n        \"lib-dev\": \"npx cross-env REMP_TARGET=lib mix\",\n        \"lib-watch\": \"npx cross-env REMP_TARGET=lib mix watch\",\n        \"lib-watch-poll\": \"npx cross-env REMP_TARGET=lib mix watch -- --watch-options-poll=1000\",\n        \"lib-hot\": \"npx cross-env REMP_TARGET=lib mix watch --hot\",\n        \"lib-production\": \"npx cross-env REMP_TARGET=lib mix --production\",\n        \"production\": \"node_modules/npm-run-all/bin/npm-run-all/index.js web-production lib-production iota-production\",\n        \"all-dev\": \"node_modules/npm-run-all/bin/npm-run-all/index.js dev lib-dev iota-dev\",\n        \"all-watch\": \"node_modules/npm-run-all/bin/npm-run-all/index.js --parallel watch lib-watch iota-watch\",\n        \"all-watch-poll\": \"node_modules/npm-run-all/bin/npm-run-all/index.js --parallel watch-poll lib-watch-poll iota-watch-poll\",\n        \"all-hot\": \"node_modules/npm-run-all/bin/npm-run-all/index.js --parallel hot lib-hot iota-hot\",\n        \"all-production\": \"node_modules/npm-run-all/bin/npm-run-all/index.js web-production lib-production iota-production\"\n    },\n    \"engines\": {\n        \"node\": \">=18\",\n        \"npm\": \">=9\",\n        \"yarn\": \">2\"\n    },\n    \"packageManager\": \"yarn@2.4.3\",\n    \"dependencies\": {\n        \"remp-beam\": \"file:extensions/beam-module\"\n    },\n    \"devDependencies\": {\n        \"cross-env\": \"^7.0\",\n        \"css-loader\": \"^6.0\",\n        \"npm-run-all\": \"^4.1.5\",\n        \"postcss\": \"^8.2.8\",\n        \"resolve-url-loader\": \"^3.1\",\n        \"sass\": \"^1.32\",\n        \"sass-loader\": \"^13.0\",\n        \"vue-loader\": \"^15.9.5\",\n        \"vue-template-compiler\": \"^2.6.10\",\n        \"webpack\": \"^5.0.0\",\n        \"webpack-cli\": \"^5.0.1\"\n    },\n    \"version\": \"2.2.4\",\n    \"resolutions\": {\n        \"@remp/js-commons\": \"portal:../Package/remp\"\n    }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "# see .env file for docker-compose ENV variables required for proper run\n\nservices:\n  nginx:\n    image: \"nginx:stable\"\n    environment:\n      NGINX_PORT: \"[::]:80\"\n    volumes:\n      - \".:/var/www/html:rw\"\n      - \"./Docker/nginx/nginx.conf:/etc/nginx/conf.d/default.template:ro\"\n    healthcheck:\n      test: [ \"CMD-SHELL\", \"service nginx status || exit 1\" ]\n      timeout: 2s\n      retries: 10\n      interval: 5s\n    restart: \"unless-stopped\"\n    networks:\n      default:\n        aliases:\n          - \"campaign.remp.press\"\n          - \"mailer.remp.press\"\n          - \"sso.remp.press\"\n          - \"beam.remp.press\"\n          - \"tracker.beam.remp.press\"\n          - \"segments.beam.remp.press\"\n          - \"mailhog.remp.press\"\n          - \"kibana.beam.remp.press\"\n    command: /bin/bash -c \"envsubst '$$NGINX_PORT' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'\"\n\n  mysql:\n    image: \"mysql:8.0\"\n    volumes:\n      - \"mysql-data:/var/lib/mysql\"\n      - \"./Docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql\"\n    command:\n      - \"--character-set-server=utf8mb4\"\n      - \"--collation-server=utf8mb4_unicode_ci\"\n      - \"--skip-character-set-client-handshake\"\n      - \"--explicit_defaults_for_timestamp\"\n    environment:\n      MYSQL_ALLOW_EMPTY_PASSWORD: \"no\"\n      MYSQL_ROOT_PASSWORD: \"secret\"\n    healthcheck:\n      test: [ \"CMD\", \"mysqladmin\" , \"ping\", \"-h\", \"localhost\" ]\n      timeout: 2s\n      retries: 10\n      interval: 5s\n    restart: \"unless-stopped\"\n\n  redis:\n    image: \"redis:6.2\"\n    volumes:\n      - \"redis-data:/data\"\n    healthcheck:\n      test: [ \"CMD\", \"redis-cli\", \"--raw\", \"incr\", \"ping\" ]\n      timeout: 2s\n      retries: 10\n      interval: 5s\n\n  mailhog:\n    image: \"mailhog/mailhog:v1.0.0\"\n    environment:\n      MH_HOSTNAME: \"mailhog.remp.press\"\n    restart: \"unless-stopped\"\n\n  adminer:\n    user: \"${UID:-1000}:${GID:-1000}\"\n    build:\n      context: \"./Docker/php\"\n      args:\n        UID: ${UID:-1000}\n        GID: ${GID:-1000}\n        UNAME: ${UNAME:-docker}\n\n    volumes:\n      - \".:/var/www/html:rw\"\n    restart: \"unless-stopped\"\n\n  # campaign\n\n  campaign:\n    domainname: \"campaign.remp.press\"\n    hostname: \"campaign\"\n    user: \"${UID:-1000}:${GID:-1000}\"\n    environment:\n      APP_NAME: \"Campaign\"\n      PHP_IDE_CONFIG: \"serverName=campaign.remp.press\"\n    build:\n      context: \"./Docker/php\"\n      args:\n        UID: ${UID:-1000}\n        GID: ${GID:-1000}\n        UNAME: ${UNAME:-docker}\n    volumes:\n      - \"./Campaign:/var/www/html/Campaign:rw\"\n      - \"./Composer:/var/www/html/Composer:rw\"\n      - \"./Package:/var/www/html/Package:rw\"\n    depends_on:\n      nginx:\n        condition: service_healthy\n      mysql:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    restart: \"unless-stopped\"\n\n  # mailer\n\n  mailer:\n    domainname: \"mailer.remp.press\"\n    hostname: \"mailer\"\n    user: \"${UID:-1000}:${GID:-1000}\"\n    environment:\n      APP_NAME: \"Mailer\"\n      PHP_IDE_CONFIG: \"serverName=mailer.remp.press\"\n    build:\n      context: \"./Docker/php\"\n      args:\n        UID: ${UID:-1000}\n        GID: ${GID:-1000}\n        UNAME: ${UNAME:-docker}\n    volumes:\n      - \"./Mailer:/var/www/html/Mailer:rw\"\n      - \"./Composer:/var/www/html/Composer:rw\"\n      - \"./Package:/var/www/html/Package:rw\"\n    depends_on:\n      nginx:\n        condition: service_healthy\n      mysql:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n      mailhog:\n        condition: service_started\n    restart: \"unless-stopped\"\n\n  # sso\n\n  sso:\n    domainname: \"sso.remp.press\"\n    hostname: \"sso\"\n    user: \"${UID:-1000}:${GID:-1000}\"\n    environment:\n      APP_NAME: \"Sso\"\n      PHP_IDE_CONFIG: \"serverName=sso.remp.press\"\n    build:\n      context: \"./Docker/php\"\n      args:\n        UID: ${UID:-1000}\n        GID: ${GID:-1000}\n        UNAME: ${UNAME:-docker}\n    volumes:\n      - \"./Sso:/var/www/html/Sso:rw\"\n      - \"./Composer:/var/www/html/Composer:rw\"\n      - \"./Package:/var/www/html/Package:rw\"\n    depends_on:\n      nginx:\n        condition: service_healthy\n      mysql:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    restart: \"unless-stopped\"\n\n  # beam\n\n  beam:\n    domainname: \"beam.remp.press\"\n    hostname: \"beam\"\n    user: \"${UID:-1000}:${GID:-1000}\"\n    environment:\n      APP_NAME: \"Beam\"\n      PHP_IDE_CONFIG: \"serverName=beam.remp.press\"\n    build:\n      context: \"./Docker/php\"\n      args:\n        UID: ${UID:-1000}\n        GID: ${GID:-1000}\n        UNAME: ${UNAME:-docker}\n    volumes:\n      - \"./Beam:/var/www/html/Beam:rw\"\n      - \"./Composer:/var/www/html/Composer:rw\"\n      - \"./Package:/var/www/html/Package:rw\"\n    depends_on:\n      nginx:\n        condition: service_healthy\n      mysql:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    restart: \"unless-stopped\"\n\n  zookeeper:\n    image: \"wurstmeister/zookeeper\"\n    hostname: \"zookeeper\"\n    ports:\n      - \"2181:2181\"\n    healthcheck:\n      test: [ \"CMD\", 'nc', '-z', 'localhost', '2181' ]\n      timeout: 2s\n      retries: 10\n      interval: 5s\n    restart: \"unless-stopped\"\n\n  kafka:\n    image: \"wurstmeister/kafka\"\n    hostname: \"kafka\"\n    ports:\n      - \"9092:9092\"\n    depends_on:\n      - \"zookeeper\"\n    environment:\n      KAFKA_ADVERTISED_HOST_NAME: \"kafka\"\n      KAFKA_ZOOKEEPER_CONNECT: \"zookeeper:2181\"\n      KAFKA_CREATE_TOPICS: \"beam_events:1:1\"\n      KAFKA_BROKER_ID: \"1001\"\n      KAFKA_RESERVED_BROKER_MAX_ID: \"1001\"\n    volumes:\n      - \"kafka-data:/data\"\n    healthcheck:\n      test: \"nc -z localhost 9092\"\n      timeout: 2s\n      retries: 10\n      interval: 5s\n    restart: \"unless-stopped\"\n\n  telegraf:\n    build: \"./Docker/telegraf\"\n    volumes:\n      - \"./Docker/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro\"\n    depends_on:\n      elasticsearch:\n        condition: service_healthy\n      kafka:\n        condition: service_healthy\n    restart: \"unless-stopped\"\n\n  elasticsearch:\n    build: \"./Docker/elasticsearch\"\n    volumes:\n      - \"./Docker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml\"\n      - \"elastic-data:/usr/share/elasticsearch/data\"\n    healthcheck:\n      test: \"curl -s http://localhost:9200 >/dev/null || exit 1\"\n      timeout: 2s\n      retries: 10\n      interval: 5s\n    restart: \"unless-stopped\"\n\n  kibana:\n    image: \"docker.elastic.co/kibana/kibana:7.17.3\"\n    restart: \"unless-stopped\"\n\n  beam_tracker:\n    build: \"./Beam/go/cmd/tracker\"\n    depends_on:\n      - \"zookeeper\"\n    restart: \"unless-stopped\"\n\n  beam_segments:\n    build: \"./Beam/go/cmd/segments\"\n    depends_on:\n      - \"elasticsearch\"\n    restart: \"unless-stopped\"\n\nvolumes:\n  kafka-data:\n    driver: \"local\"\n  mysql-data:\n    driver: \"local\"\n  redis-data:\n    driver: \"local\"\n  elastic-data:\n    driver: \"local\"\n\nnetworks:\n  default:\n",
            "Beam/go/cmd/tracker/Dockerfile": "FROM alpine\n\nWORKDIR /bin\n\nADD tracker.tar .\n\nADD .env.example .env\n\nRUN apk add --no-cache openssl\n\nCMD tracker\n",
            ".gitlab-ci.yml": "stages:\n  - test\n  - deploy\n\ncache:\n  paths:\n    - bin/\n\nsyntax:8.2:\n  stage: test\n  image: php:8.2-cli\n  tags:\n    - docker\n  script:\n    - make syntax\n\nsyntax:8.3:\n  stage: test\n  image: php:8.3-cli\n  tags:\n    - docker\n  script:\n    - make syntax\n\nsniffer:\n  stage: test\n  image: remp/php-ci:8.3.17\n  tags:\n    - docker\n  script:\n    - make composer-audit\n    - make composer-install\n    - make sniff\n\nphpstan:\n  stage: test\n  image: remp/php-ci:8.3.17\n  tags:\n    - docker\n  script:\n    - make composer-install\n    - make phpstan\n\nlatte_lint:\n  stage: test\n  image: remp/php-ci:8.3.17\n  tags:\n    - docker\n  script:\n    - make composer-install\n    - make latte-lint\n\ntests:\n  stage: test\n  image: remp/php-ci:8.3.17\n  tags:\n    - docker\n  script:\n    - make composer-install\n    - make copy-env\n    - make phpunit\n  services:\n    - name: mysql:8.0.29\n      alias: mysql\n    - name: redis:6.2\n      alias: redis\n  variables:\n    MYSQL_DATABASE: remp_test\n    MYSQL_ROOT_PASSWORD: secret\n    REDIS_PORT: 6379\n\n# DENNIKN.SK\n\n\"mailer/\ud83c\uddf8\ud83c\uddf0\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=dennikn/mailer\"\n      -F \"variables[URL]=https://mailer.remp2020.com\"\n      -F \"variables[APP]=mailer\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n\n\"campaign/\ud83c\uddf8\ud83c\uddf0\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=dennikn/campaign\"\n      -F \"variables[URL]=https://campaign.remp2020.com\"\n      -F \"variables[APP]=campaign\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"beam/\ud83c\uddf8\ud83c\uddf0\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=dennikn/beam\"\n      -F \"variables[URL]=https://beam.remp2020.com\"\n      -F \"variables[APP]=beam\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - php8\n    - deploy\n  only:\n    - master\n  dependencies: []\n\n\"sso/\ud83c\uddf8\ud83c\uddf0\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=dennikn/sso\"\n      -F \"variables[URL]=https://sso.remp2020.com\"\n      -F \"variables[APP]=sso\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n# DENIKN.CZ\n\n\"mailer/\ud83c\udde8\ud83c\uddff\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=denikncz/mailer\"\n      -F \"variables[URL]=https://mailer.denikn.cz\"\n      -F \"variables[APP]=mailer\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"campaign/\ud83c\udde8\ud83c\uddff\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=denikncz/campaign\"\n      -F \"variables[URL]=https://campaign.denikn.cz\"\n      -F \"variables[APP]=campaign\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"beam/\ud83c\udde8\ud83c\uddff\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=denikncz/beam\"\n      -F \"variables[URL]=https://beam.denikn.cz\"\n      -F \"variables[APP]=beam\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"sso/\ud83c\udde8\ud83c\uddff\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=denikncz/sso\"\n      -F \"variables[URL]=https://sso.denikn.cz\"\n      -F \"variables[APP]=sso\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n# PREVIEW\n\n\"mailer/\ud83d\uddde\ufe0f\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=respektcz/mailer\"\n      -F \"variables[APP]=mailer\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"campaign/\ud83d\uddde\ufe0f\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=respektcz/campaign\"\n      -F \"variables[APP]=campaign\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"beam/\ud83d\uddde\ufe0f\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=respektcz/beam\"\n      -F \"variables[APP]=beam\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n\n\"sso/\ud83d\uddde\ufe0f\":\n  stage: deploy\n  script:\n    - >\n      curl -X POST\n      -F \"token=$CI_JOB_TOKEN\"\n      -F \"ref=master\"\n      -F \"variables[REF]=$CI_COMMIT_SHA\"\n      -F \"variables[STAGE]=respektcz/sso\"\n      -F \"variables[APP]=sso\"\n      $DEPLOY_TRIGGER_PIPELINE_URL\n  when: manual\n  tags:\n    - remp2020\n    - deploy\n    - php8\n  only:\n    - master\n  dependencies: []\n"
        },
        "static_files": {
            "Beam/public/vendor/horizon/mix-manifest.json": "{\n    \"/js/app.js\": \"/js/app.js?id=5003c5753dde13ee734f\",\n    \"/css/app.css\": \"/css/app.css?id=1ec68de89ff00effe989\",\n    \"/js/app.js.map\": \"/js/app.js.map?id=c0598fac188b958172ca\",\n    \"/css/app.css.map\": \"/css/app.css.map?id=5d0439ebaab1434c7ea0\"\n}"
        }
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "build"
        ],
        "folders": []
    }
}