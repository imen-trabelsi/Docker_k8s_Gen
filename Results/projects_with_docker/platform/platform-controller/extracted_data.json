{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<!--\n\n    This file is part of platform-controller.\n\n    platform-controller is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    platform-controller is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with platform-controller.  If not, see <http://www.gnu.org/licenses/>.\n\n-->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.hobbit</groupId>\n        <artifactId>parent</artifactId>\n        <version>2.0.17</version>\n        <relativePath>../parent-pom</relativePath>\n    </parent>\n    <artifactId>platform-controller</artifactId>\n    <packaging>jar</packaging>\n\n    <!-- LICENSE -->\n    <licenses>\n        <license>\n            <name>GPL 2.0</name>\n            <url>https://www.gnu.org/licenses/gpl-2.0.txt</url>\n        </license>\n    </licenses>\n    <inceptionYear>2017</inceptionYear>\n\n    <dependencies>\n        <!-- Hobbit core -->\n        <dependency>\n            <groupId>org.hobbit</groupId>\n            <artifactId>core</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n        </dependency>\n        <!-- RabbitMQ -->\n        <dependency>\n            <groupId>com.rabbitmq</groupId>\n            <artifactId>amqp-client</artifactId>\n        </dependency>\n        <!-- Guava (there only to mitigate version conflicts) -->\n        <dependency>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n            <version>30.0-jre</version>\n        </dependency>\n        <!-- Docker Client -->\n        <dependency>\n            <groupId>com.spotify</groupId>\n            <artifactId>docker-client</artifactId>\n            <version>8.16.0</version>\n        </dependency>\n        <!-- JSON lib -->\n        <dependency>\n            <groupId>com.google.code.gson</groupId>\n            <artifactId>gson</artifactId>\n            <version>2.7</version>\n        </dependency>\n        <!-- Redis lib -->\n        <dependency>\n            <groupId>biz.paluch.redis</groupId>\n            <artifactId>lettuce</artifactId>\n            <version>4.2.2.Final</version>\n        </dependency>\n        <dependency>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-buffer</artifactId>\n            <version>4.0.40.Final</version>\n        </dependency>\n        <!-- Gitlab API -->\n        <dependency>\n            <groupId>org.gitlab</groupId>\n            <artifactId>java-gitlab-api</artifactId>\n            <version>4.1.1</version>\n            <exclusions>\n                <exclusion>\n                    <artifactId>jackson-core</artifactId>\n                    <groupId>com.fasterxml.jackson.core</groupId>\n                </exclusion>\n                <exclusion>\n                    <artifactId>jackson-databind</artifactId>\n                    <groupId>com.fasterxml.jackson.core</groupId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <!-- YAML parser for config -->\n        <dependency>\n            <groupId>com.fasterxml.jackson.dataformat</groupId>\n            <artifactId>jackson-dataformat-yaml</artifactId>\n            <version>2.8.8</version>\n        </dependency>\n\n        <dependency>\n            <groupId>javax.activation</groupId>\n            <artifactId>activation</artifactId>\n        </dependency>\n\n        <!-- ~~~~~~~~~~~~~~~~~~~ Logging ~~~~~~~~~~~~~~~~~~~~~~ -->\n        <!-- slf4j: Logging API -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n        </dependency>\n        <!-- slf4j: Logging Binding -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n        </dependency>\n        <!-- ~~~~~~~~~~~~~~~~~~~ End Logging ~~~~~~~~~~~~~~~~~~~~~~ -->\n        <!-- ~~~~~~~~~~~~~~~~~~~ Testing ~~~~~~~~~~~~~~~~~~~~~~ -->\n        <!-- JUnit -->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <!-- System rules for setting environment variables -->\n        <dependency>\n            <groupId>com.github.stefanbirkner</groupId>\n            <artifactId>system-rules</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <!-- ~~~~~~~~~~~~~~~~~~~ End Testing ~~~~~~~~~~~~~~~~~~~~~~ -->\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- Necessary to force Maven to choose the latest jackson version -->\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>2.9.4</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <finalName>${project.artifactId}</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>2.4.3</version>\n                <configuration>\n                    <!-- filter all the META-INF files of other artifacts -->\n                    <filters>\n                        <filter>\n                            <artifact>*:*</artifact>\n                            <excludes>\n                                <exclude>META-INF/*.SF</exclude>\n                                <exclude>META-INF/*.DSA</exclude>\n                                <exclude>META-INF/*.RSA</exclude>\n                            </excludes>\n                        </filter>\n                    </filters>\n                    <transformers>\n                        <transformer\n                            implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n                            <manifestEntries>\n                                <X-Compile-Source-JDK>${maven.compile.source}</X-Compile-Source-JDK>\n                                <X-Compile-Target-JDK>${maven.compile.target}</X-Compile-Target-JDK>\n                            </manifestEntries>\n                        </transformer>\n                        <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n                    </transformers>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- License management plugin -->\n            <plugin>\n                <groupId>com.mycila</groupId>\n                <artifactId>license-maven-plugin</artifactId>\n                <version>2.11</version>\n                <configuration>\n                    <header>com/mycila/maven/plugin/license/templates/GPL-3.txt</header>\n                    <properties>\n                        <owner>Semantic Data Management Unit (InfAI)</owner>\n                        <email>ngonga@informatik.uni-leipzig.de</email>\n                    </properties>\n                    <excludes>\n                        <exclude>**/README</exclude>\n                        <exclude>**/LICENSE</exclude>\n                        <exclude>Makefile</exclude>\n                        <exclude>Dockerfile</exclude>\n                        <exclude>*.sh</exclude>\n                        <exclude>**/logstash.conf</exclude>\n                        <exclude>src/test/resources/**</exclude>\n                        <exclude>src/main/resources/**</exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n        </plugins>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n            </resource>\n            <resource>\n                <!-- Note that the properties files will be filtered. If mvn finds known\n                    place holders they will be replaced -->\n                <directory>src/main/filtered</directory>\n                <filtering>true</filtering>\n            </resource>\n        </resources>\n    </build>\n</project>\n"
        },
        "database": "Redis",
        "build_system": "Maven",
        "config_files": {
            ".env": "ELK_VERSION=6.8.0\n",
            "docker-compose.yml": "version: '3.3'\nservices:\n  platform-controller:\n    image: hobbitproject/hobbit-platform-controller:latest\n    networks:\n      - hobbit\n      - hobbit-core\n    environment:\n      HOBBIT_RABBIT_IMAGE: \"rabbitmq:management\"\n      HOBBIT_RABBIT_HOST: \"rabbit\"\n      HOBBIT_REDIS_HOST: \"redis\"\n      DEPLOY_ENV: \"testing\"\n      GITLAB_USER: \"${GITLAB_USER}\"\n      GITLAB_EMAIL: \"${GITLAB_EMAIL}\"\n      GITLAB_TOKEN: \"${GITLAB_TOKEN}\"\n      #LOGGING_GELF_ADDRESS: \"udp://localhost:12201\"\n      SWARM_NODE_NUMBER: \"1\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n\n  # HOBBIT GUI\n  gui:\n    image: hobbitproject/hobbit-gui:latest\n    ports:\n      - \"8080:8080\"\n    networks:\n      - hobbit-core\n      - hobbit\n    environment:\n      - HOBBIT_RABBIT_HOST=rabbit\n      - HOBBIT_RABBIT_IMAGE=rabbitmq:management\n      #- KEYCLOAK_AUTH_URL=http://192.168.99.100:8181/auth\n      - KEYCLOAK_AUTH_URL=http://localhost:8181/auth\n      - CHECK_REALM_URL=false\n      - KEYCLOAK_DIRECT_URL=http://keycloak:8080/auth\n      - ELASTICSEARCH_HOST=elasticsearch\n      - ELASTICSEARCH_HTTP_PORT=9200\n\n  # Keycloak user management (used by the GUI)\n  keycloak:\n    image: hobbitproject/hobbit-keycloak:latest\n    ports:\n      - \"8181:8080\"\n    networks:\n      - hobbit\n    volumes:\n      - ./config/keycloak:/opt/jboss/keycloak/standalone/data/db\n\n  # HOBBIT Analysis component\n  analysis:\n    image: hobbitproject/hobbit-analysis-component:latest\n    networks:\n      - hobbit-core\n    environment:\n      - HOBBIT_RABBIT_HOST=rabbit\n\n  # message bus\n  rabbit:\n    image: rabbitmq:management\n    networks:\n      - hobbit\n      - hobbit-core\n    ports:\n      - \"8081:15672\"\n      # Forwarding the port for testing\n      - \"5672:5672\"\n\n  # DB for controller\n  redis:\n    image: redis:4.0.7\n    volumes:\n      - ./config/redis-db:/data\n    command: [\"redis-server\", \"/data/redis.conf\"]\n    networks:\n      - hobbit-core\n\n  # Triple store\n  vos:\n    image: hobbitproject/virtuoso_opensource:v07.20.3217\n    hostname: vos\n    container_name: vos\n    stop_signal: SIGINT\n    stop_grace_period: 2m\n    volumes:\n      - ./config/db:/opt/virtuoso-opensource/database\n    networks:\n      - hobbit-core\n    ports:\n      - \"8890:8890\"\n\n  # Storage service\n  storage-service:\n    image: hobbitproject/hobbit-storage-service:latest\n    networks:\n      - hobbit-core\n    environment:\n      - SPARQL_ENDPOINT_URL=http://vos:8890/sparql\n      - HOBBIT_RABBIT_HOST=rabbit\n      - SPARQL_ENDPOINT_USERNAME=HobbitPlatform\n      - SPARQL_ENDPOINT_PASSWORD=Password\n\nnetworks:\n  hobbit:\n    external:\n      name: hobbit\n  hobbit-core:\n    external:\n      name: hobbit-core\n",
            "platform-controller/Dockerfile": "FROM maven:3-eclipse-temurin-11 AS build\nWORKDIR /usr/src/hobbit-platform\nCOPY parent-pom/pom.xml parent-pom/\nRUN mvn --file parent-pom -Dmaven.test.skip=true install\nARG project=platform-controller\nCOPY ${project}/pom.xml ${project}/\nRUN mvn --file ${project} dependency:go-offline\nCOPY ${project}/src ${project}/src\nRUN mvn --file ${project} -Dmaven.test.skip=true package\n\nFROM eclipse-temurin:11\n\n# Create an empty metadata directory (it will be used as default by the file-based image manager)\nRUN mkdir -p /usr/src/app/metadata\n\nCOPY --from=build /usr/src/hobbit-platform/platform-controller/target/platform-controller.jar .\n\nCMD [\"java\", \"-cp\", \"platform-controller.jar\", \"org.hobbit.core.run.ComponentStarter\", \"org.hobbit.controller.PlatformController\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "Makefile",
            "README.md",
            "nb-configuration.xml",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}