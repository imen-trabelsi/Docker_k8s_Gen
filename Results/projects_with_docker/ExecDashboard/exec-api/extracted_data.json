{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <artifactId>exec-api</artifactId>\n    <packaging>jar</packaging>\n    <name>${project.groupId}:${project.artifactId}</name>\n    <description>Hygieia Rest API Layer</description>\n    <url>https://github.com/capitalone/Hygieia</url>\n\n    <parent>\n        <groupId>com.capitalone.dashboard</groupId>\n        <artifactId>HygieiaExec</artifactId>\n        <version>1.0.0-SNAPSHOT</version>\n    </parent>\n\n    <properties>\n        <jackson.version>2.10.3</jackson.version>\n        <guava.version>19.0</guava.version>\n        <application.version.number>${project.version}</application.version.number>\n        <spark.version>2.3.3</spark.version>\n    </properties>\n\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>true</filtering>\n                <includes>\n                    <include>**/version.properties</include>\n                </includes>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>false</filtering>\n                <excludes>\n                    <exclude>**/version.properties</exclude>\n                </excludes>\n            </resource>\n        </resources>\n        <finalName>exec-api</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>com.spotify</groupId>\n                <artifactId>docker-maven-plugin</artifactId>\n                <configuration>\n                    <skipDockerBuild>false</skipDockerBuild>\n                    <imageName>hygieia-${project.build.finalName}</imageName>\n                    <dockerDirectory>${project.basedir}/docker</dockerDirectory>\n                    <resources>\n                        <resource>\n                            <targetPath>/hygieia</targetPath>\n                            <directory>${project.build.directory}</directory>\n                            <include>${project.build.finalName}.jar</include>\n                        </resource>\n                    </resources>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n  <dependencies>\n      <dependency>\n          <groupId>com.capitalone.dashboard</groupId>\n          <artifactId>exec-core</artifactId>\n          <version>1.0.0-SNAPSHOT</version>\n      </dependency>\n\n<!-- Spring Libraries -->\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>javax.validation</groupId>\n      <artifactId>validation-api</artifactId>\n      <version>1.1.0.Final</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.hibernate</groupId>\n      <artifactId>hibernate-validator</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>javax.el</groupId>\n      <artifactId>javax.el-api</artifactId>\n      <version>3.0.0</version>\n      <scope>provided</scope>\n    </dependency>\n    \n<!-- JWT -->\n\t<dependency>\n\t  <groupId>io.jsonwebtoken</groupId>\n\t  <artifactId>jjwt</artifactId>\n\t  <version>0.6.0</version>\n\t</dependency>\n\n<!-- Jackson -->\n    <dependency>\n      <groupId>com.fasterxml.jackson.core</groupId>\n      <artifactId>jackson-databind</artifactId>\n        <version>2.10.0.pr1</version>\n      </dependency>\n\n    <dependency>\n      <groupId>org.codehaus.jackson</groupId>\n      <artifactId>jackson-core-asl</artifactId>\n      <version>1.9.13</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.codehaus.jackson</groupId>\n      <artifactId>jackson-mapper-asl</artifactId>\n      <version>1.9.13</version>\n    </dependency>\n\n<!-- Logging dependencies> -->\n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-classic</artifactId>\n      </dependency>\n\n<!-- Misc Deps -->\n    <dependency>\n      <groupId>commons-lang</groupId>\n      <artifactId>commons-lang</artifactId>\n      <version>2.6</version>\n    </dependency>\n\n    <dependency>\n      <groupId>com.google.guava</groupId>\n      <artifactId>guava</artifactId>\n      <version>${guava.version}</version>\n    </dependency>\n\n    <dependency>\n      <groupId>joda-time</groupId>\n      <artifactId>joda-time</artifactId>\n      </dependency>\n\n      <!-- Swagger API -->\n      <dependency>\n          <groupId>io.springfox</groupId>\n          <artifactId>springfox-swagger2</artifactId>\n          <version>2.4.0</version>\n      </dependency>\n      <dependency>\n          <groupId>io.springfox</groupId>\n          <artifactId>springfox-swagger-ui</artifactId>\n          <version>2.4.0</version>\n      </dependency>\n      <dependency>\n          <groupId>com.fasterxml</groupId>\n          <artifactId>classmate</artifactId>\n          <version>1.3.1</version>\n      </dependency>\n\n<!-- Test Deps -->\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-core</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.hamcrest</groupId>\n      <artifactId>hamcrest-all</artifactId>\n      <version>1.3</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.jayway.jsonpath</groupId>\n      <artifactId>json-path</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n        <groupId>org.joda</groupId>\n        <artifactId>joda-convert</artifactId>\n        <version>1.8.1</version>\n        <scope>provided</scope>\n    </dependency>\n    <dependency>\n        <groupId>commons-io</groupId>\n        <artifactId>commons-io</artifactId>\n\t<version>2.1</version>\n    </dependency>\n      <dependency>\n          <groupId>commons-beanutils</groupId>\n          <artifactId>commons-beanutils</artifactId>\n      </dependency>\n      <dependency>\n          <groupId>com.google.code.gson</groupId>\n          <artifactId>gson</artifactId>\n          <scope>test</scope>\n      </dependency>\n      <dependency>\n\t\t<groupId>org.springframework.security</groupId>\n\t\t<artifactId>spring-security-test</artifactId>\n\t\t<version>4.0.0.RELEASE</version>\n\t\t<scope>test</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n        <scope>test</scope>\n      </dependency>\n\n      <dependency>\n          <groupId>org.apache.spark</groupId>\n          <artifactId>spark-core_2.11</artifactId>\n          <version>${spark.version}</version>\n      </dependency>\n      <dependency>\n          <groupId>org.mongodb.spark</groupId>\n          <artifactId>mongo-spark-connector_2.11</artifactId>\n          <version>${spark.version}</version>\n      </dependency>\n      <dependency>\n          <groupId>org.apache.spark</groupId>\n          <artifactId>spark-sql_2.11</artifactId>\n          <version>${spark.version}</version>\n      </dependency>\n\n      <dependency>\n          <groupId>org.codehaus.janino</groupId>\n          <artifactId>commons-compiler</artifactId>\n          <version>2.7.8</version>\n      </dependency>\n\t  <!--LDAP -->\n      <dependency>\n          <groupId>org.springframework.ldap</groupId>\n          <artifactId>spring-ldap-core</artifactId>\n      </dependency>\n      <dependency>\n          <groupId>org.springframework.security</groupId>\n          <artifactId>spring-security-ldap</artifactId>\n      </dependency>\n\n  </dependencies>\n</project>\n"
        },
        "database": "MongoDB",
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '3'\nservices:\n  exec-db:\n    image: mongo:latest\n    ports:\n      - \"27000:27017\"\n    volumes:\n      - \"execdb-data:/data/db\"\n    networks:\n      - hygieia_default\n\n  exec-db-setup:\n    build: exec-db\n    depends_on:\n      - exec-db\n    networks:\n      - hygieia_default\n    links:\n      - \"exec-db:db\"\n\n  exec-ui:\n    build: exec-ui\n    ports:\n      - \"4200:80\"\n    depends_on:\n      - exec-db-setup\n    environment:\n      - API_URL=http://exec-api:8080\n    networks:\n      - hygieia_default\n\n  exec-api:\n    build:\n      context: exec-api\n      args:\n        JAR_FILE: \"./target/exec-api*.jar\"\n    volumes:\n      - \"./config/api:/var/app/config\"\n    depends_on:\n      - exec-db-setup\n    networks:\n      - hygieia_default\n\n  exec-analysis:\n    build:\n      context: exec-analysis\n      args:\n        JAR_FILE: \"./target/exec-analysis*.jar\"\n    volumes:\n      - \"./config/analysis:/var/app/config\"\n    networks:\n      - hygieia_default\n\nvolumes:\n  execdb-data:\n\nnetworks:\n  hygieia_default:\n    driver: bridge",
            "exec-api/Dockerfile": "FROM openjdk:8\nEXPOSE 8080\nVOLUME /var/app/config\nARG JAR_FILE\nCOPY ${JAR_FILE} /var/app/app.jar\nENTRYPOINT [\"java\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"/var/app/app.jar\"]\nCMD [ \"--spring.config.location=/var/app/config/application.properties\" ]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}