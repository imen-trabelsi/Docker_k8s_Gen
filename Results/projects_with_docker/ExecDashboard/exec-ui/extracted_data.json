{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <artifactId>exec-ui</artifactId>\n  <packaging>pom</packaging>\n  <name>${project.groupId}:${project.artifactId}</name>\n  <description>Hygieia executive UI module</description>\n  <url>https://github.com/capitalone/Hygieia</url>\n\n  <parent>\n    <groupId>com.capitalone.dashboard</groupId>\n    <artifactId>HygieiaExec</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n  </parent>\n\n  <properties>\n  \t<frontend-maven-plugin.skip>false</frontend-maven-plugin.skip>\n  </properties>\n\n  <build>\n    <plugins>\n        <plugin>\n            <artifactId>maven-assembly-plugin</artifactId>\n            <version>2.6</version>\n            <configuration>\n                <descriptor>assembly/bin.xml</descriptor>\n                <tarLongFileMode>posix</tarLongFileMode>\n            </configuration>\n            <executions>\n                <execution>\n                    <id>create-archive</id>\n                    <phase>package</phase>\n                    <goals>\n                        <goal>single</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n\t<plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>report</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n            </executions>\n        </plugin>\n      <plugin>\n        <groupId>com.github.eirslett</groupId>\n        <artifactId>frontend-maven-plugin</artifactId>\n        <!-- if you have issues with your proxy, be careful https://github.com/eirslett/frontend-maven-plugin/commit/bcd8a7883703e28e3c5346e1f34c64332994e442 -->\n        <version>0.0.29</version>\n\n\t\t\t\t<configuration>\n\t\t\t\t\t<workingDirectory>./</workingDirectory>\n\t\t\t\t\t<skip>${frontend-maven-plugin.skip}</skip>\n\t\t\t\t</configuration>\n\n\t\t\t\t<executions>\n\n          <execution>\n            <id>install node and npm</id>\n            <goals>\n              <goal>install-node-and-npm</goal>\n            </goals>\n            <configuration>\n              <nodeVersion>v9.4.0 </nodeVersion>\n              <npmVersion>5.6.0</npmVersion>\n                <nodeDownloadRoot>http://nodejs.org/dist/</nodeDownloadRoot>\n                <npmDownloadRoot>http://registry.npmjs.org/npm/-/</npmDownloadRoot>\n            </configuration>\n          </execution>\n\n          <execution>\n            <id>npm install</id>\n            <goals>\n              <goal>npm</goal>\n            </goals>\n<!-- Optional configuration which provides for running any npm command -->\n            <configuration>\n              <arguments>install</arguments>\n            </configuration>\n          </execution>\n            <execution>\n                <id>npm run-script build</id>\n                <goals>\n                    <goal>npm</goal>\n                </goals>\n                <!-- Optional configuration which provides for running any npm command -->\n                <configuration>\n                    <arguments>run-script build</arguments>\n                </configuration>\n            </execution>\n        </executions>\n\n      </plugin>\n      <plugin>\n        <groupId>com.spotify</groupId>\n        <artifactId>docker-maven-plugin</artifactId>\n        <configuration>\n\t  <skipDockerBuild>false</skipDockerBuild>\n          <imageName>hygieia-ui</imageName>\n\t  <skipDockerBuild>false</skipDockerBuild>\n          <dockerDirectory>${project.basedir}/docker</dockerDirectory>\n          <resources>\n             <resource>\n               <targetPath>html</targetPath>\n               <directory>${project.basedir}/dist</directory>\n               <include>*/**</include>\n             </resource>\n\n           </resources>\n         </configuration>\n      </plugin>\n    </plugins>\n  </build>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '3'\nservices:\n  exec-db:\n    image: mongo:latest\n    ports:\n      - \"27000:27017\"\n    volumes:\n      - \"execdb-data:/data/db\"\n    networks:\n      - hygieia_default\n\n  exec-db-setup:\n    build: exec-db\n    depends_on:\n      - exec-db\n    networks:\n      - hygieia_default\n    links:\n      - \"exec-db:db\"\n\n  exec-ui:\n    build: exec-ui\n    ports:\n      - \"4200:80\"\n    depends_on:\n      - exec-db-setup\n    environment:\n      - API_URL=http://exec-api:8080\n    networks:\n      - hygieia_default\n\n  exec-api:\n    build:\n      context: exec-api\n      args:\n        JAR_FILE: \"./target/exec-api*.jar\"\n    volumes:\n      - \"./config/api:/var/app/config\"\n    depends_on:\n      - exec-db-setup\n    networks:\n      - hygieia_default\n\n  exec-analysis:\n    build:\n      context: exec-analysis\n      args:\n        JAR_FILE: \"./target/exec-analysis*.jar\"\n    volumes:\n      - \"./config/analysis:/var/app/config\"\n    networks:\n      - hygieia_default\n\nvolumes:\n  execdb-data:\n\nnetworks:\n  hygieia_default:\n    driver: bridge",
            "exec-ui/Dockerfile": "FROM node:8.11 as build\nWORKDIR /var/app\nCOPY .angular-cli.json ./.angular-cli.json\nCOPY tsconfig.json ./tsconfig.json\nCOPY package.json ./package.json\nCOPY package-lock.json ./package-lock.json\nCOPY src ./src\nRUN npm install && \\\n    npm run-script build-prod\n\nFROM httpd:2.4\nENV API_URL http://localhost:8080\nCOPY --from=build /var/app/dist /usr/local/apache2/htdocs/\nCOPY docker-util/docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"httpd-foreground\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}