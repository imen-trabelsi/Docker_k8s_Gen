{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"efiling-frontend\",\n  \"version\": \"1.5.1\",\n  \"private\": true,\n  \"homepage\": \"/efilinghub\",\n  \"dependencies\": {\n    \"@babel/plugin-syntax-jsx\": \"^7.16.5\",\n    \"@babel/preset-react\": \"^7.18.6\",\n    \"@bcgov/bootstrap-theme\": \"github:bcgov/bootstrap-theme\",\n    \"assert\": \"^2.0.0\",\n    \"axios\": \"^0.25.0\",\n    \"axios-auth-refresh\": \"^2.2.8\",\n    \"babel-plugin-transform-export-extensions\": \"^6.22.0\",\n    \"bootstrap\": \"^4.5.3\",\n    \"browserslist\": \"^4.19.1\",\n    \"buffer\": \"^6.0.3\",\n    \"crypto-browserify\": \"^3.12.0\",\n    \"dinero.js\": \"^1.8.1\",\n    \"file-saver\": \"^2.0.2\",\n    \"glob-parent\": \"^5.1.2\",\n    \"history\": \"^5.0.0\",\n    \"https-browserify\": \"^1.0.0\",\n    \"install-peerdeps\": \"^3.0.3\",\n    \"jsonwebtoken\": \"^9.0.0\",\n    \"jwa\": \"^2.0.0\",\n    \"jws\": \"^4.0.0\",\n    \"keycloak-js\": \"^25.0.6\",\n    \"moment\": \"^2.29.4\",\n    \"object-hash\": \"^3.0.0\",\n    \"object-path\": \"0.11.8\",\n    \"os-browserify\": \"^0.3.0\",\n    \"postcss-normalize\": \"^10.0.1\",\n    \"process\": \"^0.11.10\",\n    \"prop-types\": \"^15.7.2\",\n    \"query-string\": \"^7.1.1\",\n    \"react\": \"^16.13.1\",\n    \"react-app-polyfill\": \"^3.0.0\",\n    \"react-dom\": \"^16.13.1\",\n    \"react-dropzone\": \"^11.3.2\",\n    \"react-icons\": \"^4.1.0\",\n    \"react-moment\": \"^1.1.1\",\n    \"react-router-dom\": \"^6.1.1\",\n    \"react-scripts\": \"^5.0.1\",\n    \"reactstrap\": \"^8.9.0\",\n    \"regenerator-runtime\": \"^0.13.7\",\n    \"shared-components\": \"https://github.com/bcgov/react-shared-components/releases/download/v1.3.0/shared-components-1.3.0.tgz\",\n    \"stream\": \"^0.0.2\",\n    \"stream-browserify\": \"^3.0.0\",\n    \"stream-http\": \"^3.2.0\",\n    \"typescript\": \"^4\",\n    \"url\": \"^0.11.0\",\n    \"util\": \"^0.12.4\",\n    \"validator\": \"^13.7.0\"\n  },\n  \"scripts\": {\n    \"start\": \"react-app-rewired start\",\n    \"build\": \"react-app-rewired build\",\n    \"test\": \"jest --env='jsdom'\",\n    \"eject\": \"react-app-rewired eject\",\n    \"storybook\": \"start-storybook -p 9009 -s public\",\n    \"build-storybook\": \"build-storybook -s public\",\n    \"lint\": \"eslint .\",\n    \"lint:fix\": \"eslint --fix .\",\n    \"coverage\": \"jest --coverage --env='jsdom'\",\n    \"precommit\": \"pretty-quick --staged\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"react-app\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.14.3\",\n    \"@babel/plugin-syntax-typescript\": \"^7.12.13\",\n    \"@babel/preset-env\": \"^7.14.4\",\n    \"@storybook/addon-actions\": \"^6.4.19\",\n    \"@storybook/addon-links\": \"^6.4.19\",\n    \"@storybook/addon-storyshots\": \"^6.4.19\",\n    \"@storybook/addon-viewport\": \"^6.4.19\",\n    \"@storybook/addons\": \"^6.4.19\",\n    \"@storybook/preset-create-react-app\": \"^4.1.2\",\n    \"@storybook/react\": \"^6.4.19\",\n    \"@testing-library/jest-dom\": \"^5.12.0\",\n    \"@testing-library/react\": \"^11.2.7\",\n    \"@testing-library/react-hooks\": \"7.0.2\",\n    \"@testing-library/user-event\": \"^12.8.1\",\n    \"axios-mock-adapter\": \"^1.19.0\",\n    \"babel-loader\": \"8.2.3\",\n    \"enzyme\": \"^3.11.0\",\n    \"enzyme-adapter-react-16\": \"^1.15.6\",\n    \"enzyme-to-json\": \"^3.6.1\",\n    \"eslint-config-airbnb\": \"19.0.4\",\n    \"eslint-config-prettier\": \"8.3.0\",\n    \"eslint-plugin-airbnb\": \"^0.0.1-security\",\n    \"eslint-plugin-import\": \"^2.25.3\",\n    \"eslint-plugin-jsx-a11y\": \"^6.5.1\",\n    \"eslint-plugin-prettier\": \"4.0.0\",\n    \"eslint-plugin-react\": \"^7.31.11\",\n    \"eslint-plugin-react-hooks\": \"^4.3.0\",\n    \"fetch-mock-jest\": \"^1.5.1\",\n    \"jest-environment-jsdom-sixteen\": \"^2.0.0\",\n    \"jest-sonar-reporter\": \"^2.0.0\",\n    \"moment-timezone\": \"^0.5.40\",\n    \"prettier\": \">=2.0.0\",\n    \"pretty-quick\": \"^3.1.0\",\n    \"react-app-rewired\": \"^2.2.1\",\n    \"react-test-renderer\": \"^16.12.0\",\n    \"sass\": \"^1.44.0\"\n  },\n  \"resolutions\": {\n    \"immer\": \"^9.0.6\",\n    \"trim\": \"^0.0.3\",\n    \"glob-parent\": \"^5.1.2\",\n    \"loader-utils\": \"^2.0.4\",\n    \"nth-check\": \"^2.0.1\",\n    \"terser\": \"^5.14.2\",\n    \"json5\": \"^2.2.2\",\n    \"minimatch\": \"^3.0.5\",\n    \"webpack\": \"^5.76.0\",\n    \"braces\": \"^3.0.3\",\n    \"webpack-dev-middleware\": \"^5.3.4\",\n    \"browserify-sign\": \"4.2.2\",\n    \"ws\": \"^8.17.1\",\n    \"rollup\": \"^2.79.2\",\n    \"body-parser\": \"^1.20.3\",\n    \"path-to-regexp\": \"^0.1.10\",\n    \"http-proxy-middleware\": \"^2.0.7\",\n    \"cross-spawn\": \"^7.0.5\",\n    \"path-to-regexp\": \"^0.1.12\",\n    \"elliptic\": \"^6.6.1\",\n    \"semver\": \"^7.5.2\"\n  },\n  \"jest\": {\n    \"watchPathIgnorePatterns\": [\n      \"<rootDir>/node_modules/\"\n    ],\n    \"collectCoverageFrom\": [\n      \"src/**/*.js\",\n      \"!src/*.js\",\n      \"!src/domain/authentication/*.js\",\n      \"!**/node_modules/**\",\n      \"!**/vendor/**\",\n      \"!src/modules/test-data/confirmationPopupTestData.js\",\n      \"!src/modules/helpers/handleBackEvent.js\",\n      \"!src/components/input/Input.js\"\n    ],\n    \"transform\": {\n      \"^.+\\\\.[t|j]sx?$\": \"babel-jest\"\n    },\n    \"setupFilesAfterEnv\": [\n      \"<rootDir>/src/setupTests.js\",\n      \"./src/setupTests.js\"\n    ],\n    \"moduleNameMapper\": {\n      \"\\\\.(jpg|jpeg|png|PNG|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|pdf)$\": \"<rootDir>/src/AssetsTransformer.js\",\n      \"\\\\.(css|less|scss)$\": \"<rootDir>/src/AssetsTransformer.js\"\n    },\n    \"verbose\": true,\n    \"testResultsProcessor\": \"jest-sonar-reporter\",\n    \"collectCoverage\": true,\n    \"coverageReporters\": [\n      \"text\",\n      \"lcov\"\n    ],\n    \"coverageDirectory\": \"coverage\",\n    \"transformIgnorePatterns\": [\"node_modules/(?!(.*.mjs$|keycloak.js))\"]\n  },\n  \"jestSonar\": {\n    \"reportPath\": \"coverage\",\n    \"reportFile\": \"test-report.xml\",\n    \"indent\": 4\n  }\n}\n"
        },
        "database": "PostgreSQL",
        "build_system": "npm",
        "config_files": {
            "src/frontend/efiling-frontend/.env.production": "SKIP_PREFLIGHT_CHECK=true\nDISABLE_ESLINT_PLUGIN=true\n",
            "docker-compose.yml": "version: \"3.7\"\nservices:\n  #############################################################################################\n  ###                                 EFILING FRONTEND                                      ###\n  #############################################################################################\n  efiling-frontend:\n    container_name: efiling-frontend\n    ports:\n      - 3000:8080\n    environment:\n      - REACT_APP_KEYCLOAK_REALM=${KEYCLOAK_REALM:-Efiling-Hub}\n      - REACT_APP_KEYCLOAK_CLIENT_ID=efiling-frontend\n      - REACT_APP_KEYCLOAK_URL=${KEYCLOAK_URL:-http://localhost:8081/auth}\n      - REACT_APP_API_BASE_URL=http://localhost:8080\n      - REACT_APP_BAMBORA_REDIRECT_URL=http://localhost:3000/efilinghub\n      - REACT_APP_CSO_BASE_URL=http://localhost/cso\n      - REACT_APP_RUSH_TAB_FEATURE_FLAG=true\n\n  #############################################################################################\n  ###                                 EFILING DEMO                                          ###\n  #############################################################################################\n  efiling-demo:\n    container_name: efiling-demo\n    build:\n      context: ./src/frontend/efiling-demo\n    environment:\n      - REACT_APP_KEYCLOAK_REALM=Efiling-Hub\n      - REACT_APP_KEYCLOAK_CLIENT_ID=efiling-admin\n      - REACT_APP_KEYCLOAK_URL=http://localhost:8081/auth\n      - REACT_APP_API_BASE_URL=http://localhost:8080\n      - REACT_APP_BAMBORA_REDIRECT_URL=http://localhost:3000/efilinghub\n    ports:\n      - 3001:8080      \n\n  #############################################################################################\n  ###                           Efiling api backend app                                     ###\n  #############################################################################################\n  efiling-api:\n    container_name: efiling-api\n    hostname: efiling-api\n    ports:\n      - \"8080:8080\"\n    environment:\n      - BAMBORA_APIPASSCODE=${BAMBORA_APIPASSCODE:-passcode}\n      - BAMBORA_MERCHANTID=${BAMBORA_MERCHANTID-merchantid}\n      - BAMBORA_PROFILE_URL=${BAMBORA_PROFILE_URL:-http://localhost:3001/updatecard}\n      - BAMBORA_HASHKEY=${BAMBORA_HASHKEY:-key}\n      - BAMBORA_PROFILE_SERVICE_VERSION=${BAMBORA_PROFILE_SERVICE_VERSION}\n      - BAMBORA_URL_EXPIRY=10\n\n      - KEYCLOAK_AUTH_SERVER_URL=${KEYCLOAK_AUTH_SERVER_URL:-http://localhost:8081/auth/realms/Efiling-Hub}\n      - KEYCLOAK_JWK_SERVER_URL=${KEYCLOAK_JWK_SERVER_URL:-http://keycloak:8080/auth/realms/Efiling-Hub}\n      - KEYCLOAK_REALM=${KEYCLOAK_RESOURCE:-efiling-api}\n\n      - CSO_ACCOUNTFACADE_URI=${CSO_ACCOUNTFACADE_URI}\n      - CSO_ACCOUNTFACADE_USERNAME=${CSO_ACCOUNTFACADE_USERNAME}\n      - CSO_ACCOUNTFACADE_PASSWORD=${CSO_ACCOUNTFACADE_PASSWORD}\n      - CSO_ROLEREGISTRY_USERNAME=${CSO_ROLEREGISTRY_USERNAME}\n      - CSO_ROLEREGISTRY_PASSWORD=${CSO_ROLEREGISTRY_PASSWORD}\n      - CSO_ROLEREGISTRY_URI=${CSO_ROLEREGISTRY_URI}\n      - CSO_LOOKUPFACADE_USERNAME=${CSO_LOOKUPFACADE_USERNAME}\n      - CSO_LOOKUPFACADE_PASSWORD=${CSO_LOOKUPFACADE_PASSWORD}\n      - CSO_LOOKUPFACADE_URI=${CSO_LOOKUPFACADE_URI}\n      - CSO_BCEIDSERVICE_URI=${CSO_BCEIDSERVICE_URI}\n      - CSO_FILINGSTATSFACADE_URI=${CSO_FILINGSTATSFACADE_URI}\n      - CSO_FILINGSTATSFACADE_USERNAME=${CSO_FILINGSTATSFACADE_USERNAME}\n      - CSO_FILINGSTATSFACADE_PASSWORD=${CSO_FILINGSTATSFACADE_PASSWORD}\n      - CSO_BCEIDSERVICE_USERNAME=${CSO_BCEIDSERVICE_USERNAME}\n      - CSO_BCEIDSERVICE_PASSWORD=${CSO_BCEIDSERVICE_PASSWORD}\n      - CSOWS_USERNAME=${CSOWS_USERNAME}\n      - CSOWS_PASSWORD=${CSOWS_PASSWORD}\n      - CSOWS_URI=${CSOWS_URI}\n      - CSO_FILINGFACADE_URI=${CSO_FILINGFACADE_URI}\n      - CSO_FILINGFACADE_PASSWORD=${CSO_FILINGFACADE_PASSWORD}\n      - CSO_FILINGFACADE_USERNAME=${CSO_FILINGFACADE_USERNAME}\n      - CSO_SERVICEFACADE_URI=${CSO_SERVICEFACADE_URI}\n      - CSO_SERVICEFACADE_USERNAME=${CSO_SERVICEFACADE_USERNAME}\n      - CSO_SERVICEFACADE_PASSWORD=${CSO_SERVICEFACADE_PASSWORD}\n\n      - SFTP_KNOWNHOSTS=${SFTP_KNOWNHOSTS}\n      - SFTP_REMOTELOCATION=${SFTP_REMOTELOCATION}\n      - SFTP_PRIVATE_KEY=${SFTP_PRIVATE_KEY}\n\n      - BCEID_SERVICE_URI=${BCEID_SERVICE_URI}\n      - BCEID_SERVICE_USERNAME=${BCEID_SERVICE_USERNAME}\n      - BCEID_SERVICE_PASSWORD=${BCEID_SERVICE_PASSWORD}\n      - BCEID_SERVICE_ONLINE_SERVICE_ID=${BCEID_SERVICE_ONLINE_SERVICE_ID}\n\n      - REDIS_HOST=redis\n      - REDIS_PORT=6379\n      - REDIS_PASSWORD=admin\n\n      - NAVIGATION_BASE_URL=http://localhost:3000/efilinghub\n      - NAVIGATION_EXPIRYTIME=10\n\n      - CLAMAV_HOST=clamav\n      - CLAMAV_TIMEOUT=150000\n\n      - MVN_PROFILE=${MVN_PROFILE}\n      - STARTERS_V=${STARTERS_V}\n\n    networks:\n      - fisu-net\n\n  #############################################################################################\n  ###                                 REDIS SERVER                                          ###\n  #############################################################################################\n  redis:\n    container_name: efiling_redis\n    image: redis\n    command: redis-server --requirepass admin\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - data-redis:/data\n    restart: always\n    networks:\n      - fisu-net\n\n  #############################################################################################\n  ###                                 REDIS COMMANDER                                       ###\n  #############################################################################################\n  redis-commander:\n    container_name: efiling_redis-commander\n    hostname: redis-commander\n    image: rediscommander/redis-commander:latest\n    restart: always\n    environment:\n      - REDIS_PORT=6379\n      - REDIS_HOST=redis\n      - REDIS_PASSWORD=admin\n    ports:\n      - \"8082:8081\"\n    networks:\n      - fisu-net\n\n  # #############################################################################################\n  # ###                                        KEYCLOAK                                       ###\n  # #############################################################################################\n  keycloak:\n    image: quay.io/keycloak/keycloak:12.0.3\n    environment:\n      DB_VENDOR: H2\n      KEYCLOAK_USER: admin\n      KEYCLOAK_PASSWORD: admin\n      KEYCLOAK_IMPORT: /tmp/realm-export.json\n      KEYCLOAK_FRONTEND_URL: http://localhost:8081/auth\n    volumes:\n      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json\n    ports:\n      - \"8081:8080\"\n    networks:\n      - fisu-net\n\n  # #############################################################################################\n  # ###                                        KEYCLOAK Config                                ###\n  # #############################################################################################\n  keycloak-config:\n    command: sh -c \"dockerize -wait http://keycloak:8080 -timeout 300s /tmp/createuser.sh\"\n    networks:\n      - fisu-net\n\n  #############################################################################################\n  ###                             CLAMAV                                                    ###\n  #############################################################################################\n  clamav:\n    image: mk0x/docker-clamav\n    ports:\n      - \"3310:3310\"\n    networks:\n      - fisu-net\n\nvolumes:\n  data-redis:\n    driver: local\n  data01:\n    driver: local\n  mongo-volume:\n\nnetworks:\n  fisu-net:\n    driver: \"bridge\"\n",
            "docker-compose.override.yml": "version: \"3.7\"\nservices:\n\n  #############################################################################################\n  ###                                 EFILING FRONTEND                                      ###\n  #############################################################################################\n  efiling-frontend:\n    build:\n      context: ./src/frontend/efiling-frontend\n\n  #############################################################################################\n  ###                           Efiling api backend app                                     ###\n  #############################################################################################\n  efiling-api:\n    build:\n      context: ./src/backend\n      dockerfile: Dockerfile.efiling-api\n      args:\n        - MVN_PROFILE=${MVN_PROFILE:-efiling-api-demo}\n        - SKIP_TESTS=true\n        - STARTERS_V=v1.0.3\n\n  # #############################################################################################\n  # ###                                        KEYCLOAK Config                                ###\n  # #############################################################################################\n  keycloak-config:\n    build:\n      context: ./infrastructure/keycloak\n      args:\n        - KEYCLOAK_URL=http://keycloak:8080\n",
            "src/frontend/efiling-frontend/Dockerfile": "# pull official base image\nFROM node:18-alpine as build\n\nWORKDIR /app\n\nCOPY ./package.json ./yarn.lock ./\n\nENV NODE_ENV=production\n\nRUN yarn install \\\n    && yarn add --dev react-app-rewired # this line makes sure that react-app-rewired scripts will be in the PATH. It can  \n                                              # be removed when the react-app-rewired module is no longer required to the project.\nCOPY . .\n\nRUN yarn build\n\n#############################################################################################\n###                                 PRODUCTION IMAGE                                      ###\n#############################################################################################\nFROM nginx:1.27.4-alpine\n\nRUN rm -rf /usr/share/nginx/html/\nCOPY --from=build /app/build /etc/nginx/html/efilinghub\n\nWORKDIR /etc/nginx/html/efilinghub\n\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\n\nCOPY ./env.sh .\nCOPY .env.template .env\n\n# CMD [\"nginx\", \"-g\", \"daemon off;\"]\nRUN chmod g+rwx /var/cache/nginx /var/run /var/log/nginx\nRUN chmod g+rwx /etc/nginx/html/efilinghub\n\n# Add bash\nRUN apk add --no-cache bash\n\n# Make our shell script executable\nRUN chmod g+rwx env.sh\n\nCMD [\"/bin/bash\", \"-c\", \"/etc/nginx/html/efilinghub/env.sh && nginx -g \\\"daemon off;\\\"\"]\n",
            "src/frontend/efiling-frontend/nginx.conf": "server {\n\n  listen 8080;\n\n  location /efilinghub {\n    root   /etc/nginx/html/;\n    try_files $uri /efilinghub/index.html;\n  }\n\n  location ~* /efilinghub/\\.env-config\\.js$ {\n    expires -1;\n    add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';\n    add_header X-Content-Type-Options \"nosniff\" always;\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header X-Content-Type-Options \"nosniff\" always;\n    add_header Cache-Control \"no-store\";\n    add_header \"Pragma\" \"no-cache\";\n    add_header Content-Security-Policy \"default-src 'self';\";\n    add_header Strict-Transport-Security \"max-age=31536000; includeSubDomains\" always;\n  }\n  \n  location /images {\n    deny all;\n  }\n  \n  location /static {\n    deny all;\n  }\n\n}\n"
        },
        "static_files": {
            "src/frontend/efiling-frontend/public/manifest.json": "{\n  \"short_name\": \"eFiling Frontend\",\n  \"name\": \"JAG File Submission Frontend App\",\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n"
        }
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "createuser.sh",
            "realm-export.json"
        ],
        "folders": []
    }
}