# Start with the base image node:18-alpine
FROM node:18-alpine as build

# Create app directory
WORKDIR /app

# Install app dependencies
COPY package.json yarn.lock ./

# Set environment variable
ENV NODE_ENV=production

# Install dependencies using yarn
RUN yarn install  && yarn add --dev react-app-rewired 

# Bundle app source
COPY . .

# Build application
RUN yarn build

# Start with a new Stage
FROM nginx:stable-alpine

# Copy the application build from the previous stage

# Remove default nginx config file
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx config file
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Make sure files/folders needed by the processes are accessible when they run under docker
RUN chmod g+rwx /var/cache/nginx /var/run /var/log/nginx
RUN mkdir /etc/nginx/html/efilinghub && chmod g+rwx /etc/nginx/html/efilinghub
RUN apk add --no-cache bash

COPY ./env.sh /etc/nginx/html/efilinghub/
COPY .env.template /etc/nginx/html/efilinghub/.env

# Make our shell script executable
RUN chmod g+rwx /etc/nginx/html/efilinghub/env.sh

# Provide the default command for the container
CMD ["/bin/bash", "-c", "/etc/nginx/html/efilinghub/env.sh && nginx -g \"daemon off;\""]
