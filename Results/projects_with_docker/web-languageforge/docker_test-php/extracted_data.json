{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"web-languageforge\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Language Forge\",\n  \"private\": true,\n  \"packageManager\": \"pnpm@9.11.0\",\n  \"engines\": {\n    \"node\": \">=18\",\n    \"pnpm\": \">=9\"\n  },\n  \"scripts\": {\n    \"build:dev\": \"npm-run-all -p -l sass webpack:dev\",\n    \"build:dev:watch\": \"npm-run-all -p -l sass:watch webpack:dev:watch\",\n    \"build:prd\": \"npm-run-all -p -l sass webpack:prd\",\n    \"sass\": \"sass -q src/sass:src/dist/css\",\n    \"sass:watch\": \"sass -q --watch src/sass:src/dist/css src/Site/views/languageforge/theme/default/sass:src/dist/css src/angular-app:src/dist/css\",\n    \"webpack\": \"webpack\",\n    \"webpack:watch\": \"webpack -w\",\n    \"webpack:dev\": \"webpack --config webpack-dev.config.js\",\n    \"webpack:dev:watch\": \"webpack -w --config webpack-dev.config.js\",\n    \"webpack:prd\": \"webpack --config webpack-prd.config.js\",\n    \"compile-test-e2e\": \"tsc -p test/app\",\n    \"test-e2e\": \"pnpm exec playwright test -c ./test/e2e/playwright.config.ts\",\n    \"test-e2e-report\": \"pnpm exec playwright show-report ./test/e2e/test-results/_html-report\",\n    \"prepare\": \"husky install\"\n  },\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sillsdev/web-languageforge.git\"\n  },\n  \"dependencies\": {\n    \"angular\": \"1.8.2\",\n    \"angular-route\": \"1.8.2\",\n    \"angular-sanitize\": \"1.8.2\",\n    \"angular-ui-bootstrap-4\": \"git+https://github.com/sillsdev/bootstrap.git\",\n    \"angular-ui-router\": \"0.4.3\",\n    \"angular-ui-validate\": \"^1.2.3\",\n    \"angular-zxcvbn\": \"^3.2.2\",\n    \"bootstrap\": \"4.0.0-beta.2\",\n    \"date-fns\": \"^3.6.0\",\n    \"deep-diff\": \"^1.0.2\",\n    \"font-awesome\": \"^4.7.0\",\n    \"localforage\": \"^1.7.1\",\n    \"ng-drag-to-reorder\": \"^1.0.8\",\n    \"ng-file-upload\": \"12.0.4\",\n    \"ng-table\": \"^3.0.1\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"oclazyload\": \"^1.1.0\",\n    \"webm-fix-duration\": \"^1.0.1\",\n    \"zxcvbn\": \"^4.4.2\"\n  },\n  \"devDependencies\": {\n    \"@playwright/test\": \"^1.29\",\n    \"@prettier/plugin-php\": \"^0.20.1\",\n    \"@types/angular\": \"1.8.1\",\n    \"@types/angular-mocks\": \"^1.7.0\",\n    \"@types/angular-route\": \"^1.7.1\",\n    \"@types/angular-sanitize\": \"^1.8.0\",\n    \"@types/angular-ui-bootstrap\": \"^1.0.0\",\n    \"@types/angular-ui-router\": \"^1.1.37\",\n    \"@types/bootstrap\": \"^3.3.35\",\n    \"@types/core-js\": \"^0.9.42\",\n    \"@types/deep-diff\": \"^1.0.1\",\n    \"@types/dom-mediacapture-record\": \"^1.0.11\",\n    \"@types/jasmine\": \"^2.8.4\",\n    \"@types/jasminewd2\": \"^2.0.3\",\n    \"@types/ng-file-upload\": \"^12.2.3\",\n    \"@types/node\": \"^17.0.21\",\n    \"@types/oclazyload\": \"0.0.32\",\n    \"@types/rangy\": \"0.0.30\",\n    \"@types/webpack-env\": \"^1.16.0\",\n    \"copy-webpack-plugin\": \"^8.1.0\",\n    \"core-js\": \"^3.6.5\",\n    \"css-loader\": \"^3.6.0\",\n    \"file-loader\": \"^5.1.0\",\n    \"glob\": \"^7.1.2\",\n    \"html-loader\": \"^0.5.5\",\n    \"husky\": \"^8.0.1\",\n    \"jasmine-core\": \"^3.6.0\",\n    \"jasmine-reporters\": \"^2.1.1\",\n    \"jasmine-spec-reporter\": \"^4.1.1\",\n    \"lint-staged\": \"^13.0.3\",\n    \"mini-css-extract-plugin\": \"^1.3.9\",\n    \"mongodb\": \"^6.6.2\",\n    \"ng-annotate-loader\": \"^0.7.0\",\n    \"ngtemplate-loader\": \"^2.1.0\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"prettier\": \"3.0.3\",\n    \"sass\": \"^1.39.0\",\n    \"sass-loader\": \"^8.0.2\",\n    \"style-loader\": \"^1.2.1\",\n    \"terser-webpack-plugin\": \"^5.1.1\",\n    \"ts-loader\": \"^9.3.0\",\n    \"tslib\": \"^2.4.0\",\n    \"tslint\": \"^5.20.1\",\n    \"url-loader\": \"^4.1.1\",\n    \"webpack\": \"5.91.0\",\n    \"webpack-bundle-analyzer\": \"^4.4.2\",\n    \"webpack-cli\": \"^4.5.0\",\n    \"webpack-dev-server\": \"^4.7.4\",\n    \"webpack-merge\": \"^4.2.2\",\n    \"workbox-webpack-plugin\": \"^6.3.0\"\n  },\n  \"jscsConfig\": {\n    \"preset\": \"airbnb\",\n    \"disallowTrailingComma\": true,\n    \"requireTrailingComma\": false\n  },\n  \"lint-staged\": {\n    \"*\": \"prettier --write --ignore-unknown\"\n  }\n}\n"
        },
        "database": "MongoDB",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "# https://docs.docker.com/compose/compose-file\n# https://github.com/compose-spec/compose-spec/blob/master/spec.md\n\n# networks:\n#   lexbox:\n#     name: lexbox_default\n#     external: true\n#   default:\n\nservices:\n  ui-builder:\n    build:\n      context: .\n      dockerfile: docker/ui-builder/Dockerfile\n    image: lf-ui-builder\n    container_name: lf-ui-builder\n    volumes:\n      # share dist folder between ui and api containers\n      - lf-ui-dist:/data/src/dist\n\n      # for developer convenience volume map\n      - ./webpack.config.js:/data/webpack.config.js\n      - ./webpack-dev.config.js:/data/webpack-dev.config.js\n      - ./webpack-prd.config.js:/data/webpack-prd.config.js\n      - ./package.json:/data/package.json\n      - ./pnpm-lock.yaml:/data/pnpm-lock.yaml\n\n      # needed these volume maps so changes to typescript/scss would be reflected in running app, actually rebundled and output to dist which is then shared to the app container.\n      - ./src/angular-app:/data/src/angular-app\n      - ./src/sass:/data/src/sass\n      - ./src/Site/views/languageforge/theme/default/sass:/data/src/Site/views/languageforge/theme/default/sass\n\n  app:\n    build:\n      context: .\n      dockerfile: docker/app/Dockerfile\n      target: development\n      args:\n        - ENVIRONMENT=development\n    image: lf-app\n    container_name: lf-app\n    depends_on:\n      - db\n      - mail\n      - ld-api\n      - lfmerge\n    # networks:\n    #   - default\n    #   - lexbox\n    environment:\n      - WAIT_HOSTS=lf-db:27017, mail:25\n      - XDEBUG_MODE=develop,debug\n      - LDAPI_BASE_URL=http://ld-api:3000/api/v2/\n      # Uncomment this to test getting the LD project list from LexBox\n      # To use LexBox locally (in docker) you'll also need to uncomment the networks here and at the top of the file\n      - LEX_BOX_HOST=http://admin.localhost\n      - ENVIRONMENT=development\n      - WEBSITE=localhost\n      - DATABASE=scriptureforge\n      - MONGODB_CONN=mongodb://lf-db:27017\n      - MONGODB_AUTHSOURCE=admin\n      - MONGODB_USER=admin\n      - MONGODB_PASS=pass\n      - MAIL_HOST=mail\n      - GOOGLE_CLIENT_ID=bogus-development-token\n      - GOOGLE_CLIENT_SECRET=bogus-development-token\n      - FACEBOOK_CLIENT_ID=bogus-development-token\n      - FACEBOOK_CLIENT_SECRET=bogus-development-token\n      - REMEMBER_ME_SECRET=bogus-development-key\n      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token\n    command: [\"/run-with-wait.sh\"]\n    extra_hosts:\n      - \"host.docker.internal:host-gateway\"\n      - \"admin.localhost:host-gateway\"\n    volumes:\n      # holds things like audio files or pictures attached to words within a project\n      - lf-project-assets:/var/www/src/assets\n\n      # holds mercurial repos to avoid full clones/downloads on s/r projects\n      - lfmerge-sendreceive-data:/var/lib/languageforge/lexicon/sendreceive\n\n      # share dist folder between ui and api containers\n      - lf-ui-dist:/var/www/html/dist\n\n      # for developer convenience\n      - ./src/index.php:/var/www/src/index.php\n      - ./src/config.php:/var/www/src/config.php\n      - ./src/Api:/var/www/src/Api\n      - ./src/Site:/var/www/src/Site\n\n      # needed this volume mapping so changes to partials would be reflected in running app.\n      - ./src/angular-app:/var/www/src/angular-app\n\n  lfmerge:\n    build:\n      context: docker/lfmerge\n      dockerfile: Dockerfile\n      args:\n        - ENVIRONMENT=development\n    image: lfmerge\n    container_name: lfmerge\n    platform: linux/amd64\n    depends_on:\n      - db\n      - ld-api\n    environment:\n      - WAIT_HOSTS=db:27017\n      - ENVIRONMENT=development\n      - DATABASE=scriptureforge\n      - CHORUS_HG_EXE=chg\n      - MONGODB_CONN=mongodb://db:27017\n      - MONGODB_AUTHSOURCE=admin\n      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token\n      - LANGUAGE_DEPOT_HG_USERNAME=admin\n      - LANGUAGE_DEPOT_TRUST_TOKEN=pass\n      - LFMERGE_LANGUAGE_DEPOT_HG_PUBLIC_HOSTNAME=hg.localhost\n      - LFMERGE_LANGUAGE_DEPOT_HG_PROTOCOL=http\n      - LFMERGE_LOGGING_DEST=syslog\n      - LFMERGE_BASE_DIR=/var/lib/languageforge/lexicon/sendreceive\n      - LFMERGE_WEBWORK_DIR=webwork\n      - LFMERGE_TEMPLATES_DIR=Templates\n      - LFMERGE_MONGO_HOSTNAME=db\n      - LFMERGE_MONGO_PORT=27017\n      - LFMERGE_MONGO_AUTHSOURCE=admin\n      - LFMERGE_MONGO_USER=admin\n      - LFMERGE_MONGO_PASS=pass\n      - LFMERGE_MONGO_MAIN_DB_NAME=scriptureforge\n      - LFMERGE_MONGO_DB_NAME_PREFIX=sf_\n      - LFMERGE_VERBOSE_PROGRESS=true\n    extra_hosts:\n      - \"hg.localhost:host-gateway\"\n      - \"admin.localhost:host-gateway\"\n    volumes:\n      # holds things like audio files or pictures attached to words within a project\n      - lf-project-assets:/var/www/src/assets\n\n      # holds mercurial repos to avoid full clones/downloads on s/r projects\n      - lfmerge-sendreceive-data:/var/lib/languageforge/lexicon/sendreceive\n\n  ssl:\n    image: caddy\n    container_name: lf-ssl\n    ports:\n      - 8080:80\n      - 443:443\n    restart: unless-stopped\n    depends_on:\n      - next-proxy\n    environment:\n      - APP_ADDRESS=next-proxy:80\n    volumes:\n      - lf-caddy-data:/data\n      - lf-caddy-config:/config\n\n      # for developer convenience\n      - ./docker/ssl/Caddyfile:/etc/caddy/Caddyfile\n\n  next-proxy-dev:\n    image: caddy\n    container_name: lf-next-proxy-dev\n    ports:\n      - 80:80\n      - 3000:3000\n    restart: unless-stopped\n    depends_on:\n      - app\n      - next-app-dev\n    environment:\n      - LEGACY_APP=app:80\n      - NEXT_APP=next-app-dev:3000\n    volumes:\n      # for developer convenience\n      - ./docker/next-app/dev/Caddyfile:/etc/caddy/Caddyfile\n\n  next-app-dev:\n    build:\n      context: next-app\n      dockerfile: ../docker/next-app/dev/Dockerfile\n    image: lf-next-app-dev\n    container_name: lf-next-app-dev\n    environment:\n      - API_HOST=http://app\n    command: pnpm run dev-w-host\n    volumes:\n      # for developer convenience\n      - ./next-app/src:/app/src\n      - ./next-app/static:/app/static\n\n  next-proxy:\n    build:\n      context: docker/next-app\n      dockerfile: Dockerfile.proxy\n    image: lf-next-proxy\n    container_name: lf-next-proxy\n    restart: unless-stopped\n    depends_on:\n      - app\n      - next-app\n    environment:\n      - LEGACY_APP=app:80\n      - NEXT_APP=next-app:3000\n\n  next-app:\n    build:\n      context: next-app\n      dockerfile: ../docker/next-app/Dockerfile.next-app\n    image: lf-next-app\n    container_name: lf-next-app\n    environment:\n      - API_HOST=http://app\n\n  mail:\n    image: juanluisbaptiste/postfix:1.0.0\n    container_name: lf-mail\n    environment:\n      - SMTP_SERVER=nobody.localhost\n      - SMTP_USERNAME=username\n      - SMTP_PASSWORD=password\n      - SERVER_HOSTNAME=nobody.localhost\n    command: sh -c \"postconf -e 'default_transport = discard' && /run.sh\"\n\n  db:\n    image: mongo:6\n    container_name: lf-db\n    ports:\n      # exposed this to host for admin tools\n      - 27017:27017\n    volumes:\n      - ./docker/db/init.js:/docker-entrypoint-initdb.d/init.js\n      - lf-mongo-data:/data/db\n    restart: always\n    environment:\n      - MONGO_INITDB_DATABASE=scriptureforge\n      - MONGO_INITDB_ROOT_USERNAME=admin\n      - MONGO_INITDB_ROOT_PASSWORD=pass\n\n  ld-db:\n    image: mariadb:10.10\n    container_name: ld-db\n    # To access the MySQL database via localhost:3306 on your dev machine (e.g., in VS Code), uncomment the \"ports\" config below\n    # Note that if you're running MySQL on your dev machine already, change the first number to something else, like 3307 and access localhost:3307\n    # ports:\n    #   - 3306:3306\n    environment:\n      - MYSQL_HOST=ld-db\n      - MYSQL_DATABASE=testldapi\n      - MYSQL_DATABASE_PRIVATE=testldapipvt\n      - MYSQL_USER=redmine\n      - MYSQL_PASSWORD=not-a-secret\n      - MYSQL_ROOT_PASSWORD=also-not-a-secret\n    volumes:\n      - ./docker/test-ld/schemas-and-data.sql:/docker-entrypoint-initdb.d/schemas-and-data.sql\n\n  ld-api:\n    image: sillsdev/web-languagedepot-api\n    platform: linux/amd64\n    container_name: ld-api\n    depends_on:\n      - ld-db\n    environment:\n      - PORT=3000\n      - MYSQL_HOST=ld-db\n      - MYSQL_DATABASE=testldapi\n      - MYSQL_DATABASE_PRIVATE=testldapipvt\n      - MYSQL_USER=redmine\n      - MYSQL_PASSWORD=not-a-secret\n      - MYSQL_ROOT_PASSWORD=also-not-a-secret\n      - JWT_SIGNING_KEY=bogus-development-token\n\n  e2e-app:\n    build:\n      context: .\n      dockerfile: docker/app/Dockerfile\n      target: development\n      args:\n        - ENVIRONMENT=development\n    image: lf-e2e-app\n    container_name: e2e-app\n    depends_on:\n      - db\n      - mail\n      - ld-api\n    ports:\n      - 3238:80\n    environment:\n      - WAIT_HOSTS=db:27017, mail:25\n      - LDAPI_BASE_URL=http://ld-api:3000/api/v2/\n      - ENVIRONMENT=development\n      - WEBSITE=localhost\n      - DATABASE=e2e_test\n      - MONGODB_CONN=mongodb://db:27017\n      - MONGODB_AUTHSOURCE=admin\n      - MONGODB_USER=admin\n      - MONGODB_PASS=pass\n      - MAIL_HOST=mail\n      - REMEMBER_ME_SECRET=bogus-development-key\n      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token\n      - XDEBUG_MODE=develop,debug\n      - GOOGLE_CLIENT_ID=bogus-development-token\n      - GOOGLE_CLIENT_SECRET=bogus-development-token\n      - FACEBOOK_CLIENT_ID=bogus-development-token\n      - FACEBOOK_CLIENT_SECRET=bogus-development-token\n    command: sh -c \"/wait && apache2-foreground\"\n    extra_hosts:\n      - \"host.docker.internal:host-gateway\"\n    volumes:\n      - ./test/e2e/utils/TestControl.php:/var/www/src/Api/Service/TestControl.php\n      - ./test/data:/tmp/e2e-test-data\n      - lf-ui-dist:/var/www/html/dist\n\n      # needed this volume mapping so changes to partials would be reflected in running app (e.g. HTML)\n      - ./src/angular-app:/var/www/src/angular-app\n\n  test-php:\n    build:\n      context: .\n      dockerfile: docker/test-php/Dockerfile\n    image: lf-test-php\n    container_name: lf-test-php\n    depends_on:\n      - db\n      - mail\n    environment:\n      - WAIT_HOSTS=db:27017, mail:25\n      - ENVIRONMENT=development\n      - WEBSITE=localhost.languageforge.org\n      - DATABASE=scriptureforge_test\n      - MONGODB_CONN=mongodb://db:27017\n      - MONGODB_AUTHSOURCE=admin\n      - MONGODB_USER=admin\n      - MONGODB_PASS=pass\n      - MAIL_HOST=mail\n      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token\n      - XDEBUG_MODE=develop,debug\n    # used by XDebug\n    extra_hosts:\n      - \"host.docker.internal:host-gateway\"\n    command: sh -c \"/wait && /run.sh\"\n    volumes:\n      # for developer convenience\n      - ./test:/var/www/test\n      - ./src/Api:/var/www/src/Api\n      - ./src/Site:/var/www/src/Site\n\n  composer-dev:\n    build:\n      context: .\n      dockerfile: docker/composer-dev/Dockerfile\n    image: lf-composer-dev\n    container_name: lf-composer-dev\n    volumes:\n      - ./src/composer.json:/work/composer.json\n      - ./src/composer.lock:/work/composer.lock\n\nvolumes:\n  lf-caddy-config:\n  lf-caddy-data:\n  lf-mongo-data:\n  lf-project-assets:\n  lfmerge-sendreceive-data:\n  lf-ui-dist:\n",
            "docker/test-php/Dockerfile": "FROM sillsdev/web-languageforge:base-php\n\n\n# ----- LINES BELOW COPIED FROM APP DOCKERFILE ----------\nWORKDIR /var/www/html\nENV COMPOSER_ALLOW_SUPERUSER=1\nCOPY src/composer.json src/composer.lock /var/www/html/\nRUN composer install\n\nRUN install-php-extensions xdebug-^3.1\nCOPY docker/app/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d\n\nRUN mv $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini\nCOPY --from=sillsdev/web-languageforge:wait-latest /wait /wait\n\n# copy src files into image\nCOPY src /var/www/html/\nRUN ln -s /var/www/html /var/www/src\n\n# ensure correct write permissions for assets folders,\nRUN    chown -R www-data:www-data /var/www/html/assets /var/www/html/cache \\\n    && chmod -R g+ws /var/www/html/assets /var/www/html/cache\n\n# patch exception handling from Symfony to actually show exceptions instead of swallowing them\nCOPY docker/app/symfony-exceptions.patch /\nRUN patch -p4 -i /symfony-exceptions.patch\n\n# -------- END COPY FROM APP DOCKERFILE --------------\n\n\n# PHP test specific lines\nCOPY test /var/www/test/\nCOPY docker/test-php/run.sh /run.sh\n\nCMD [\"/run.sh\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile"
        ],
        "folders": []
    }
}