# Set base image
FROM debian:stretch-slim

# Set environment variables
ENV PATH /opt/${PROJECT}/bin:$PATH
ENV COMMAND ${PROJECT}
ENV PROJECT=SigFoxReceiver
ENV CONFIGURATION=Release

# Set working directory
WORKDIR /Build/${PROJECT}

# Copy project files into the docker image
COPY . /Build/${PROJECT}/

# Setting up needed tools and packages for the build
RUN set -ex \
    && apt-get update \
    && apt-get install -y gpg \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && echo "deb http://download.mono-project.com/repo/debian stretch main" > /etc/apt/sources.list.d/mono-official.list \
    && apt-get update \
    && apt-get install -y --no-install-recommends mono-devel nuget msbuild fsharp \
    && nuget restore -PackagesDirectory ../packages -NonInteractive \
    && msbuild /p:Configuration=${CONFIGURATION} \

# Package the application
RUN set -ex \
    && mkbundle -o ${PROJECT} --simple ${PROJECT}.exe \

# Adding library dependencies
WORKDIR /Build/${PROJECT}/bin/${CONFIGURATION}
COPY --from=mkbundle /usr/lib/x86_64-linux-gnu/libdl* /lib/
COPY --from=mkbundle /usr/lib/x86_64-linux-gnu/libgcc* /lib/
COPY --from=mkbundle /usr/lib/x86_64-linux-gnu/librt* /lib/
COPY --from=mkbundle /Build/${PROJECT}/bin/${CONFIGURATION}/${PROJECT} /opt/${PROJECT}/bin/

# Copy entrypoint script
COPY docker-entrypoint.sh /usr/local/bin/

# Make entrypoint script executable
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Exposing application on a specific port
EXPOSE 80

# Define entrypoint
ENTRYPOINT ["docker-entrypoint.sh"]

# Define command
CMD ["--host", "0.0.0.0", "--mqttbroker", "mqtt", "1883"]
