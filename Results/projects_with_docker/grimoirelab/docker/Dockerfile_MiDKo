# Start with python:3.9-slim-bullseye base image
FROM python:3.9-slim-bullseye

# Maintainer info
LABEL maintainer="Santiago"

# Create environment variables
ENV DEBIAN_FRONTEND noninteractive
ENV DEPLOY_USER grimoire
ENV DEPLOY_USER_DIR /home/${DEPLOY_USER}
ENV CONF_DIR ${DEPLOY_USER_DIR}/conf
ENV SCRIPTS_DIR ${DEPLOY_USER_DIR}/scripts
ENV GRIMOIRELAB_RELEASE "1.9.2"
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV LANG C.UTF-8

# Create user and give sudo permissions
RUN useradd ${DEPLOY_USER} --create-home --shell /bin/bash && \

# Update and install necessary packages and clean up after install
RUN apt-get update && \
    apt-get -y install --no-install-recommends bash locales gcc git git-core mariadb-client libmariadbclient-dev-compat unzip curl wget sudo ssh && \
    apt-get clean && \

# Setup locale
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    echo 'LANG="en_US.UTF-8"'>/etc/default/locale && \
    dpkg-reconfigure --frontend=noninteractive locales && \

# Make directories and copy necessary files, change permissions as required
WORKDIR ${DEPLOY_USER_DIR}
ADD https://raw.githubusercontent.com/chaoss/grimoirelab-sirmordred/main/aliases.json ${DEPLOY_USER_DIR}/aliases.json
ADD https://raw.githubusercontent.com/chaoss/grimoirelab-sirmordred/main/menu.yaml ${DEPLOY_USER_DIR}/menu.yaml
COPY stage ${DEPLOY_USER_DIR}/stage
RUN chmod 444 ${DEPLOY_USER_DIR}/aliases.json && \
    chmod 444 ${DEPLOY_USER_DIR}/menu.yaml && \

# Clone Grimoirelab and set up
RUN mkdir -p ${CONF_DIR} && \
    git clone -b ${GRIMOIRELAB_RELEASE} --depth 1 https://github.com/grimoirelab/grimoirelab.git && \
    cp grimoirelab/requirements.txt ${CONF_DIR}/requirements.txt && \
    echo ${GRIMOIRELAB_RELEASE} > ${DEPLOY_USER_DIR}/release && \
    echo "Installing and checking GrimoireLab Release" && \

# Health checks and volumes
HEALTHCHECK --interval=60s --timeout=6s --retries=1 CMD healthcheck.py -c ${CONF_DIR}/setup.cfg -s 'Exception in Task Manager' || exit 1
VOLUME ["${DEPLOY_USER_DIR}/logs"]

# Run stage
CMD [ "${DEPLOY_USER_DIR}/stage" ]
