# Base Image
FROM rust:$RUST_VERSION-buster

# Set working directory
WORKDIR /app

# Set Environment Variables
ENV PATH="${PATH}:/prisma-engines/script/.profile-shell/bin"
ENV VALGRIND_LIB=/usr/lib/aarch64-linux-gnu/valgrind/
ENV CARGO_TARGET_DIR=target-alternatives

# Update packages and Install the Dependencies
RUN printf "deb http://ftp.de.debian.org/debian buster main" >> /etc/apt/sources.list \
    && apt update \ 
    && apt-get install -y git valgrind linux-perf strace \ 
    && curl -fsSL https://fnm.vercel.app/install | bash \ 
    && source ~/.bashrc \ 
    && fnm install v16 \
    && mkdir -p /.cargo/registry \
    && mkdir .cargo/git \
    && rm -rf /usr/local/cargo/git \
    && rm -rf /usr/local/cargo/registry \
    && rm -rf /usr/local/cargo/.package-cache \
    && rm -rf /usr/local/cargo/.crates.toml \
    && rm -rf /usr/local/cargo/.crates2.json \
    && ln -s /.cargo/git /usr/local/cargo \
    && ln -s /.cargo/registry /usr/local/cargo \
    && ln -s /.cargo/.package-cache /usr/local/cargo \
    && ln -s /.cargo/.crates.toml /usr/local/cargo \

# Installing flamegraph using cargo (Rust’s package manager)
RUN cargo install flamegraph

# Copy Cargo.toml for dependencies
COPY ./Cargo.toml ./Cargo.toml

# Build
RUN cargo build --release

# Clean up
RUN rm src/*.rs

# Copy local files to the container filesystem
COPY ./ .

# Build again, this time it’ll be much quicker
RUN cargo build --release

# CMD/ENTRYPOINT
CMD ["/bin/bash"]
