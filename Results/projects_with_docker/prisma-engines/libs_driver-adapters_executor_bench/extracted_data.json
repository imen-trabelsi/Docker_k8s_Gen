{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"engines\": {\n    \"node\": \">=18.18\",\n    \"pnpm\": \"^9.14.2\"\n  },\n  \"name\": \"executor\",\n  \"type\": \"module\",\n  \"version\": \"0.0.1\",\n  \"description\": \"\",\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"tsup ./src/testd-qe.ts ./src/qc-test-runner.ts ./src/qc-test-worker/worker.ts ./src/demo-se.ts ./src/bench.ts --format esm --dts\",\n    \"build:qe\": \"tsup ./src/testd-qe.ts ./src/bench.ts --format esm --dts\",\n    \"build:qc\": \"tsup ./src/qc-test-runner.ts ./src/qc-test-worker/worker.ts --format esm --dts\",\n    \"test:qe\": \"node --import tsx ./src/testd-qe.ts\",\n    \"test:qc\": \"node --import tsx ./src/testd-qc.ts\",\n    \"demo:se\": \"node --import tsx ./src/demo-se.ts\",\n    \"demo:qc\": \"node --import tsx ./src/demo-qc.ts\",\n    \"clean:d1\": \"rm -rf ../../connector-test-kit-rs/query-engine-tests/.wrangler\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"sideEffects\": false,\n  \"license\": \"Apache-2.0\",\n  \"dependencies\": {\n    \"@effect/schema\": \"0.64.20\",\n    \"@prisma/adapter-d1\": \"workspace:*\",\n    \"@prisma/adapter-libsql\": \"workspace:*\",\n    \"@prisma/adapter-neon\": \"workspace:*\",\n    \"@prisma/adapter-pg\": \"workspace:*\",\n    \"@prisma/adapter-planetscale\": \"workspace:*\",\n    \"@prisma/bundled-js-drivers\": \"workspace:*\",\n    \"@prisma/client-engine-runtime\": \"workspace:*\",\n    \"@prisma/driver-adapter-utils\": \"workspace:*\",\n    \"mitata\": \"0.1.11\",\n    \"query-engine-wasm-baseline\": \"npm:@prisma/query-engine-wasm@0.0.19\",\n    \"query-engine-wasm-latest\": \"npm:@prisma/query-engine-wasm@latest\",\n    \"ts-pattern\": \"5.1.1\",\n    \"undici\": \"6.13.0\",\n    \"wrangler\": \"3.50.0\",\n    \"ws\": \"8.16.0\"\n  },\n  \"devDependencies\": {\n    \"@cloudflare/workers-types\": \"4.20240405.0\",\n    \"@types/node\": \"20.12.7\",\n    \"tsup\": \"8.3.5\",\n    \"tsx\": \"4.7.2\",\n    \"typescript\": \"5.4.5\"\n  }\n}\n"
        },
        "database": "PostgreSQL",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '3'\nservices:\n  cockroach_23_1:\n    image: prismagraphql/cockroachdb-custom:23.1@sha256:c5a97355d56a7692ed34d835dfd8e3663d642219ea90736658a24840ea26862d\n    restart: unless-stopped\n    command: |\n      start-single-node --insecure\n    ports:\n      - '26260:26257'\n    networks:\n      - databases\n\n  cockroach_22_2:\n    image: prismagraphql/cockroachdb-custom:22.2\n    restart: unless-stopped\n    command: start-single-node --insecure\n    ports:\n      - '26259:26257'\n    networks:\n      - databases\n\n  cockroach_22_1_0:\n    image: prismagraphql/cockroachdb-custom:22.1.0\n    restart: unless-stopped\n    command: start-single-node --insecure\n    ports:\n      - '26257:26257'\n    networks:\n      - databases\n\n  cockroach_21_2_0_patched:\n    image: prismagraphql/cockroachdb-custom:21.2.0-patched\n    restart: unless-stopped\n    command: start-single-node --insecure\n    ports:\n      - '26258:26257'\n    networks:\n      - databases\n\n  pgbouncer:\n    image: brainsam/pgbouncer:latest\n    restart: unless-stopped\n    environment:\n      DB_HOST: 'postgres11'\n      DB_PORT: '5432'\n      DB_USER: 'postgres'\n      DB_PASSWORD: 'prisma'\n      POOL_MODE: 'transaction'\n      MAX_CLIENT_CONN: '1000'\n    networks:\n      - databases\n    ports:\n      - '6432:6432'\n\n  postgres9:\n    image: postgres:9.6\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n    ports:\n      - '5431:5432'\n    networks:\n      - databases\n\n  postgres10:\n    image: postgres:10\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n    ports:\n      - '5432:5432'\n    networks:\n      - databases\n\n  postgres11:\n    image: postgres:11\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n    ports:\n      - '5433:5432'\n    networks:\n      - databases\n\n  postgres12:\n    image: postgres:12\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n    ports:\n      - '5434:5432'\n    networks:\n      - databases\n\n  postgres13:\n    image: postgres:13\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n    ports:\n      - '5435:5432'\n    networks:\n      - databases\n\n  neon-proxy:\n    image: ghcr.io/neondatabase/wsproxy:latest\n    restart: unless-stopped\n    environment:\n      # the port of the postgres13 within the databases network\n      APPEND_PORT: 'postgres13:5432'\n      ALLOW_ADDR_REGEX: '.*'\n      LOG_TRAFFIC: 'true'\n      LOG_CONN_INFO: 'true'\n    ports:\n      - '5488:80'\n    depends_on:\n      - postgres13\n    networks:\n      - databases\n\n  # Tests using a vitess backend were not running properly for query-engine tests, and In\n  # https://github.com/prisma/prisma-engines/pull/4423 work was done to have coverage of the correctness of planetscale\n  # driver adapters.\n  #\n  # Given these tests run against the planetscale proxy, and given a different test suite will exist for vitess with\n  # rust drivers, we opted for the path of least friction when running the driver adapter tests, which is putting a\n  # single mysql box behind the planetscale proxy instead of full vttest cluster.\n  #\n  # The tradeoffs are:\n  #\n  # - we don't exercise vitess but mysql. This is a close approximation, but there might be small differences in\n  # behavior. (ex. vttest can be returning different error messages than mysql)\n  #\n  # - however, we 1) do exercise the planetscale proxy, 2) we use relationMode=prisma and this resembles what actually\n  # happens within the query engine, where vitess does not exist as a provider, and as such there isn't any particular\n  # capability or conditional code making the engine behave differently then when using Mysql.\n  # In the end Vitess is just an abstraction existing in the test kit to a) use the mysql provider, b) run the suite\n  # with relationMode=prisma; c) being able to run or exclude specific tests for that configuration. But the existence\n  # of this testing connector is misleading, and it should probably be just a version of the MySQL testing connector\n  # instead.\n  planetscale-proxy:\n    build: ./docker/planetscale_proxy\n    environment:\n      MYSQL_HOST: 'mysql-planetscale'\n      MYSQL_PORT: 3306\n      MYSQL_DATABASE: prisma\n    ports:\n      - '8085:8085'\n    depends_on:\n      mysql-planetscale:\n        condition: service_healthy\n    restart: unless-stopped\n    healthcheck:\n      test: ['CMD', 'nc', '-z', '127.0.0.1', '8085']\n      interval: 5s\n      timeout: 2s\n      retries: 20\n    networks:\n      - databases\n\n  mysql-planetscale:\n    image: mysql:8.0.28\n    command: mysqld\n    restart: unless-stopped\n    platform: linux/x86_64\n    environment:\n      MYSQL_ALLOW_EMPTY_PASSWORD: yes\n      MYSQL_DATABASE: prisma\n    ports:\n      - '3310:3306'\n    networks:\n      - databases\n    tmpfs: /var/lib/planetscale-mysql\n    volumes:\n      - './docker/planetscale-mysql/my.cnf:/etc/mysql/my.cnf'\n    ulimits:\n      nofile:\n        soft: 20000\n        hard: 40000\n    healthcheck:\n      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']\n      timeout: 20s\n      retries: 10\n\n  postgres14:\n    image: postgres:14\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n      POSTGRES_HOST_AUTH_METHOD: 'md5'\n      POSTGRES_INITDB_ARGS: '--auth-host=md5'\n    ports:\n      - '5437:5432'\n    networks:\n      - databases\n\n  postgres15:\n    image: postgres:15\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n      POSTGRES_HOST_AUTH_METHOD: 'md5'\n      POSTGRES_INITDB_ARGS: '--auth-host=md5'\n    ports:\n      - '5438:5432'\n    networks:\n      - databases\n\n  postgres16:\n    image: postgres:16\n    restart: unless-stopped\n    command: postgres -c 'max_connections=1000'\n    environment:\n      POSTGRES_PASSWORD: 'prisma'\n      POSTGRES_HOST_AUTH_METHOD: 'md5'\n      POSTGRES_INITDB_ARGS: '--auth-host=md5'\n    ports:\n      - '5439:5432'\n    networks:\n      - databases\n\n  mysql-5-6:\n    image: mysql:5.6.50\n    command: mysqld --table_definition_cache=2000\n    restart: unless-stopped\n    platform: linux/x86_64\n    environment:\n      MYSQL_USER: root\n      MYSQL_ROOT_PASSWORD: prisma\n      MYSQL_DATABASE: prisma\n    ports:\n      - '3309:3306'\n    networks:\n      - databases\n    tmpfs: /var/lib/mysql\n    healthcheck:\n      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']\n      timeout: 20s\n      retries: 10\n\n  mysql-5-7:\n    image: mysql:5.7.44\n    command: mysqld\n    restart: unless-stopped\n    platform: linux/x86_64\n    environment:\n      MYSQL_ROOT_PASSWORD: prisma\n      MYSQL_DATABASE: prisma\n    ports:\n      - '3306:3306'\n    networks:\n      - databases\n    tmpfs: /var/lib/mysql\n    healthcheck:\n      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']\n      timeout: 20s\n      retries: 10\n\n  mysql-8-0:\n    image: mysql:8.0.28\n    command: mysqld\n    restart: unless-stopped\n    platform: linux/x86_64\n    environment:\n      MYSQL_ROOT_PASSWORD: prisma\n      MYSQL_DATABASE: prisma\n    ports:\n      - '3307:3306'\n    networks:\n      - databases\n    tmpfs: /var/lib/mysql8\n    healthcheck:\n      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']\n      timeout: 20s\n      retries: 10\n\n  mariadb-10-0:\n    image: mariadb:10\n    restart: unless-stopped\n    environment:\n      MYSQL_USER: root\n      MYSQL_ROOT_PASSWORD: prisma\n      MYSQL_DATABASE: prisma\n    ports:\n      - '3308:3306'\n    networks:\n      - databases\n    tmpfs: /var/lib/mariadb\n\n  mariadb-11-0:\n    image: mariadb:11\n    restart: unless-stopped\n    environment:\n      MYSQL_USER: root\n      MYSQL_ROOT_PASSWORD: prisma\n      MYSQL_DATABASE: prisma\n    ports:\n      - '3308:3306'\n    networks:\n      - databases\n    tmpfs: /var/lib/mariadb\n\n  vitess-test-8_0:\n    image: vitess/vttestserver:mysql80@sha256:53a2d2f58ecf8e6cf984c725612f7651c4fc7ac9bc7d198dbd9964d50e28b9a2\n    restart: unless-stopped\n    ports:\n      - 33807:33807\n    environment:\n      PORT: 33804\n      KEYSPACES: 'test'\n      NUM_SHARDS: '1'\n      MYSQL_BIND_HOST: '0.0.0.0'\n      FOREIGN_KEY_MODE: 'disallow'\n      ENABLE_ONLINE_DDL: false\n      MYSQL_MAX_CONNECTIONS: 100000\n      TABLET_REFRESH_INTERVAL: '100ms'\n    healthcheck:\n      test: ['CMD', 'mysqladmin', 'ping', '-h127.0.0.1', '-P33807']\n      interval: 5s\n      timeout: 2s\n      retries: 20\n\n  vitess-shadow-8_0:\n    image: vitess/vttestserver:mysql80@sha256:53a2d2f58ecf8e6cf984c725612f7651c4fc7ac9bc7d198dbd9964d50e28b9a2\n    restart: unless-stopped\n    ports:\n      - 33808:33807\n    environment:\n      PORT: 33804\n      KEYSPACES: 'shadow'\n      NUM_SHARDS: '1'\n      MYSQL_BIND_HOST: '0.0.0.0'\n      FOREIGN_KEY_MODE: 'disallow'\n      ENABLE_ONLINE_DDL: false\n      MYSQL_MAX_CONNECTIONS: 100000\n      TABLET_REFRESH_INTERVAL: '500ms'\n    healthcheck:\n      test: ['CMD', 'mysqladmin', 'ping', '-h127.0.0.1', '-P33807']\n      interval: 5s\n      timeout: 2s\n      retries: 20\n\n  mssql-2017:\n    image: mcr.microsoft.com/mssql/server:2017-latest\n    restart: unless-stopped\n    environment:\n      ACCEPT_EULA: 'Y'\n      SA_PASSWORD: '<YourStrong@Passw0rd>'\n    ports:\n      - '1434:1433'\n    networks:\n      - databases\n\n  mssql-2019:\n    image: mcr.microsoft.com/mssql/server:2019-latest\n    restart: unless-stopped\n    environment:\n      ACCEPT_EULA: 'Y'\n      SA_PASSWORD: '<YourStrong@Passw0rd>'\n    ports:\n      - '1433:1433'\n    networks:\n      - databases\n\n  mssql-2022:\n    image: mcr.microsoft.com/mssql/server:2022-latest\n    restart: unless-stopped\n    environment:\n      ACCEPT_EULA: 'Y'\n      SA_PASSWORD: '<YourStrong@Passw0rd>'\n    ports:\n      - '1435:1433'\n    networks:\n      - databases\n\n  azure-edge:\n    image: mcr.microsoft.com/azure-sql-edge\n    restart: unless-stopped\n    environment:\n      ACCEPT_EULA: 'Y'\n      MSSQL_SA_PASSWORD: '<YourStrong@Passw0rd>'\n    ports:\n      - '1433:1433'\n    networks:\n      - databases\n\n  mongo42:\n    image: prismagraphql/mongo-single-replica:4.2.17-bionic\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: 'prisma'\n      MONGO_INITDB_ROOT_PASSWORD: 'prisma'\n      MONGO_PORT: 27016\n      INIT_WAIT_SEC: $INIT_WAIT_SEC\n    networks:\n      - databases\n    ports:\n      - '27016:27016'\n\n  mongo44:\n    image: prismagraphql/mongo-single-replica:4.4.3-bionic\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: 'prisma'\n      MONGO_INITDB_ROOT_PASSWORD: 'prisma'\n      INIT_WAIT_SEC: $INIT_WAIT_SEC\n    ports:\n      - '27017:27017'\n    networks:\n      - databases\n\n  mongo42-single:\n    image: mongo:4.2\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: 'prisma'\n      MONGO_INITDB_ROOT_PASSWORD: 'prisma'\n      INIT_WAIT_SEC: $INIT_WAIT_SEC\n    ports:\n      - '27016:27017'\n    networks:\n      - databases\n\n  mongo44-single:\n    image: mongo:4.4\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: 'prisma'\n      MONGO_INITDB_ROOT_PASSWORD: 'prisma'\n      INIT_WAIT_SEC: $INIT_WAIT_SEC\n    ports:\n      - '27017:27017'\n    networks:\n      - databases\n\n  mongo5:\n    image: prismagraphql/mongo-single-replica:5.0.3\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: 'prisma'\n      MONGO_INITDB_ROOT_PASSWORD: 'prisma'\n      MONGO_PORT: 27018\n      INIT_WAIT_SEC: $INIT_WAIT_SEC\n    ports:\n      - '27018:27018'\n    networks:\n      - databases\n\n  mongo5-single:\n    image: mongo:5\n    restart: unless-stopped\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: 'prisma'\n      MONGO_INITDB_ROOT_PASSWORD: 'prisma'\n      INIT_WAIT_SEC: $INIT_WAIT_SEC\n    ports:\n      - '27018:27017'\n    networks:\n      - databases\n\n  mongo-express:\n    image: mongo-express\n    restart: unless-stopped\n    ports:\n      - 8081:8081\n    environment:\n      ME_CONFIG_MONGODB_ADMINUSERNAME: 'prisma'\n      ME_CONFIG_MONGODB_ADMINPASSWORD: 'prisma'\n      ME_CONFIG_MONGODB_URL: mongodb://prisma:prisma@mongo4-single:27017/\n    networks:\n      - databases\n\n  otel:\n    image: jaegertracing/all-in-one:1.35\n    restart: unless-stopped\n    environment:\n      COLLECTOR_OTLP_ENABLED: 'true'\n      COLLECTOR_ZIPKIN_HOST_PORT: ':9411'\n    ports:\n      - 6831:6831/udp\n      - 6832:6832/udp\n      - 5778:5778\n      - 16686:16686\n      - 4317:4317\n      - 4318:4318\n      - 14250:14250\n      - 14268:14268\n      - 14269:14269\n      - 9411:9411\n\n  prometheus:\n    image: prom/prometheus\n    restart: unless-stopped\n    volumes:\n      - ${PWD}/metrics/prometheus:/prometheus-data\n    command: --config.file=/prometheus-data/prometheus.yml\n    ports:\n      - 9090:9090\n  grafana:\n    image: grafana/grafana\n    volumes:\n      - ${PWD}/metrics/grafana/datasources:/etc/grafana/provisioning/datasources/\n      - ${PWD}/metrics/grafana/dashboards:/etc/grafana/provisioning/dashboards/\n    ports:\n      - 3000:3000\n\nnetworks:\n  databases: null\n",
            "libs/driver-adapters/executor/bench/Dockerfile": "FROM postgres:16\nCOPY seed.sql.gz .\nRUN gunzip seed.sql.gz && \\\n    mv seed.sql /docker-entrypoint-initdb.d/seed.sql"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile"
        ],
        "folders": [
            "bin"
        ]
    }
}