{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>pl.piomin.services</groupId>\r\n        <artifactId>sample-spring-microservices-new</artifactId>\r\n        <version>1.1-SNAPSHOT</version>\r\n    </parent>\r\n    <artifactId>config-service</artifactId>\r\n    <version>1.1-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-config-server</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n    <profiles>\r\n        <profile>\r\n            <id>build-image</id>\r\n            <build>\r\n                <plugins>\r\n                    <plugin>\r\n                        <groupId>com.google.cloud.tools</groupId>\r\n                        <artifactId>jib-maven-plugin</artifactId>\r\n                        <version>3.4.4</version>\r\n                        <configuration>\r\n                            <from>\r\n                                <image>eclipse-temurin:21-jdk</image>\r\n                            </from>\r\n                            <to>\r\n                                <image>piomin/${project.artifactId}:${project.version}</image>\r\n                            </to>\r\n                        </configuration>\r\n                        <executions>\r\n                            <execution>\r\n                                <goals>\r\n                                    <goal>dockerBuild</goal>\r\n                                </goals>\r\n                                <phase>package</phase>\r\n                            </execution>\r\n                        </executions>\r\n                    </plugin>\r\n                </plugins>\r\n            </build>\r\n        </profile>\r\n    </profiles>\r\n</project>"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: \"3.7\"\nservices:\n  zipkin:\n    container_name: zipkin\n    image: openzipkin/zipkin\n    extra_hosts: [ 'host.docker.internal:host-gateway' ]\n    ports:\n      - \"9411:9411\"\n  config-service:\n    image: piomin/config-service:1.1-SNAPSHOT\n    ports:\n      - \"8088:8088\"\n    healthcheck:\n      test: curl --fail http://localhost:8088/employee/docker  || exit 1\n      interval: 5s\n      timeout: 2s\n      retries: 3\n  discovery-service:\n    image: piomin/discovery-service:1.1-SNAPSHOT\n    ports:\n      - \"8061:8061\"\n    depends_on:\n      config-service:\n        condition: service_healthy\n    links:\n      - config-service\n    healthcheck:\n      test: curl --fail http://localhost:8061/eureka/v2/apps || exit 1\n      interval: 4s\n      timeout: 2s\n      retries: 3\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n  employee-service:\n    image: piomin/employee-service:1.2-SNAPSHOT\n    ports:\n      - \"8080\"\n    depends_on:\n      discovery-service:\n        condition: service_healthy\n    links:\n      - config-service\n      - discovery-service\n      - zipkin\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n  department-service:\n    image: piomin/department-service:1.2-SNAPSHOT\n    ports:\n      - \"8080\"\n    depends_on:\n      discovery-service:\n        condition: service_healthy\n    links:\n      - config-service\n      - discovery-service\n      - employee-service\n      - zipkin\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n  organization-service:\n    image: piomin/organization-service:1.2-SNAPSHOT\n    ports:\n      - \"8080\"\n    depends_on:\n      discovery-service:\n        condition: service_healthy\n    links:\n      - config-service\n      - discovery-service\n      - employee-service\n      - department-service\n      - zipkin\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n  gateway-service:\n    image: piomin/gateway-service:1.1-SNAPSHOT\n    ports:\n      - \"8060:8060\"\n    depends_on:\n      discovery-service:\n        condition: service_healthy\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n    links:\n      - config-service\n      - discovery-service\n      - employee-service\n      - department-service\n      - organization-service\n      - zipkin",
            "config-service/Dockerfile": "FROM openjdk:8-jre-alpine\r\nENV APP_FILE config-service-1.0-SNAPSHOT.jar\r\nENV APP_HOME /app\r\nEXPOSE 8088\r\nCOPY target/$APP_FILE $APP_HOME/\r\nWORKDIR $APP_HOME\r\nENTRYPOINT [\"sh\", \"-c\"]\r\nCMD [\"exec java -jar $APP_FILE\"]",
            "config-service/Jenkinsfile": "node('dind-node') {\r\n  withMaven(maven:'M3') {\r\n    stage('Checkout') {\r\n      git url: 'https://github.com/piomin/sample-spring-microservices-new.git', credentialsId: 'piomin-github', branch: 'master'\r\n    }\r\n    stage('Build') {\r\n      dir('config-service') {\r\n        sh 'mvn clean install'\r\n        def pom = readMavenPom file:'pom.xml'\r\n        print pom.version\r\n        env.version = pom.version\r\n        currentBuild.description = \"Release: ${env.version}\"\r\n      }\r\n    }\r\n    stage('Image') {\r\n      dir ('config-service') {\r\n        docker.withRegistry('https://192.168.99.100:5000') {\r\n          def app = docker.build \"piomin/config-service:${env.version}\"\r\n          app.push()\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
            ".circleci/config.yml": "version: 2.1\n\njobs:\n  build:\n    docker:\n      - image: 'cimg/openjdk:21.0.6'\n    steps:\n      - checkout\n      - run:\n          name: Analyze on SonarCloud\n          command: mvn verify sonar:sonar\n\nexecutors:\n  jdk:\n    docker:\n      - image: 'cimg/openjdk:21.0.6'\n\norbs:\n  maven: circleci/maven@2.0.0\n\nworkflows:\n  maven_test:\n    jobs:\n      - maven/test:\n          executor: jdk\n      - build:\n          context: SonarCloud\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "Jenkinsfile",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}