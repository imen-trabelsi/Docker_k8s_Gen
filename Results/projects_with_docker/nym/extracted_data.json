{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"@nymproject/nymsphere\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"license\": \"Apache 2.0\",\n  \"workspaces\": [\n    \"dist/wasm/**\",\n    \"dist/node/**\",\n    \"dist/ts/**\",\n    \"sdk/typescript/packages/mui-theme\",\n    \"sdk/typescript/packages/react-components\",\n    \"sdk/typescript/packages/validator-client\",\n    \"ts-packages/*\",\n    \"nym-wallet\",\n    \"explorer\",\n    \"explorer-nextjs\",\n    \"types\",\n    \"clients/validator\"\n  ],\n  \"scripts\": {\n    \"nuke\": \"npx rimraf **/node_modules node_modules\",\n    \"scrub\": \"npx rimraf **/dist dist\",\n    \"clean\": \"lerna run clean\",\n    \"build\": \"run-s build:types build:packages\",\n    \"build:wasm\": \"make sdk-wasm-build\",\n    \"build:types\": \"lerna run --scope @nymproject/types build --stream\",\n    \"build:packages\": \"run-s build:packages:theme build:packages:react\",\n    \"build:packages:theme\": \"lerna run --scope @nymproject/mui-theme build\",\n    \"build:packages:react\": \"lerna run --scope @nymproject/react build\",\n    \"build:react-example\": \"lerna run --scope @nymproject/react-webpack-with-theme-example build --stream\",\n    \"build:playground\": \"lerna run --scope @nymproject/react storybook:build --stream\",\n    \"build:ci:storybook\": \"yarn build && yarn dev:on && run-p build:react-example build:playground && yarn build:ci:storybook:collect-artifacts\",\n    \"build:ci:storybook:collect-artifacts\": \"mkdir -p ts-packages/dist && mv sdk/typescript/packages/react-components/storybook-static ts-packages/dist/storybook && mv sdk/typescript/examples/react/mui-theme/dist ts-packages/dist/example\",\n    \"prebuild:ci\": \"yarn dev:on && yarn\",\n    \"build:ci\": \"run-s build:types build:packages build:wasm build:ci:sdk\",\n    \"postbuild:ci\": \"yarn dev:off\",\n    \"build:ci:sdk\": \"lerna run --scope '{@nymproject/sdk,@nymproject/node-tester,@nymproject/contract-clients,@nymproject/sdk-react,@nymproject/mix-fetch,@nymproject/nodejs-client,@nymproject/mix-fetch-node}' build --stream\",\n    \"docs:prod:build\": \"run-s docs:prod:build:ws\",\n    \"docs:prod:build:ws\": \"lerna run docs:prod:build --stream\",\n    \"sdk:build\": \"./sdk/typescript/scripts/build-prod-sdk.sh\",\n    \"sdk:publish\": \"./sdk/typescript/scripts/publish.sh\",\n    \"lint\": \"lerna run lint --stream\",\n    \"lint:fix\": \"lerna run lint:fix --stream\",\n    \"tsc\": \"lerna run tsc --stream\",\n    \"types:lint:fix\": \"lerna run lint:fix --scope @nymproject/types --scope @nymproject/nym-wallet-app\",\n    \"audit:fix\": \"npm_config_yes=true npx yarn-audit-fix -- --dry-run\",\n    \"dev:on\": \"node sdk/typescript/scripts/dev-mode-add.mjs\",\n    \"dev:off\": \"node sdk/typescript/scripts/dev-mode-remove.mjs\"\n  },\n  \"devDependencies\": {\n    \"@npmcli/node-gyp\": \"^3.0.0\",\n    \"lerna\": \"^7.3.0\",\n    \"node-gyp\": \"^9.3.1\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"tslog\": \"3.3.3\"\n  },\n  \"dependencies\": {\n    \"lucide-react\": \"^0.453.0\"\n  }\n}"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: \"3.7\"\n\nx-network: &NETWORK\n  BECH32_PREFIX: nymt\n  DENOM: nymt\n  STAKE_DENOM: nyxt\n  WASMD_VERSION: v0.27.0\n\nservices:\n  genesis_validator:\n    build:\n      context: docker/validator\n      args: *NETWORK\n    image: validator:latest\n    ports:\n      - \"26657:26657\"\n      - \"1317:1317\"\n    container_name: genesis_validator\n    volumes:\n      - \"genesis_volume:/genesis_volume\"\n      - \"genesis_nyxd:/root/.nyxd\"\n    environment: *NETWORK\n    networks:\n      localnet:\n        ipv4_address: 172.168.10.2\n    command: [\"genesis\"]\n  secondary_validator:\n    build:\n      context: docker/validator\n      args: *NETWORK\n    image: validator:latest\n    ports:\n      - \"36657:26657\"\n      - \"2317:1317\"\n    volumes:\n      - \"genesis_volume:/genesis_volume\"\n      - \"secondary_nyxd:/root/.nyxd\"\n    environment: *NETWORK\n    networks:\n      localnet:\n        ipv4_address: 172.168.10.3\n    depends_on:\n      - \"genesis_validator\"\n    command: [\"secondary\"]\n  #        mixnet_contract:\n  #                build: docker/mixnet_contract\n  #                image: contract:latest\n  #                volumes:\n  #                        - \".:/nym\"\n  #        vesting_contract:\n  #                build: docker/vesting_contract\n  #                image: vesting_contract:latest\n  #                volumes:\n  #                - \".:/nym\"\n  #        contract_uploader:\n  #                build: docker/typescript_client\n  #                image: contract_uploader:typescript\n  #                volumes:\n  #                        - \"genesis_volume:/genesis_volume:ro\"\n  #                        - \"contract_volume:/contract_volume\"\n  #                        - \".:/nym\"\n  #                depends_on:\n  #                        - \"genesis_validator\"\n  #                        - \"secondary_validator\"\n  #                        - \"mixnet_contract\"\n  #                environment:\n  #                        BECH32_PREFIX: *BECH32_PREFIX\n  mnemonic_echo:\n    build: docker/mnemonic_echo\n    image: mnemonic_echo:latest\n    volumes:\n      - \"genesis_volume:/genesis_volume:ro\"\n    depends_on:\n      - \"genesis_validator\"\n      - \"secondary_validator\"\n\n  #        mongo:\n  #                image: mongo:latest\n  #                command:\n  #                        - --storageEngine=wiredTiger\n  #                volumes:\n  #                        - mongo_data:/data/db\n  #        block_explorer:\n  #                build:\n  #                        context: https://github.com/forbole/big-dipper.git#v0.41.x-7\n  #                image: block_explorer:v0.41.x-7\n  #                ports:\n  #                        - \"3080:3000\"\n  #                depends_on:\n  #                        - \"mongo\"\n  #                environment:\n  #                        ROOT_URL: ${APP_ROOT_URL:-http://localhost}\n  #                        MONGO_URL: mongodb://mongo:27017/meteor\n  #                        PORT: 3000\n  #                        METEOR_SETTINGS: ${METEOR_SETTINGS}\n  #        explorer:\n  #                build:\n  #                        context: docker/explorer\n  #                image: explorer:latest\n  #                ports:\n  #                        - \"3040:3000\"\n  #                depends_on:\n  #                        - \"genesis_validator\"\n  #                        - \"block_explorer\"\n\n  # service to update geoip binary database, for explorer-api\n  geoipupdate:\n    container_name: geoipupdate\n    image: maxmindinc/geoipupdate\n    restart: unless-stopped\n    environment:\n      GEOIPUPDATE_ACCOUNT_ID: ${GEOIPUPDATE_ACCOUNT_ID}\n      GEOIPUPDATE_LICENSE_KEY: ${GEOIPUPDATE_LICENSE_KEY}\n      GEOIPUPDATE_EDITION_IDS: ${GEOIPUPDATE_EDITION_IDS}\n      GEOIPUPDATE_FREQUENCY: ${GEOIPUPDATE_FREQUENCY}\n    networks:\n      - geoipupdate\n    volumes:\n      - ${GEOIP_DB_DIRECTORY}:/usr/share/GeoIP\n\nvolumes:\n  genesis_volume:\n  genesis_nyxd:\n  secondary_nyxd:\n\n#        contract_volume:\n#        mongo_data:\n\nnetworks:\n  geoipupdate:\n  localnet:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.168.10.0/25\n"
        },
        "static_files": {
            "assets/README.md": "# Shared assets\n\nThis directory contains asset files shared by many projects in this repo.\n\nYou will find:\n\n- favicons\n- logos\n- shared fonts\n- shared icon SVGs\n\nSee [ts-packages/react-webpack-with-theme-example](../ts-packages/react-webpack-with-theme-example) for examples of usage.",
            "assets/fonts/non-variable/README.md": "Update fonts by doing the following:\n\n1. Go to https://fonts.google.com/specimen/Open+Sans\n2. Add all the styles you want and select `@import`\n3. Copy the url (e.g. curl https://fonts.googleapis.com/css2\\?family\\=Open+Sans:ital,wght@0,300\\;0,400\\;0,500\\;0,600\\;0,700\\;0,800\\;1,300\\;1,400\\;1,500\\;1,600\\;1,700\\;1,800\\&display\\=swap)\n4. Run `curl curl https://fonts.googleapis.com/css2\\?family\\=Open+Sans:ital,wght@0,300\\;0,400\\;0,500\\;0,600\\;0,700\\;0,800\\;1,300\\;1,400\\;1,500\\;1,600\\;1,700\\;1,800\\&display\\=swap`\n5. Use the response as the CSS import directives and download the font files for each font weight\n6. Remember to delete any old font files"
        }
    },
    "project_structure": {
        "files": [
            "Cargo.toml",
            "Dockerfile",
            "README.md",
            "README_SQLX.md",
            "build.rs"
        ],
        "folders": [
            ".sqlx",
            "migrations",
            "src"
        ]
    }
}