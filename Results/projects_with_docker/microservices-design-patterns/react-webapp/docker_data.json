{
    "docker_info": {
        "base_image": "node:22-slim",
        "multi_stage_build": false,
        "exposed_ports": [
            "$PORT"
        ],
        "user": [],
        "labels": [],
        "health_checks": [],
        "build_args": [
            "PORT",
            "NODE_ENV",
            "PORT",
            "NODE_ENV"
        ],
        "envs": [
            "ENV PATH /usr/src/app/node_modules/.bin:$PATH",
            "ENV NODE_ENV=${NODE_ENV}",
            "ENV PORT=${PORT}",
            "ENV NODE_ENV=${NODE_ENV}",
            "ENV JAVA_CMD=\"nginx-debug\""
        ],
        "copy_instructions": [
            "WORKDIR /usr/src/app",
            "COPY package*.json ./",
            "COPY . .",
            "COPY --from=builder /usr/src/app/build /usr/share/nginx/html",
            "COPY --from=builder /usr/src/app/nginx.conf /etc/nginx/conf.d/default.conf"
        ],
        "execution": [
            {
                "command": "cmd",
                "arguments": [
                    "[\"nginx-debug\"]"
                ]
            }
        ],
        "run": [
            [
                "apt-get update && apt-get install npm nodejs -y && apt-get install netcat-openbsd -y",
                ""
            ],
            [
                "npm install --legacy-peer-dep",
                "RUN npm install react-scripts -g --legacy-peer-dep"
            ],
            [
                "if [\"$NODE_ENV\" = \"development\"]; then mv .env .env.production & echo .env.production; fi",
                ""
            ],
            [
                "PUBLIC_URL=/react-webapp npm run build",
                ""
            ],
            [
                "echo \"PORT = $PORT\"",
                ""
            ],
            [
                "echo \"NODE_ENV = $NODE_ENV\"",
                ""
            ],
            [
                "sed -i 's/PORT/'\"$PORT\"'/g' /etc/nginx/conf.d/default.conf",
                ""
            ],
            [
                "echo \"daemon off;\" >> /etc/nginx/nginx.conf",
                ""
            ]
        ]
    }
}