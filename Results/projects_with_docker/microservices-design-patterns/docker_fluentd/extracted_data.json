{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.4.3</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\t<groupId>com.springboot</groupId>\n\t<artifactId>microservice</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>pom</packaging>\n\t<name>springboot-parent-pom</name>\n\t<description>Spring Boot - Parent Pom</description>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>21</java.version>\n\t\t<mapstruct.version>1.6.2</mapstruct.version>\n\t\t<spring-cloud.version>2024.0.0</spring-cloud.version>\n\t\t<docker.image.name>${project.artifactId}</docker.image.name>\n\t\t<docker.image.from>openjdk:21-jdk</docker.image.from>\n\t\t<!-- Not working on mac m1 -->\n\t\t<!-- <docker.image.from.fabric8>ghcr.io/graalvm/graalvm-ce:java17-21</docker.image.from.fabric8> -->\n\t\t<docker.image.from.fabric8>openjdk:21-jdk</docker.image.from.fabric8>\n\t\t<code-coverage>0.8</code-coverage>\n\t\t<dockerfile-maven-plugin.version>1.3.4</dockerfile-maven-plugin.version>\n\t\t<docker.env.JAVA_OPTS>--enable-preview -Xmx512m -Dfile.encoding=UTF-8 -XX:+UseG1GC -verbose:gc -XX:+PrintGCDetails -Xloggc:/var/log/gc.log -Djava.security.egd=file:/dev/./urandom</docker.env.JAVA_OPTS>\n\t\t<spring-native.version>0.12.1</spring-native.version>\n\t\t<repackage.classifier/>\n\t\t<lombok.version>1.18.30</lombok.version>\n\t</properties>\n\n\t<modules>\n\t\t<module>person-service</module>\n\t\t<module>web-common</module>\n\t\t<module>authentication-service</module>\n\t\t<module>edge-server</module>\n\t\t<module>user-service</module>\n\t\t<module>admin-server</module>\n\t\t<module>authentication-common</module>\n\t\t<module>kotlin-service</module>\n\t\t<module>quarkus-service</module>\n\t\t<module>redis-jackson-security-webauthn-otp</module>\n\t</modules>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\n\t\t\t\t<version>${spring-cloud.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.mapstruct</groupId>\n\t\t\t\t<artifactId>mapstruct</artifactId>\n\t\t\t\t<version>${mapstruct.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.mapstruct</groupId>\n\t\t\t\t<artifactId>mapstruct-processor</artifactId>\n\t\t\t\t<version>${mapstruct.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.github.rodrigorodrigues</groupId>\n\t\t\t\t<artifactId>spring-data-commons</artifactId>\n\t\t\t\t<version>3.5.0-SNAPSHOT</version>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t</dependencyManagement>\n\n\t<build>\n\t\t<pluginManagement>\n\t\t\t<plugins>\n\t\t\t\t<!--<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-install-plugin</artifactId>\n\t\t\t\t\t<version>3.1.1</version>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<id>install-custom-spring-data-jar-into-local-maven-repo</id>\n\t\t\t\t\t\t\t<phase>initialize</phase>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>install-file</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t<groupId>org.springframework.data</groupId>\n\t\t\t\t\t\t\t\t<artifactId>spring-data-commons</artifactId>\n\t\t\t\t\t\t\t\t<version>3.2.1-SNAPSHOT</version>\n\t\t\t\t\t\t\t\t<file>docs/spring-data-commons-3.2.1-SNAPSHOT.jar</file>\n\t\t\t\t\t\t\t\t<packaging>jar</packaging>\n\t\t\t\t\t\t\t\t<generatePom>true</generatePom>\n\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t</plugin>-->\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<version>3.11.0</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<release>${java.version}</release>\n\t\t\t\t\t\t<enablePreview>true</enablePreview>\n\t\t\t\t\t\t<annotationProcessorPaths>\n\t\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t\t\t<version>${lombok.version}</version>\n\t\t\t\t\t\t\t</path>\n\t\t\t\t\t\t\t<!-- This is needed when using Lombok 1.18.16 and above -->\n\t\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t\t<artifactId>lombok-mapstruct-binding</artifactId>\n\t\t\t\t\t\t\t\t<version>0.2.0</version>\n\t\t\t\t\t\t\t</path>\n\n\t\t\t\t\t\t\t<path>\n\t\t\t\t\t\t\t\t<groupId>org.mapstruct</groupId>\n\t\t\t\t\t\t\t\t<artifactId>mapstruct-processor</artifactId>\n\t\t\t\t\t\t\t\t<version>${mapstruct.version}</version>\n\t\t\t\t\t\t\t</path>\n\t\t\t\t\t\t</annotationProcessorPaths>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n\t\t\t\t\t<version>2.22.2</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<argLine>--enable-preview</argLine>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>io.fabric8</groupId>\n\t\t\t\t\t<artifactId>docker-maven-plugin</artifactId>\n\t\t\t\t\t<version>0.43.4</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<skip>true</skip>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t\t<version>0.8.8</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<excludes>\n\t\t\t\t\t\t\t<exclude>**/model/**/*</exclude>\n\t\t\t\t\t\t\t<exclude>**/dto/**/*</exclude>\n\t\t\t\t\t\t\t<exclude>**/constants/**/*</exclude>\n\t\t\t\t\t\t\t<exclude>**/*Configuration*.*</exclude>\n\t\t\t\t\t\t\t<exclude>**/*Properties*.*</exclude>\n\t\t\t\t\t\t\t<exclude>**/*Application*.*</exclude>\n\t\t\t\t\t\t\t<exclude>**/test/**/*</exclude>\n\t\t\t\t\t\t</excludes>\n\t\t\t\t\t</configuration>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>prepare-agent</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<id>report</id>\n\t\t\t\t\t\t\t<phase>test</phase>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>report</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<id>jacoco-check</id>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>check</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t<rules>\n\t\t\t\t\t\t\t\t\t<rule>\n\t\t\t\t\t\t\t\t\t\t<element>PACKAGE</element>\n\t\t\t\t\t\t\t\t\t\t<limits>\n\t\t\t\t\t\t\t\t\t\t\t<limit>\n\t\t\t\t\t\t\t\t\t\t\t\t<counter>LINE</counter>\n\t\t\t\t\t\t\t\t\t\t\t\t<value>COVEREDRATIO</value>\n\t\t\t\t\t\t\t\t\t\t\t\t<minimum>${code-coverage}</minimum>\n\t\t\t\t\t\t\t\t\t\t\t</limit>\n\t\t\t\t\t\t\t\t\t\t</limits>\n\t\t\t\t\t\t\t\t\t</rule>\n\t\t\t\t\t\t\t\t</rules>\n\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>com.google.cloud.tools</groupId>\n\t\t\t\t\t<artifactId>jib-maven-plugin</artifactId>\n\t\t\t\t\t<version>3.2.1</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<skip>true</skip>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.graalvm.buildtools</groupId>\n\t\t\t\t\t<artifactId>native-maven-plugin</artifactId>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<excludes>\n\t\t\t\t\t\t\t<exclude>\n\t\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t\t\t\t</exclude>\n\t\t\t\t\t\t</excludes>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</pluginManagement>\n\t</build>\n\n\t<repositories>\n\t\t<repository>\n\t\t\t<id>spring-milestones</id>\n\t\t\t<name>Spring Milestones</name>\n\t\t\t<url>https://repo.spring.io/milestone</url>\n\t\t</repository>\n\n\t\t<repository>\n\t\t\t<id>spring-releases</id>\n\t\t\t<name>Spring Releases</name>\n\t\t\t<url>https://repo.spring.io/release</url>\n\t\t</repository>\n\n\t\t<repository>\n\t\t\t<id>spring-snapshots</id>\n\t\t\t<name>Spring Snapshots</name>\n\t\t\t<url>https://repo.spring.io/snapshot</url>\n\t\t\t<releases>\n\t\t\t\t<enabled>false</enabled>\n\t\t\t</releases>\n\t\t</repository>\n\n\t\t<repository>\n\t\t\t<id>jitpack.io</id>\n\t\t\t<url>https://jitpack.io</url>\n\t\t</repository>\n\n\t\t<repository>\n\t\t\t<id>github</id>\n\t\t\t<url>https://maven.pkg.github.com/rodrigorodrigues/spring-data-commons</url>\n\t\t\t<snapshots>\n\t\t\t\t<enabled>true</enabled>\n\t\t\t</snapshots>\n\t\t</repository>\n\n\t</repositories>\n\n\t<pluginRepositories>\n\t\t<pluginRepository>\n\t\t\t<id>spring-milestones</id>\n\t\t\t<name>Spring Milestones</name>\n\t\t\t<url>https://repo.spring.io/milestone</url>\n\t\t</pluginRepository>\n\n\t\t<pluginRepository>\n\t\t\t<id>spring-releases</id>\n\t\t\t<name>Spring Releases</name>\n\t\t\t<url>https://repo.spring.io/release</url>\n\t\t</pluginRepository>\n\n\t\t<pluginRepository>\n\t\t\t<id>spring-snapshots</id>\n\t\t\t<name>Spring Snapshots</name>\n\t\t\t<url>https://repo.spring.io/snapshot</url>\n\t\t</pluginRepository>\n\t</pluginRepositories>\n</project>\n"
        },
        "database": "Redis",
        "build_system": "Maven",
        "config_files": {
            "docker/.env": "COMPOSE_CONVERT_WINDOWS_PATHS=1\n",
            "docker/docker-compose.yml": "version: '3.5'\nservices:\n  service-discovery:\n    image: hashicorp/consul:latest\n    container_name: service-discovery\n    environment:\n      - CONSUL_LOCAL_CONFIG={\"enable_debug\":true}\n    ports:\n      - 8500:8500\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n    command: \"agent -server -bootstrap -ui -client=0.0.0.0\"\n    networks:\n      net:\n        aliases:\n          - service-discovery\n\n  service-discovery-load-configuration:\n    image: appropriate/curl\n    container_name: service-discovery-load-configuration\n    depends_on:\n      - service-discovery\n    networks:\n      net:\n        aliases:\n          - service-discovery\n    command: /service-discovery-load-configuration.sh\n    volumes:\n      - ./service-discovery-load-configuration.sh:/service-discovery-load-configuration.sh:ro\n      - ./spring-cloud-config:/spring-cloud-config:ro\n\n  gateway:\n    image: edge-server:0.0.1-SNAPSHOT\n    container_name: gateway\n    environment:\n      - SPRING_DATA_REDIS_HOST=redisdb\n      - SPRING_PROFILES_ACTIVE=prod,auth,consul,cors\n      - CONSUL_URL=service-discovery:8500\n      - SPRING_CONFIG_IMPORT=consul:service-discovery:8500\n      - SERVER_PORT=8080\n      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017/docker\n      - SPRING_DATA_MONGODB_DATABASE=docker\n      - MANAGEMENT_ENDPOINTS_WEB_CORS_ALLOW_CREDENTIALS=false\n      - DEBUG=true\n      - SPRING_CLOUD_KUBERNETES_ENABLED=false\n#      - LOGGING_LEVEL_COM_SPRINGBOOT=debug\n      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_GATEWAY=trace\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=trace\n      - OPENTRACING_JAEGER_UDP_SENDER_HOST=jaeger\n      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true\n      - SPRING_MAIN_WEB_APPLICATION_TYPE=reactive\n      - COM_MICROSERVICE_AUTHENTICATION_REDIS_ENABLED=true\n      - JAVA_OPTS=--enable-preview -Xss256K -Xms1M -XX:+UseSerialGC -Djava.compiler=none -XX:ReservedCodeCacheSize=2496k -XX:MaxDirectMemorySize=1M\n#      - MANAGEMENT_HEALTH_REDIS_ENABLED=false\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_VALUE=\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE=file:/www.spendingbetter.com.jks\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE_PASSWORD=${CERT_PASSWORD}\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_ALIAS=spendingbetter\n      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://localhost:9999/.well-known/jwks.json\n#      - SPRING_CLOUD_GATEWAY_GLOBAL_CORS_ADD_TO_SIMPLE_URL_HANDLER_MAPPING=true\n    depends_on:\n      - service-discovery\n    ports:\n      - 8080:8080\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#      - /Users/rodrigo/Downloads/ssl/old/www.spendingbetter.com.jks:/www.spendingbetter.com.jks\n#    command: sh ./docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - gateway\n\n  monitoring:\n    image: admin-server:0.0.1-SNAPSHOT\n    container_name: monitoring\n    environment:\n      - SPRING_DATA_REDIS_HOST=redisdb\n      - SPRING_PROFILES_ACTIVE=consul,auth,prod\n#      - CONSUL_URL=service-discovery:8500\n      - SPRING_CONFIG_IMPORT=consul:service-discovery:8500\n      - SPRING_CLOUD_KUBERNETES_ENABLED=false\n      - SERVER_PORT=9002\n      - SPRING_DATA_MONGODB_HOST=mongodb-datasource\n      - SPRING_DATA_MONGODB_DATABASE=docker\n      - LOGGING_LEVEL_COM_SPRINGBOOT=debug\n      - OAUTH_CLIENT_ID=actuator\n      - OAUTH_CLIENT_SECRET=actuator_password\n      - CONTEXTPATH=/monitoring\n      - LOGGING_LEVEL_COM_MICROSERVICE=debug\n      - MANAGEMENT_ENDPOINTS_WEB_CORS_ALLOW_CREDENTIALS=false\n      - SPRING_CLOUD_KUBERNETES_LOADBALANCER_ENABLED=false\n      - COM_MICROSERVICE_AUTHENTICATION_REDIS_ENABLED=true\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_VALUE=\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE=file:/www.spendingbetter.com.jks\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE_PASSWORD=${CERT_PASSWORD}\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_ALIAS=spendingbetter\n    depends_on:\n      - service-discovery\n    ports:\n      - 9002:9002\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#      - /Users/rodrigo/Downloads/ssl/old/www.spendingbetter.com.jks:/www.spendingbetter.com.jks\n    networks:\n      net:\n        aliases:\n          - monitoring\n\n  react-webapp:\n    build:\n      args:\n        - PORT=3003\n        - NODE_ENV=development\n      context: ../react-webapp\n      dockerfile: Dockerfile\n    container_name: react-webapp\n    environment:\n      - NODE_ENV=development\n    ports:\n      - 3003:3003\n#    links:\n#      - gateway\n    volumes:\n      - ./docker-entrypoint.sh:/tmp/docker-entrypoint.sh\n    #            - .:/usr/src/app\n    #            - ./node_modules:/usr/src/app/node_modules\n    command: sh /tmp/docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - react-webapp\n\n  week-menu-api:\n    build:\n      context: ../nodejs-service\n      dockerfile: Dockerfile\n    container_name: week-menu-api\n    environment:\n      - SPRING_PROFILES_ACTIVE=docker\n      - CONFIG_SERVER=http://localhost:8888\n      - SERVER_PORT=3002\n      - MONGODB_URI=mongodb://mongodb-datasource:27017/docker\n      - CONSUL_URL=service-discovery:8500\n      - EUREKA_PORT=8761\n      #            - DEBUG=*\n      #            - NODE_DEBUG=request\n      - HOST_NAME=week-menu-api\n      - IP_ADDRESS=week-menu-api\n    depends_on:\n      - service-discovery\n    links:\n      - service-discovery\n    ports:\n      - 3002:3002\n    volumes:\n      - ./docker-entrypoint.sh:/tmp/docker-entrypoint.sh\n    command: sh /tmp/docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - week-menu-api\n\n  receipt-api:\n    build:\n      args:\n        - PORT=8086\n      context: ../python-service\n      dockerfile: Dockerfile\n    container_name: receipt-api\n    environment:\n      - ENV_FILE_LOCATION=./.env\n      - CONSUL_URL=http://service-discovery:8500\n      - MONGODB_URI=mongodb://mongodb-datasource/docker\n      - SERVER_PORT=8086\n      - LOG_LEVEL=TRACE\n      - JAEGER_HOST=jaeger\n    depends_on:\n      - service-discovery\n      - mongodb-datasource\n      - jaeger\n    ports:\n      - 8086:8086\n    networks:\n      net:\n        aliases:\n          - receipt-api\n\n  post-api:\n    build:\n      args:\n        - PORT=3006\n        - ENV=docker\n      context: ../go-service\n      dockerfile: Dockerfile\n    container_name: post-api\n    environment:\n      - CONSUL_URL=service-discovery:8500\n      - MONGODB_URI=mongodb://mongodb-datasource\n      - MONGODB_DATABASE=docker\n      - SERVER_PORT=3006\n      - LOG_LEVEL=TRACE\n    depends_on:\n      - service-discovery\n      - mongodb-datasource\n    ports:\n      - 3006:3006\n    volumes:\n      - ./docker-entrypoint.sh:/tmp/docker-entrypoint.sh\n    command: sh /tmp/docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - post-api\n\n  person-api:\n    image: person-service:0.0.1-SNAPSHOT\n    container_name: person-api\n    environment:\n      - SPRING_PROFILES_ACTIVE=consul,prod #,kafka,callPostApi\n      - CONSUL_URL=service-discovery:8500\n      - SPRING_CONFIG_IMPORT=consul:service-discovery:8500\n      - SERVER_PORT=8082\n      - SPRING_CLOUD_KUBERNETES_ENABLED=false\n      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017/docker\n      - SPRING_DATA_MONGODB_DATABASE=docker\n      - OPENTRACING_JAEGER_UDP_SENDER_HOST=jaeger\n      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=trace\n      - MANAGEMENT_ENDPOINTS_WEB_CORS_ALLOW_CREDENTIALS=false\n      - DEBUG=true\n      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=trace\n      - JAVA_OPTS=--enable-preview\n      - SPRING_MAIN_ALLOW_BEAN_DEFINITION_OVERRIDING=true\n      - LOGGING_LEVEL_ORG_APACHE_COYOTE_HTTP11=trace\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_VALUE=\n#      - com.microservice.authentication.jwt.publicKeyStore=file:/www.spendingbetter.com.pub\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE_PASSWORD=${CERT_PASSWORD}\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_ALIAS=spendingbetter\n    depends_on:\n      - service-discovery\n      - mongodb-datasource\n      - jaeger\n      - service-discovery-load-configuration\n#      - kafka\n    ports:\n      - 8082:8082\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#      - /Users/rodrigo/Downloads/ssl/old/www.spendingbetter.com.pub:/www.spendingbetter.com.pub\n#    command: sh ./docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - person-api\n\n  task-api:\n    image: kotlin-service:0.0.1-SNAPSHOT\n    container_name: task-api\n    environment:\n      - SPRING_PROFILES_ACTIVE=consul,dev\n      - CONSUL_URL=service-discovery:8500\n      - SPRING_CONFIG_IMPORT=consul:service-discovery:8500\n      - SERVER_PORT=8084\n      - SPRING_CLOUD_KUBERNETES_ENABLED=false\n      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017\n      - SPRING_DATA_MONGODB_DATABASE=docker\n      - OPENTRACING_JAEGER_UDP_SENDER_HOST=jaeger\n      - MANAGEMENT_ENDPOINTS_WEB_CORS_ALLOW_CREDENTIALS=false\n      - LOGGING_LEVEL_COM_MICROSERVICE=trace\n      #- DEBUG=true\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=trace\n    depends_on:\n      - service-discovery\n      - mongodb-datasource\n      - jaeger\n      - service-discovery-load-configuration\n    ports:\n      - 8084:8084\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#    command: sh ./docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - task-api\n\n  company-api:\n    image: quarkus-service:0.0.1-SNAPSHOT\n    container_name: company-api\n    environment:\n      - QUARKUS_PROFILE=quarkus,consul\n      - QUARKUS_CONSUL_CONFIG_ENABLED=true\n      - CONSUL_CLIENT_URL=http://service-discovery:8500\n      - QUARKUS_CONSUL_CONFIG_AGENT_HOST_PORT=http://service-discovery:8500\n      - QUARKUS_HTTP_PORT=8085\n      - MONGODB_URI=mongodb://mongodb-datasource:27017\n      - MONGODB_DATABASE=docker\n      - LOG_LEVEL_ROOT=DEBUG\n      - QUARKUS_LOG_LEVEL_ROOT=DEBUG\n      - QUARKUS_LOG_CATEGORY_COM_ORBITZ_CONSUL=DEBUG\n      - PUBLIC_KEY_PATH=/jwks.json\n      - QUARKUS_CONSUL_CONFIG_PROPERTIES_VALUE_KEYS=config/quarkus-service/data\n      - MP_JWT_VERIFY_PUBLICKEY_LOCATION=http://gateway:8080/.well-known/jwks.json\n#      - QUARKUS_SMALLRYE_HEALTH_ROOT_PATH=/actuator/health\n    depends_on:\n      - service-discovery\n      - mongodb-datasource\n    restart: on-failure\n    healthcheck:\n      test: \"curl --fail --silent localhost:8085/actuator/health | grep true || exit 1\"\n      interval: 5s\n      timeout: 3s\n      retries: 5\n      start_period: 2s\n    ports:\n      - 8085:8085\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#      - ./jwks.json:/jwks.json\n#    command: sh ./docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - task-api\n\n  user-api:\n    image: user-service:0.0.1-SNAPSHOT\n    container_name: user-api\n    environment:\n      - SPRING_PROFILES_ACTIVE=consul,dev\n      - CONSUL_URL=service-discovery:8500\n      - SPRING_CONFIG_IMPORT=consul:service-discovery:8500\n      - SERVER_PORT=8083\n      - SPRING_CLOUD_KUBERNETES_ENABLED=false\n      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017\n      - SPRING_DATA_MONGODB_DATABASE=docker\n      - MANAGEMENT_ENDPOINTS_WEB_CORS_ALLOW_CREDENTIALS=false\n      #- DEBUG=true\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=debug\n      - LOGGING_LEVEL_COM_MICROSERVICE=debug\n      - OPENTRACING_JAEGER_UDP_SENDER_HOST=jaeger\n    links:\n      - authentication-api\n      - jaeger\n    ports:\n      - 8083:8083\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#    command: sh ./docker-entrypoint.sh authentication-api:9999\n    networks:\n      net:\n        aliases:\n          - user-api\n\n  authentication-api:\n    # Using docker spring boot docker image\n    image: authentication-service:0.0.1-SNAPSHOT\n    # Using docker local jib maven\n    #image: authentication-service:latest #fielcapao/microservices-design-patterns-authentication-service\n    # Using docker raspberry pi image\n    #image: fielcapao/microservices-design-patterns-authentication-service\n    container_name: authentication-api\n    environment:\n      - SPRING_PROFILES_ACTIVE=consul,prod,auth\n      - SPRING_DATA_REDIS_HOST=redisdb\n      - CONSUL_URL=service-discovery:8500\n      - SERVER_PORT=9999\n      - SPRING_DATA_MONGODB_URI=mongodb://mongodb-datasource:27017/docker\n      - SPRING_DATA_MONGODB_DATABASE=docker\n      - SPRING_MAIN_ALLOW_CIRCULAR_REFERENCES=true\n      - COM_MICROSERVICE_AUTHENTICATION_REDIS_ENABLED=true\n      - DEBUG=true\n      - MANAGEMENT_ENDPOINTS_WEB_CORS_ALLOW_CREDENTIALS=false\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK=trace\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB=trace\n      - LOGGING_LEVEL_COM_MICROSERVICE=debug\n      - SPRING_CLOUD_KUBERNETES_ENABLED=false\n#      - LOGIN_ENABLED=false\n      - LOGIN_PORT=8080\n      - CLIENT_ID=${CLIENT_ID}\n      - CLIENT_SECRET=${CLIENT_SECRET}\n      - SPRING_CONFIG_IMPORT=consul:service-discovery:8500\n      - SPRING_CLOUD_CONSUL_DISCOVERY_PREFER_IP_ADDRESS=true\n      - JAVA_OPTS=--enable-preview -Xss256K -Xms1M -XX:+UseSerialGC -Djava.compiler=none -XX:ReservedCodeCacheSize=2496k -XX:MaxDirectMemorySize=1M\n      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005\n      #      - MANAGEMENT_HEALTH_REDIS_ENABLED=false\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_VALUE=\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE=file:/www.spendingbetter.com.jks\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_STORE_PASSWORD=${CERT_PASSWORD}\n#      - COM_MICROSERVICE_AUTHENTICATION_JWT_KEY_ALIAS=spendingbetter\n      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://localhost:9999/.well-known/jwks.json\n#      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=debug\n    depends_on:\n      - service-discovery\n      - mongodb-datasource\n      - gateway\n#      - monitoring\n      - redisdb\n#      - jaeger\n      - service-discovery-load-configuration\n    ports:\n      - 9999:9999\n      - 5005:5005\n    volumes:\n      - ./docker-entrypoint.sh:/docker-entrypoint.sh\n#      - /Users/rodrigo/Downloads/ssl/old/www.spendingbetter.com.jks:/www.spendingbetter.com.jks\n#    command: sh ./docker-entrypoint.sh service-discovery:8500\n    networks:\n      net:\n        aliases:\n          - authentication-api\n\n  mongodb-datasource:\n    image: mongo\n    command: mongod --port 27017\n    container_name: mongodb-datasource\n    ports:\n      - 27017:27017\n    deploy:\n      resources:\n        limits:\n          cpus: \"2\"\n          memory: \"512MB\"\n    networks:\n      net:\n        aliases:\n          - mongodb-datasource\n\n  redisdb:\n    image: redis:alpine\n    container_name: redisdb\n    ports:\n      - 6379:6379\n    networks:\n      net:\n        aliases:\n          - redisdb\n\n  prometheus:\n    image: prom/prometheus\n    container_name: prometheus\n    command:\n#      - '--web.external-url=http://localhost:8080/admin/prometheus/'\n      - '--web.route-prefix=/admin/prometheus'\n      - '--config.file=/etc/prometheus/prometheus.yml'\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n    ports:\n      - 9090:9090\n    depends_on:\n      - service-discovery\n    links:\n      - service-discovery\n    networks:\n      net:\n        aliases:\n          - prometheus\n\n#\n#  elasticsearch:\n#    image: elasticsearch\n#    container_name: elasticsearch\n#    ports:\n#      - \"9200:9200\"\n#\n#  kibana:\n#    image: kibana\n#    container_name: kibana\n#    links:\n#      - \"elasticsearch\"\n#    ports:\n#      - \"5601:5601\"\n#\n#  fluentd:\n#      build: ./fluentd\n#      container_name: fluentd\n#      volumes:\n#          - ./fluentd/fluent.conf:/fluentd/etc\n#      links:\n#          - \"elasticsearch\"\n#      ports:\n#          - \"24224:24224\"\n#          - \"24224:24224/udp\"\n\n  grafana-loki:\n    image: grafana/loki:2.6.1\n    container_name: grafana-loki\n    ports:\n      - \"3100:3100\"\n    volumes:\n        - ./loki-config.yaml:/etc/loki/local-config.yaml\n    command: -config.file=/etc/loki/local-config.yaml\n    networks:\n      net:\n        aliases:\n          - grafana-loki\n\n  grafana-promtail:\n    image: grafana/promtail:2.6.1\n    container_name: grafana-promtail\n    volumes:\n        - /tmp/log:/var/log\n        - ./promtail-config.yaml:/etc/promtail/config.yml\n    command: -config.file=/etc/promtail/config.yml\n    networks:\n        net:\n          aliases:\n            - grafana-promtail\n\n  grafana:\n    image: grafana/grafana\n    container_name: grafana\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_AUTH_ANONYMOUS_ENABLED=true\n      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer\n      - GF_SERVER_HTTP_PORT=3000\n      - GF_SERVER_DOMAIN=http://localhost:8080\n      - GF_SERVER_ROOT_URL=http://localhost:8080/admin/grafana\n      - GF_SERVER_SERVE_FROM_SUB_PATH=true\n#      - GF_AUTH_JWT_ENABLED=true\n#      - GF_AUTH_JWT_HEADER_NAME=Authorization\n#      - GF_AUTH_JWT_USERNAME_CLAIM=sub\n#      - GF_AUTH_JWT_EMAIL_CLAIM=sub\n#      - GF_AUTH_JWT_URL_LOGIN=http://localhost:8080/login\n#      - GF_AUTH_JWT_JWK_SET_URL=https://spendingbetter.com/.well-known/jwks.json\n#      - GF_AUTH_JWT_ROLE_ATTRIBUTE_PATH=contains(authorities[*], 'ROLE_ADMIN') && 'Admin' || contains(authorities[*], 'editor') && 'Editor' || 'Viewer'\n#      - GF_AUTH_JWT_ALLOW_ASSIGN_GRAFANA_ADMIN=true\n#      - GF_AUTH_JWT_AUTO_SIGN_UP=true\n#      - GF_AUTH_JWT_JWK_SET_FILE=/etc/grafana/jwks.json\n#      - GF_AUTH_BASIC_ENABLED=false\n#      - GF_DIAGNOSTICS_TRACING_ENABLED=true\n#      - GF_DIAGNOSTICS_TRACING_FILE=/tmp/trace.out\n#      - GF_AUTH_GENERIC_OAUTH_ENABLED=true\n#      - GF_AUTH_GENERIC_OAUTH_SCOPES=read\n#      - GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP=false\n#      - GF_AUTH_GENERIC_OAUTH_CLIENT_ID=client\n#      - GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET=secret\n#      - GF_AUTH_GENERIC_OAUTH_AUTH_URL=http://localhost:9999/oauth/authorize\n#      - GF_AUTH_GENERIC_OAUTH_TOKEN_URL=http://localhost:9999/oauth/token\n#      - GF_AUTH_GENERIC_OAUTH_API_URL=http://localhost:9999/api/authenticatedUser\n    volumes:\n      - ./jwks.json:/etc/grafana/jwks.json\n    networks:\n      net:\n        aliases:\n          - grafana\n\n  setup_grafana_datasource:\n    image: appropriate/curl\n    container_name: setup_grafana_datasource\n    depends_on:\n      - grafana\n    volumes:\n      - ./create-datasource-and-dashboard.sh:/create.sh:ro\n    command: /create.sh\n    networks:\n      net:\n        aliases:\n          - setup_grafana_datasource\n\n  otel-collector:\n    image: otel/opentelemetry-collector:latest #otel/opentelemetry-collector-contrib:0.9.0 #logzio/otel-collector-traces\n    container_name: otel-collector\n    command: [ \"--config=/etc/otel-collector-config.yaml\" ]\n    volumes:\n        - /var/log:/var/log\n        - ./otelcol-config.yaml:/etc/otel-collector-config.yaml\n    depends_on:\n        - jaeger\n    ports:\n        - \"1888:1888\"   # pprof extension\n        - \"13133:13133\" # health_check extension\n        - \"4317:4317\"   # OTLP gRPC receiver\n        - \"55679:55679\" # zpages extension\n    networks:\n      net:\n        aliases:\n          - otel-collector\n\n  apm-server:\n    image: docker.elastic.co/apm/apm-server:7.9.1\n    container_name: apm-server\n    command:\n      - -e\n      - --E\n      - output.elasticsearch.hosts=[\"elastic-search:9200\"]\n    networks:\n      net:\n        aliases:\n          - apm-server\n\n  elastic-search:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1\n    container_name: elastic-search\n    environment:\n      - discovery.type=single-node\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    ports:\n      - 9200:9200\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    networks:\n      net:\n        aliases:\n          - elastic-search\n\n  elastic-kibana:\n    image: docker.elastic.co/kibana/kibana:7.9.1\n    container_name: elastic-kibana\n#    environment:\n#      - LOG_DRIVER_LEVEL=debug\n    environment:\n      ELASTICSEARCH_HOSTS: '[\"http://elastic-search:9200\"]'\n      LOG_DRIVER_LEVEL: trace\n    ports:\n      - 5601:5601\n    depends_on:\n      - elastic-search\n    networks:\n      net:\n        aliases:\n          - elastic-kibana\n\n  jaeger:\n    image: jaegertracing/all-in-one:latest\n    container_name: jaeger\n    ports:\n        - \"16686:16686\"\n        - \"14268:14268\"\n        - \"14250:14250\"\n#    environment:\n#        QUERY_BASE_PATH: \"/admin/jaeger\"\n    networks:\n      net:\n        aliases:\n          - jaeger\n\n  zookeeper:\n    image: bitnami/zookeeper #antrea/confluentinc-zookeeper:6.2.0\n    hostname: zookeeper\n    container_name: zookeeper\n    ports:\n      - '2181:2181'\n    environment:\n#      ZOOKEEPER_CLIENT_PORT: 2181\n#      ZOOKEEPER_TICK_TIME: 2000\n      ALLOW_ANONYMOUS_LOGIN: \"yes\"\n\n  kafka:\n    image: bitnami/kafka #antrea/confluentinc-kafka:6.2.0\n    hostname: kafka\n    container_name: kafka\n    depends_on:\n      - zookeeper\n    ports:\n      - '9092:9092'\n#      - '9101:9101'\n    environment:\n      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://0.0.0.0:9094\n      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094\n      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper\n\n#      KAFKA_BROKER_ID: 1\n#      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'\n#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092\n#      # NOTE: Not supported by current container\n#      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter\n#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n#      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1\n#      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1\n#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1\n#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1\n#      KAFKA_JMX_PORT: 9101\n#      KAFKA_JMX_HOSTNAME: localhost\n#      # TODO: Uncomment once enable schema registry\n#      # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081\n#      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092\n#      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1\n#      CONFLUENT_METRICS_ENABLE: 'true'\n#      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'\n\nnetworks:\n  net:\n",
            "docker/fluentd/Dockerfile": "\n# fluentd/Dockerfile\nFROM fluent/fluentd:v0.12-debian\nRUN [\"gem\", \"install\", \"fluent-plugin-elasticsearch\", \"--no-rdoc\", \"--no-ri\", \"--version\", \"1.9.2\"]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "fluent.conf"
        ],
        "folders": []
    }
}