{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>io.zipkin.custom</groupId>\n    <artifactId>eureka</artifactId>\n    <version>1.0-SNAPSHOT</version>\n\n    <description>Example module that adds Eureka to an existing Zipkin</description>\n\n    <properties>\n        <!-- make sure this matches zipkin-server's spring boot version -->\n        <spring-boot.version>2.2.0.RELEASE</spring-boot.version>\n        <spring-cloud.version>Hoxton.RC1</spring-cloud.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <!-- This makes sure versions are aligned properly -->\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>${spring-boot.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <!-- this is the thing that adds Eureka -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n            <exclusions>\n                <!-- zipkin already has this -->\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <version>${spring-boot.version}</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <layoutFactory implementation=\"zipkin.layout.ZipkinLayoutFactory\">\n                        <name>custom</name>\n                    </layoutFactory>\n                    <classifier>module</classifier>\n                    <!-- exclude dependencies already packaged in zipkin-server. -->\n                    <!-- https://github.com/spring-projects/spring-boot/issues/3426 transitive exclude doesn't work -->\n                    <excludeGroupIds>io.zipkin.zipkin2,io.zipkin.reporter2,org.springframework.boot,org.springframework,com.fasterxml.jackson.core,com.google.auto.value,com.google.gson,com.google.guava,org.slf4j\n                    </excludeGroupIds>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>io.zipkin.layout</groupId>\n                        <artifactId>zipkin-layout-factory</artifactId>\n                        <version>0.0.4</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n\n    <repositories>\n        <repository>\n            <id>spring-milestones</id>\n            <name>Spring Milestones</name>\n            <url>https://repo.spring.io/milestone</url>\n        </repository>\n    </repositories>\n\n</project>"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "openzipkin-eureka/Dockerfile": "FROM maven:3.6.0-jdk-8-alpine\n\nWORKDIR /usr/src/zipkin\n\nCOPY pom.xml ./\n\n# get normal zipkin server\nRUN curl -sSL https://zipkin.io/quickstart.sh -o zipkin.sh\n\n# remove --check flag does not work for some reason\nRUN sed -i 's/--check//g' zipkin.sh\n\n# install zipkin server\nRUN bash zipkin.sh\n\n# download zipkin-server-shared.yml and add eureka configuration\nRUN jar xf zipkin.jar BOOT-INF/classes/zipkin-server-shared.yml\n\nRUN echo 'spring.application.name: zipkin-server' >> BOOT-INF/classes/zipkin-server-shared.yml\nRUN echo 'eureka.client.enabled: true' >> BOOT-INF/classes/zipkin-server-shared.yml\nRUN echo 'eureka.client.serviceUrl.defaultZone: ${EUREKA_SERVER:http://127.0.0.1:8761/eureka/}' >> BOOT-INF/classes/zipkin-server-shared.yml\nRUN echo 'logging.file: ${LOGGING_PATH:/tmp/}${spring.application.name}.log' >> BOOT-INF/classes/zipkin-server-shared.yml\n\n## download eureka client\n#RUN curl -sSL https://start.spring.io/starter.tgz -d dependencies=web,actuator \\\n#    -d language=groovy -d type=gradle-project -d baseDir=another-project \\\n#    -o\n\n# build the eureka module\nRUN mvn clean install\n\n# rename the jar so it is easier\nRUN mv target/eureka-1.0-SNAPSHOT-module.jar eureka.jar\n\n# start zipkin which now has eureka support\nCMD java -cp zipkin.jar \\\n -Dloader.path='eureka.jar,eureka.jar!/lib' \\\n -Dloader.main=zipkin.server.ZipkinServer org.springframework.boot.loader.PropertiesLauncher \\\n --spring.config.location=file:BOOT-INF/classes/zipkin-server-shared.yml \\\n --spring.profiles.active=shared \\\n -Djava.security.egd=file:/dev/./urandom\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "fluent.conf"
        ],
        "folders": []
    }
}