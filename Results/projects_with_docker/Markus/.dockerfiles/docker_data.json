{
    "docker_info": {
        "base_image": "ubuntu:jammy",
        "multi_stage_build": true,
        "exposed_ports": [],
        "user": [
            "$USER",
            "$USER"
        ],
        "labels": [],
        "health_checks": [],
        "build_args": [
            "NODE_MAJOR=20",
            "BUNDLER_VERSION='2.4.13'",
            "RUBY_VERSION='3.3.4'",
            "USER=markus",
            "UID=1001",
            "USER",
            "BUNDLER_VERSION",
            "USER",
            "BUNDLER_VERSION"
        ],
        "envs": [
            "ENV GEM_HOME=\"/bundle\"",
            "ENV PATH=\"$GEM_HOME/bin:$GEM_HOME/gems/bin:$PATH\"",
            "ENV RAILS_ENV=production",
            "ENV NODE_ENV=production"
        ],
        "copy_instructions": [
            "ADD https://deb.nodesource.com/setup_$NODE_MAJOR.x /tmp/setup_node.sh",
            "COPY markus_1.0_all.deb /",
            "WORKDIR /app",
            "COPY --chown=${USER}:${USER} . /app",
            "COPY --chown=${USER}:${USER} .dockerfiles/database.yml.postgresql /app/config/database.yml",
            "COPY --chown=${USER}:${USER} .dockerfiles/git-ssh.rc /home/${USER}/.ssh/rc"
        ],
        "execution": [],
        "run": [
            [
                "useradd -m -u $UID -s /bin/bash $USER",
                ""
            ],
            [
                "sh /tmp/setup_node.sh",
                ""
            ],
            [
                "apt-get update && \\",
                "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends /markus_1.0_all.deb &&",
                "rm /tmp/setup_node.sh /markus_1.0_all.deb"
            ],
            [
                "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends wget ca-certificates sudo && \\",
                "wget https://github.com/postmodern/ruby-install/releases/download/v0.9.3/ruby-install-0.9.3.tar.gz &&",
                "tar -xzvf ruby-install-0.9.3.tar.gz &&",
                "cd ruby-install-0.9.3/ &&",
                "make install &&",
                "ruby-install --update &&",
                "ruby-install --system ruby $RUBY_VERSION"
            ],
            [
                "sed -ri 's/(rights=\")none(\"\\s+pattern=\"PDF\")/\\1read\\2/' /etc/ImageMagick-6/policy.xml",
                ""
            ],
            [
                "mkdir -p /home/${USER}/.ssh && \\",
                "chmod 700 /home/${USER}/.ssh &&",
                "chown \"${USER}:${USER}\" /home/${USER}/.ssh"
            ],
            [
                "mkdir -p -m0755 /var/run/sshd",
                ""
            ],
            [
                "ln -s /app/lib/repo/markus-git-shell.sh /usr/local/bin/markus-git-shell.sh",
                "COPY ./lib/repo/authorized_key_command.sh /usr/local/bin/authorized_key_command.sh"
            ],
            [
                "mkdir -p /etc/ssh/sshd_config.d/ && printf \"PermitRootLogin no\\n\\",
                "AuthorizedKeysFile none\\n",
                "AuthorizedKeysCommand /usr/local/bin/authorized_key_command.sh %%h\\n",
                "AuthorizedKeysCommandUser ${USER}\\n\"",
                "> /etc/ssh/sshd_config.d/markus.conf"
            ],
            [
                "apt-get update -qq && \\",
                "DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends openssh-server",
                "python3",
                "python3-dev",
                "python3-venv",
                "equivs",
                "libjemalloc2"
            ],
            [
                "mkdir -p /bundle \\",
                "/app/data/development",
                "/app/data/development/repos",
                "/app/tmp",
                "/app/node_modules",
                "/app/log",
                "/app/venv &&",
                "chown -R ${USER}:${USER} /bundle /app"
            ],
            [
                "gem install bundler -v $BUNDLER_VERSION && bundle config set --local without 'unicorn'",
                ""
            ],
            [
                "ln -s /app/.dockerfiles/git-ssh.rc /home/${USER}/.ssh/rc && \\",
                "ln -s /app/.dockerfiles/ssh.pg_service.conf /home/${USER}/.pg_service.conf"
            ],
            [
                "mkdir -p /app/public /app/log /app/data/production/repos && chown -R ${USER}:${USER} /app",
                ""
            ],
            [
                "gem install bundler -v $BUNDLER_VERSION && bundle config set --local without 'development test offline production_test'",
                ""
            ],
            [
                "sed \"s:/markus/:/${USER}/:g\" /home/${USER}/.ssh/rc",
                ""
            ],
            [
                "SECRET_KEY_BASE=1 bundle install --deployment",
                ""
            ],
            [
                "SECRET_KEY_BASE=1 NO_SCHEMA_VALIDATE=true NO_INIT_SCHEDULER=true PGDATABASE=dummy bundle exec rails assets:precompile",
                ""
            ]
        ]
    }
}