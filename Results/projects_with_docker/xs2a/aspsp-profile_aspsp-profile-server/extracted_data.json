{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Copyright 2018-2024 adorsys GmbH & Co KG\n  ~\n  ~ This program is free software: you can redistribute it and/or modify it\n  ~ under the terms of the GNU Affero General Public License as published\n  ~ by the Free Software Foundation, either version 3 of the License, or (at\n  ~ your option) any later version. This program is distributed in the hope that\n  ~ it will be useful, but WITHOUT ANY WARRANTY; without even the implied\n  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n  ~ See the GNU Affero General Public License for more details.\n  ~\n  ~ You should have received a copy of the GNU Affero General Public License\n  ~ along with this program. If not, see https://www.gnu.org/licenses/.\n  ~\n  ~ This project is also available under a separate commercial license. You can\n  ~ contact us at sales@adorsys.com.\n  -->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <artifactId>aspsp-profile</artifactId>\n        <groupId>de.adorsys.psd2</groupId>\n        <version>14.10-SNAPSHOT</version>\n        <relativePath>../pom.xml</relativePath>\n    </parent>\n\n    <artifactId>aspsp-profile-server</artifactId>\n    <packaging>jar</packaging>\n\n    <name>aspsp-profile-server</name>\n    <description>Aspsp profile service for XS2A and ASPSP </description>\n\n    <properties>\n        <ruleset.basedir>../..</ruleset.basedir>\n        <ci.build.number>&#8203;</ci.build.number>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>de.adorsys.psd2</groupId>\n            <artifactId>aspsp-profile-lib</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>de.adorsys.psd2</groupId>\n            <artifactId>aspsp-profile-web</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>de.adorsys.psd2</groupId>\n            <artifactId>xs2a-object-mapper</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springdoc</groupId>\n            <artifactId>springdoc-openapi-ui</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.fasterxml.jackson.module</groupId>\n            <artifactId>jackson-module-parameter-names</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.fasterxml.jackson.dataformat</groupId>\n            <artifactId>jackson-dataformat-yaml</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-jdk8</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-jsr310</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>junit</groupId>\n                    <artifactId>junit</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <finalName>aspsp-profile</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <version>${spring-boot.version}</version>\n                <configuration>\n                    <includeSystemScope>true</includeSystemScope>\n                    <classifier>exec</classifier>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>build-info</id>\n                        <goals>\n                            <goal>build-info</goal>\n                        </goals>\n                        <configuration>\n                            <additionalProperties>\n                                <java.version>${java.version}</java.version>\n                                <build.number>${ci.build.number}</build.number>\n                            </additionalProperties>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n"
        },
        "database": "Redis",
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: \"3\"\n\nnetworks:\n  xs2a-net:\n\nvolumes:\n  consent-management-data:\n\nservices:\n  # xs2a standalone starter\n  xs2a-standalone-starter:\n    image: adorsys/xs2a-standalone-starter\n    build:\n      context: xs2a-standalone-starter\n      dockerfile: Dockerfile\n    restart: on-failure\n    environment:\n      - JAVA_TOOL_OPTIONS=\"-Xmx256M\"\n      - SPRING_PROFILES_ACTIVE=mock-qwac\n      - XS2A_CMS_ASPSP_PROFILE_BASEURL=${XS2A_CMS_ASPSP_PROFILE_BASEURL:-http://aspsp-profile:8080/api/v1}\n      - XS2A_CMS_CONSENT_SERVICE_BASEURL=${XS2A_CMS_CONSENT_SERVICE_BASEURL:-http://consent-management:8080/api/v1}\n    ports:\n      - \"8080:8080\"\n    networks:\n      - xs2a-net\n    depends_on:\n      - aspsp-profile\n      - consent-management\n\n  # ASPSP-PROFILE\n  aspsp-profile:\n    image: adorsys/xs2a-aspsp-profile\n    build:\n      context: aspsp-profile/aspsp-profile-server\n      dockerfile: Dockerfile\n    restart: on-failure\n    environment:\n      - JAVA_TOOL_OPTIONS=\"-Xmx256M\"\n      - SPRING_PROFILES_ACTIVE=debug_mode\n    ports:\n      - \"48080:8080\"\n    networks:\n      - xs2a-net\n\n  # CONSENT-MANAGEMENT-SYSTEM\n  consent-management:\n    image: adorsys/xs2a-consent-management\n    build:\n      context: consent-management/cms-standalone-service\n      dockerfile: Dockerfile\n    restart: on-failure\n    ports:\n      - \"38080:8080\"\n    networks:\n      - xs2a-net\n    environment:\n      - JAVA_TOOL_OPTIONS=\"-Xmx512M\"\n      - SPRING_DATASOURCE_URL=jdbc:postgresql://consent-management-postgres/consent\n      - SPRING_DATASOURCE_USERNAME=cms\n      - SPRING_DATASOURCE_PASSWORD=cms\n      - XS2A_CMS_ASPSP_PROFILE_BASEURL=${XS2A_CMS_ASPSP_PROFILE_BASEURL:-http://aspsp-profile:8080/api/v1}\n      - SERVER_KEY=my_secret_for_cms\n      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA=consent\n      - SPRING_LIQUIBASE_ENABLED=true\n      - SPRING_LIQUIBASE_URL=jdbc:postgresql://consent-management-postgres/consent?currentSchema=consent\n      - SPRING_LIQUIBASE_USER=cms\n      - SPRING_LIQUIBASE_PASSWORD=cms\n    depends_on:\n      - consent-management-postgres\n\n  consent-management-postgres:\n    image: centos/postgresql-95-centos7\n    volumes:\n      - consent-management-data:/var/lib/pgsql/data\n      - ./consent-management/cms-db-schema/util/pg-create-schema.sh:/usr/share/container-scripts/postgresql/start/zzz-create-schema.sh\n    restart: on-failure\n    ports:\n      - \"5432:5432\"\n    networks:\n      - xs2a-net\n    environment:\n      - POSTGRESQL_ADMIN_PASSWORD=postgres\n      - POSTGRESQL_DATABASE=consent\n      - POSTGRESQL_USER=cms\n      - POSTGRESQL_PASSWORD=cms\n    expose:\n      - 5432\n",
            "aspsp-profile/aspsp-profile-server/Dockerfile": "FROM adorsys/java:11\n\nLABEL maintainer=\"https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a\"\n\nENV JAVA_OPTS -Xmx1024m -Dserver.port=8080\nENV JAVA_TOOL_OPTIONS -Xmx1024m\n\nWORKDIR /opt/profile\n\nCOPY ./target/aspsp-profile-exec*jar /opt/profile/aspsp-profile-exec.jar\n\nEXPOSE 8080\n# hadolint ignore=DL3025\nCMD exec $JAVA_HOME/bin/java $JAVA_OPTS -jar /opt/profile/aspsp-profile-exec.jar\n",
            ".gitlab-ci.yml": "---\n# yamllint disable rule:line-length\n# ------------------------------------------------------------------\n# Global settings\n# ------------------------------------------------------------------\n\nimage: \"adorsys/ci-build:latest\"\n\n# ------------------------------------------------------------------\n# stages\n# ------------------------------------------------------------------\n\nstages:\n  - \"Lint\"    # Lint files and configuration\n  - \"Compile\" # build jar and provide as artifact\n  - \"Test\"    # run tests and code quality checks\n  - \"Package\" # dockerize jar and push to docker registry\n  - \"Release\" # release\n  - \"Clone to github\"\n\n# ------------------------------------------------------------------\n# variables\n# ------------------------------------------------------------------\n\nvariables:\n  DOCKER_IMAGE_NAME_CMS_MANAGEMENT: \"xs2a-consent-management\"\n  DOCKER_IMAGE_NAME_ASPSP_PROFILE: \"xs2a-aspsp-profile\"\n  DOCKER_IMAGE_NAME_CERTIFICATE_GENERATOR: \"xs2a-certificate-generator\"\n\n  ###########################\n  # Build variables         #\n  ###########################\n\n  JAVA_TOOL_OPTIONS: \"-XX:+UnlockExperimentalVMOptions -XX:MaxRAM=3G -XX:MaxRAMFraction=3\"\n  MAVEN_OPTS: \"-Dmaven.repo.local=.m2/repository\"\n\n# ------------------------------------------------------------------\n# reusable yaml anchors\n# ------------------------------------------------------------------\n\n.build_java: &build_java\n  script:\n    - jabba use ${JAVA_VERSION}\n    - env BUILD_NUMBER=$CI_PIPELINE_IID ./scripts/set_xs2a_connector_version_in_swagger.sh\n    - java -XX:+PrintFlagsFinal -version | grep -Ei \"maxheapsize|maxram\"\n    - mvn -ntp -DskipITs -DskipTests -Dci.build.number=Build\\:${CI_PIPELINE_ID} clean install\n\n.java_tests: &java_tests\n  script:\n    - jabba use $JAVA_VERSION\n    - java -XX:+PrintFlagsFinal -version | grep -Ei \"maxheapsize|maxram\"\n    - mvn -ntp -DskipITs --fail-at-end clean install -q\n\n.push_dockerhub_images_private: &push_dockerhub_images_private\n  script:\n    - docker build -t \"${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CMS_MANAGEMENT}:${DOCKER_TAG}\" consent-management/cms-standalone-service\n    - docker build -t \"${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}\" aspsp-profile/aspsp-profile-server\n    - docker build -t \"${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CERTIFICATE_GENERATOR}:${DOCKER_TAG}\" certificate-generator\n    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY\n    - docker push \"${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CMS_MANAGEMENT}:${DOCKER_TAG}\"\n    - docker push \"${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_ASPSP_PROFILE}:${DOCKER_TAG}\"\n    - docker push \"${DOCKERHUB_REGISTRY}/${DOCKERHUB_NAMESPACE}/${DOCKER_IMAGE_NAME_CERTIFICATE_GENERATOR}:${DOCKER_TAG}\"\n    - docker logout\n\n.release_java_private: &release_java_private\n  stage: \"Release\"\n  script:\n    - jabba use $BUILD_JAVA_VERSION\n    - java -XX:+PrintFlagsFinal -version | grep -Ei \"maxheapsize|maxram\"\n    - mvn -ntp --settings scripts/mvn-release-settings.xml -Pgitlab-maven -DskipTests -U deploy\n  cache:\n    key: \"Java_${CI_COMMIT_REF_SLUG}\"\n    paths:\n      - /builds/adorsys/xs2a/xs2a-conector-examples/.m2/repository\n\n.sync_changes_github: &sync_changes_github\n  image: alpine/git\n  script:\n    - git config --global user.name \"$GITHUB_USERNAME\"\n    - git remote add github https://$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git\n    - for branch in $(git branch -r | grep -E \"origin/.*(release-${GITHUB_PROJECT_CLONE_VERSION}.*|support-${GITHUB_PROJECT_CLONE_VERSION}.x).*\"); do\n      branch=${branch#origin/};\n      git checkout $branch;\n      git push github $branch;\n      done\n\n# ------------------------------------------------------------------\n# jobs\n# ------------------------------------------------------------------\n\n#-------------------------------------------------------------------\n# lint\n#-------------------------------------------------------------------\n\nLint (Docker compose):\n  image: maven:3.6-jdk-11-slim\n  stage: \"Lint\"\n  except:\n    - schedules\n    - support-14.x\n    - master-14.x\n  script:\n    - apt update && apt install yamllint docker-compose make -yq\n    - echo \"Run Docker compose lint\"\n    - docker-compose -f docker-compose.yml config  -q\n\nLint (Ci file):\n  image: debian:stable-slim\n  stage: \"Lint\"\n  except:\n    - schedules\n    - support-14.x\n    - master-14.x\n  script:\n    - apt-get update && apt-get install yamllint python3-pkg-resources -yq\n    - echo \"Run Gitlab ci file lint\"\n    - yamllint -d relaxed .gitlab-ci.yml\n\nLint (YAML, JSON, XML):\n  image: debian:stable-slim\n  stage: \"Lint\"\n  except:\n    - schedules\n    - support-14.x\n    - master-14.x\n  script:\n    - apt-get update && apt-get install jsonlint yamllint libxml2-utils make curl -yq && ln -s /usr/bin/jsonlint-php /usr/bin/jsonlint\n    - echo \"Run Xs2A core lint\"\n    - find ./ -type f -name \"*.json\" -exec jsonlint -q {} \\; # lint all json\n  # commented cause get many small errors for yaml with spaces empty lines and etc\n  #   - find ./ -type f \\( -name \"*.yml\" -o -name \"*.yaml\" \\) -exec yamllint -d \"{extends: relaxed, rules: {line-length: {max: 160}}}\" {} \\;\n  # commented cause get error Unsupported version '1.1'\n  #     - find ./ -type f \\( -iname \"*.xml\" ! -iname pom.xml \\) -exec xmllint --noout {} \\;\n\nLint (PMD CPD):\n  image: maven:3.6-jdk-11-slim\n  stage: \"Lint\"\n  except:\n    - schedules\n    - support-14.x\n    - master-14.x\n  script:\n    - apt update && apt install make -yq\n    - echo \"Test java code for PMD and CPD\"\n    - echo \"DOCKER_HOST=$DOCKER_HOST\"\n    - mvn -ntp -Dmaven.test.skip=true package pmd:check # commented cause many duplications pmd:cpd-check\n  cache: {}\n  artifacts:\n    paths:\n      - \"qa/pmd/pmd-ruleset.xml\"\n      - \"**/**/*/pmd.html\"\n      - \"**/*/pmd.xml\"\n    name: \"${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}-pmd\"\n    expire_in: \"10 day\"\n\nLint (dockerfiles):\n  image: docker\n  stage: \"Lint\"\n  services:\n    - docker:dind\n  tags:\n    - aws\n  except:\n    - schedules\n    - support-14.x\n    - master-14.x\n  variables:\n    DOCKER_HOST: tcp://docker:2375\n    DOCKER_TLS_CERTDIR: \"\"\n    DOCKER_DRIVER: overlay2\n  script:\n    - echo \"Run Xs2a core dockerfile check\"\n    - docker run --rm -i hadolint/hadolint < ./consent-management/cms-standalone-service/Dockerfile\n    - docker run --rm -i hadolint/hadolint < ./aspsp-profile/aspsp-profile-server/Dockerfile\n    - docker run --rm -i hadolint/hadolint < ./xs2a-standalone-starter/Dockerfile\n    - docker run --rm -i hadolint/hadolint < ./certificate-generator/Dockerfile\n\n#-------------------------------------------------------------------\n# Compile\n#-------------------------------------------------------------------\n\nBuild XS2A:\n  stage: \"Compile\"\n  except:\n    - schedules\n  variables:\n    JAVA_VERSION: \"system@1.11\"\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n  <<: *build_java\n  artifacts:\n    paths:\n      - \"xs2a-standalone-starter/target/xs2a-standalone-starter-exec.jar\"\n      - \"consent-management/cms-standalone-service/target/consent-management*jar\"\n      - \"aspsp-profile/aspsp-profile-server/target/aspsp-profile*jar\"\n      - \"certificate-generator/target/certificate-generator.jar\"\n      - \"**/target/*\"\n      - \"**/**/target/*\"\n      - \".m2/repository/de/adorsys/psd2/*/*\"\n    name: \"${CI_PROJECT_NAME}-${CI_BUILD_REF_NAME#*v}\"\n    expire_in: \"1 day\"\n\n#-------------------\n# Test\n#-------------------\n\nTest (IT):\n  stage: \"Test\"\n  image: maven:3.6.3-jdk-11\n  services:\n    - docker:dind\n  tags:\n    - aws\n  except:\n    - schedules\n  script:\n    #    - jabba use ${JAVA_VERSION}\n    - echo \"DOCKER_HOST=${DOCKER_HOST}\"\n    - java -XX:+PrintFlagsFinal -version | grep -Ei \"maxheapsize|maxram\"\n    - mvn -ntp failsafe:integration-test failsafe:verify\n  variables:\n    DOCKER_HOST: tcp://docker:2375\n    DOCKER_TLS_CERTDIR: \"\"\n    DOCKER_DRIVER: overlay2\n    JAVA_VERSION: \"system@1.11\"\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n    TESTCONTAINERS_RYUK_DISABLED: \"true\"\n\nTest (Javadoc):\n  stage: \"Test\"\n  except:\n    - schedules\n  variables:\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n    JAVA_VERSION: \"system@1.11\"\n  script:\n    - jabba use ${JAVA_VERSION}\n    - java -XX:+PrintFlagsFinal -version | grep -Ei \"maxheapsize|maxram\"\n    - mvn -ntp -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc\n\nTest (Unit Tests):\n  stage: \"Test\"\n  except:\n    - schedules\n  <<: *java_tests\n  variables:\n    JAVA_VERSION: \"system@1.11\"\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n\nTest (ASCII Doc):\n  stage: \"Test\"\n  except:\n    - schedules\n  image: adorsys/arc42-tools\n  variables:\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n  script:\n    - make pages\n\nBuild and push images to private repo (support-14.x):\n  stage: \"Package\"\n  services:\n    - docker:dind\n  tags:\n    - aws\n  except:\n    - schedules\n  only:\n    - support-14.x\n  variables:\n    DOCKER_HOST: tcp://docker:2375\n    DOCKER_TLS_CERTDIR: \"\"\n    DOCKER_DRIVER: overlay2\n    DOCKER_TAG: support14x\n    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de\n    DOCKERHUB_NAMESPACE: \"adorsys/xs2a/aspsp-xs2a\"\n  <<: *push_dockerhub_images_private\n\nBuild and push images to private repo (Tags):\n  stage: \"Package\"\n  services:\n    - docker:dind\n  tags:\n    - aws\n  only:\n    - tags\n  variables:\n    DOCKER_HOST: tcp://docker:2375\n    DOCKER_TLS_CERTDIR: \"\"\n    DOCKER_DRIVER: overlay2\n    DOCKER_TAG: $CI_COMMIT_TAG\n    DOCKERHUB_REGISTRY: gitlab-registry.adorsys.de\n    DOCKERHUB_NAMESPACE: \"adorsys/xs2a/aspsp-xs2a\"\n  <<: *push_dockerhub_images_private\n\nRelease snapshot artifacts (support-14.x):\n  stage: \"Release\"\n  only:\n    - support-14.x\n  except:\n    - schedules\n  cache: {}\n  variables:\n    BUILD_JAVA_VERSION: system@1.11\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n  <<: *release_java_private\n\nRelease snapshot artifacts (tags):\n  stage: \"Release\"\n  only:\n    - tags\n  except:\n    - schedules\n  cache: {}\n  variables:\n    BUILD_JAVA_VERSION: system@1.11\n    JAVA_TOOL_OPTIONS: \"-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G\"\n  <<: *release_java_private\n\nClone to github:\n  stage: \"Clone to github\"\n  image: alpine/git:latest\n  dependencies: []\n  only:\n    - support-14.x\n    - /^release-14\\..*/\n  except:\n    - schedules\n  variables:\n    GITHUB_REPOSITORY: adorsys/xs2a\n    GITHUB_PROJECT_CLONE_VERSION: \"14\"\n  <<: *sync_changes_github\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "docker-compose.yml",
            "entrypoint.sh"
        ],
        "folders": [
            "test"
        ]
    }
}