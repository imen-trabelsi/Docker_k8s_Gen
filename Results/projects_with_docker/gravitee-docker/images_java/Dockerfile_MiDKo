# Define the version of Alpine Linux as a variable to be used
ARG ALPINE_VERSION=3.17

# Base Image
FROM alpine:${ALPINE_VERSION}

# Environment variables
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH=$JAVA_HOME/bin:$PATH
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'

# Run commands to set up necessary dependencies
RUN apk -U upgrade \
    && apk add --no-cache fontconfig libretls musl-locales musl-locales-lang ttf-dejavu tzdata zlib openssl libc6-compat curl htop jattach libstdc++ libgcc curl \

RUN set -eux; \
    ARCH="$(apk --print-arch)"; \
    case "${ARCH}" in \
    amd64|x86_64) \
    ESUM='7a2df4e2f86eca649af1e17d990ab8e354cb6dee389606025b9d05f75623c388'; \
    BINARY_URL='https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jre_x64_alpine-linux_hotspot_17.0.13_11.tar.gz'; \
    ;; \
    aarch64) \
    ESUM='b4e4f3bd2e6db47a633fd854131e09e4e2750bdd51b21e1212f69aa1c135ebae'; \
    BINARY_URL='https://download.bell-sw.com/java/17.0.13+12/bellsoft-jdk17.0.13+12-linux-aarch64-musl.tar.gz'; \
    ;; \
    *) \
    echo "Unsupported arch: ${ARCH}"; \
    exit 1; \
    ;; \
    esac; \
    curl -L -o /tmp/openjdk.tar.gz ${BINARY_URL}; \
    echo "${ESUM} */tmp/openjdk.tar.gz" | sha256sum -c -; \
    mkdir -p "$JAVA_HOME"; \
    tar --extract --file /tmp/openjdk.tar.gz --directory "$JAVA_HOME" --strip-components 1 --no-same-owner; \
    rm /tmp/openjdk.tar.gz; \
    echo Verifying install ... \
    echo java --version && java --version \

# Copy the Spring Boot microservice's .jar file into your Docker image
COPY target/*.jar app.jar 

# Informs Docker that the container listens on the specified network port at runtime.
EXPOSE 8080

ENTRYPOINT [ "java", "-jar", "/app.jar" ]

