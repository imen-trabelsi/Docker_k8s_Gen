{
    "source_code_info": {
        "language": "Ruby",
        "framework": "Ruby",
        "dependencies": {
            "Gemfile": "source \"https://rubygems.org\"\n# Hello! This is where you manage which Jekyll version is used to run.\n# When you want to use a different version, change it below, save the\n# file and run `bundle install`. Run Jekyll with `bundle exec`, like so:\n# Note: you probably want to set a local bundle path with : /usr/local/bin/bundle config set path 'vendor/bundle'\n#\n#     bundle exec jekyll serve\n#\n# This will help ensure the proper Jekyll version is running.\n# Happy Jekylling!\n# gem \"jekyll\", \"~> 4.0.0\"\n# This is the default theme for new Jekyll sites. You may change this to anything you like.\ngem \"minima\", \"~> 2.5\"\n# To upgrade, run `bundle update github-pages`.\ngem \"github-pages\", group: :jekyll_plugins\n# If you have any plugins, put them here!\ngroup :jekyll_plugins do\n  gem \"jekyll-feed\", \"~> 0.12\"\n  gem 'jekyll-octicons'\nend\n\ngem \"jekyll-github-metadata\"\n\n# Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem\n# and associated library.\ninstall_if -> { RUBY_PLATFORM =~ %r!mingw|mswin|java! } do\n  gem \"tzinfo\", \"~> 1.2\"\n  gem \"tzinfo-data\"\nend\n\n# Performance-booster for watching directories on Windows\ngem \"wdm\", \"~> 0.1.1\", :install_if => Gem.win_platform?\n\ngem \"faraday\", \"< 1.0\"\n\n# I like asciidoc & sitemaps\ngroup :jekyll_plugins do\n  gem 'jekyll-asciidoc'\n  gem 'jekyll-sitemap'\nend\n"
        },
        "database": "PostgreSQL",
        "build_system": "Bundler",
        "config_files": {
            "subrepos/docker-stacks/r-notebook/Dockerfile": "# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\nARG BASE_CONTAINER=jupyter/minimal-notebook\nFROM $BASE_CONTAINER\n\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\n\nUSER root\n\n# R pre-requisites\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    fonts-dejavu \\\n    unixodbc \\\n    unixodbc-dev \\\n    r-cran-rodbc \\\n    gfortran \\\n    gcc && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Fix for devtools https://github.com/conda-forge/r-devtools-feedstock/issues/4\nRUN ln -s /bin/tar /bin/gtar\n\nUSER $NB_UID\n\n# R packages\nRUN conda install --quiet --yes \\\n    'r-base=4.0.3' \\\n    'r-caret=6.*' \\\n    'r-crayon=1.3*' \\\n    'r-devtools=2.3*' \\\n    'r-forecast=8.13*' \\\n    'r-hexbin=1.28*' \\\n    'r-htmltools=0.5*' \\\n    'r-htmlwidgets=1.5*' \\\n    'r-irkernel=1.1*' \\\n    'r-nycflights13=1.0*' \\\n    'r-randomforest=4.6*' \\\n    'r-rcurl=1.98*' \\\n    'r-rmarkdown=2.6*' \\\n    'r-rodbc=1.3*' \\\n    'r-rsqlite=2.2*' \\\n    'r-shiny=1.5*' \\\n    'r-tidyverse=1.3*' \\\n    'unixodbc=2.3.*' \\\n    'r-tidymodels=0.1*' \\\n    && \\\n    conda clean --all -f -y && \\\n    fix-permissions \"${CONDA_DIR}\" && \\\n    fix-permissions \"/home/${NB_USER}\"\n\n# Install e1071 R package (dependency of the caret R package)\nRUN conda install --quiet --yes r-e1071\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "prepare.sh"
        ],
        "folders": [
            "examples"
        ]
    }
}