# This Dockerfile is optimized and secure for deploying a Spring Boot microservice
FROM $BASE_CONTAINER AS build-stage

# Set Environment variables
ENV NB_USER=root
ENV NB_UID=$NB_UID
ENV WORK_DIR=/workspace
ENV SHELL=/bin/bash

# Label providing maintainer info
LABEL maintainer="Jupyter"

# Install system dependencies
USER $NB_USER
RUN apt-get update && \
    apt-get install -y --no-install-recommends fonts-dejavu unixodbc unixodbc-dev r-cran-rodbc gfortran gcc && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \

# Install Ruby and associated gems
RUN conda install --quiet --yes \
    'r-base=4.0.3' \
    'r-caret=6.*' \
    'r-crayon=1.3*' \
    'r-devtools=2.3*' \
    'r-hexbin=1.28*' \
    'r-htmltools=0.5*' \
    'r-htmlwidgets=1.5*' \
    'r-irkernel=1.1*' \
    'r-nycflights13=1.0*' \
    'r-randomforest=4.6*' \
    'r-rcurl=1.98*' \
    'r-rmarkdown=2.6*' \
    'r-rodbc=1.3*' \
    'r-rsqlite=2.2*' \
    'r-shiny=1.5*' \
    'r-tidyverse=1.3*' \
    'unixodbc=2.3.*' \
    'r-tidymodels=0.1*' && \
    conda install --quiet --yes r-e1071 && \
    conda clean --all -f -y && \
    fix-permissions "${CONDA_DIR}" && \

USER $NB_UID

# Copy files from host to container filesystem
COPY . $WORK_DIR

# Set working directory
WORKDIR $WORK_DIR

# Expose necessary ports
# Please specify the actual port you want to expose if any

#ENTRYPOINT and CMD
# Please specify the actual entrypoint and CMD if any
