{
    "docker_info": {
        "base_image": "holdenk/jupyter-hub-magicsingleuser-sample:0.10.2-n412.h25a21283",
        "multi_stage_build": false,
        "exposed_ports": [],
        "user": [
            "root",
            "$NB_USER"
        ],
        "labels": [],
        "health_checks": [],
        "build_args": [],
        "envs": [
            "ENV MAKEFLAGS -j 4",
            "ENV LANG C.UTF-8",
            "ENV JAVA_HOME /usr/local/openjdk-11",
            "ENV PATH $JAVA_HOME/bin:$PATH",
            "ENV GOSU_VERSION 1.11",
            "ENV FLINK_TGZ_URL=https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.12.1/flink-1.12.1-bin-scala_2.12.tgz \\",
            "ENV FLINK_HOME=/opt/flink",
            "ENV PATH=$FLINK_HOME/bin:$PATH"
        ],
        "copy_instructions": [],
        "execution": [],
        "run": [
            [
                "set -eux; \\",
                "apt-get update &&",
                "apt-get install -yq graphviz git build-essential cmake telnet &&",
                "conda install -c conda-forge --yes mamba &&",
                "mamba install --yes python==3.8.6 &&",
                "pip install --upgrade pip setuptools &&",
                "mamba install --yes numpy==1.19.2 pandas cytoolz numba lz4 scikit-build python-blosc=1.9.2 &&",
                "(mamba install --yes pyarrow ||  pip install -vvv pyarrow) &&",
                "apt-get clean &&",
                "rm -rf /var/cache/apt/* &&",
                "rm -rf /var/lib/apt/lists/* &&",
                "echo -e \"$NB_USER\\n$NB_USER\" | passwd $NB_USER"
            ],
            [
                "{ echo '#/bin/sh'; echo 'echo \"$JAVA_HOME\"'; } > /usr/local/bin/docker-java-home && chmod +x /usr/local/bin/docker-java-home && [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]",
                "ENV JAVA_VERSION 11.0.9.1"
            ],
            [
                "set -eux; \\",
                "",
                "arch=\"$(dpkg --print-architecture)\";",
                "# this \"case\" statement is generated via \"update.sh\""
            ],
            [
                "set -ex; \\",
                "apt-get update;",
                "apt-get -y install libsnappy1v5 gettext-base libjemalloc-dev;",
                "rm -rf /var/lib/apt/lists/*"
            ],
            [
                "set -ex; \\",
                "wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\";",
                "wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\";",
                "export GNUPGHOME=\"$(mktemp -d)\";",
                "for server in ha.pool.sks-keyservers.net $(shuf -e",
                "hkp://p80.pool.sks-keyservers.net:80",
                "keyserver.ubuntu.com",
                "hkp://keyserver.ubuntu.com:80",
                "pgp.mit.edu) ; do",
                "gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ;",
                "done &&",
                "gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu;",
                "gpgconf --kill all;",
                "rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc;",
                "chmod +x /usr/local/bin/gosu;",
                "gosu nobody true"
            ],
            [
                "set -ex; \\",
                "wget -nv -O flink.tgz \"$FLINK_TGZ_URL\";",
                "",
                "if [ \"$CHECK_GPG\" = \"true\" ]; then",
                "wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\";",
                "export GNUPGHOME=\"$(mktemp -d)\";",
                "for server in ha.pool.sks-keyservers.net $(shuf -e",
                "hkp://p80.pool.sks-keyservers.net:80",
                "keyserver.ubuntu.com",
                "hkp://keyserver.ubuntu.com:80",
                "pgp.mit.edu) ; do",
                "gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" && break || : ;",
                "done &&",
                "gpg --batch --verify flink.tgz.asc flink.tgz;",
                "gpgconf --kill all;",
                "rm -rf \"$GNUPGHOME\" flink.tgz.asc;",
                "fi;",
                "",
                "tar -xf flink.tgz --strip-components=1;",
                "rm flink.tgz;",
                "",
                "chown -R $NB_USER:$NB_USER .;"
            ],
            [
                "pip3 install apache-flink[==1.12.0]",
                ""
            ]
        ]
    }
}