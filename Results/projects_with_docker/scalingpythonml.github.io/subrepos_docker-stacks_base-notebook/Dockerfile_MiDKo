# Using the base image provided by the user
FROM $BASE_CONTAINER

LABEL maintainer="Jupyter"

# Environment variables to use
ENV DEBIAN_FRONTEND noninteractive
ENV CONDA_DIR=/opt/conda
ENV PATH=$CONDA_DIR/bin:$PATH
ENV NB_USER="jovyan"
ENV NB_UID="1000"
ENV NB_GID="100"

# Copy instructions
COPY fix-permissions /usr/local/bin/fix-permissions
WORKDIR /tmp
COPY start.sh start-notebook.sh start-singleuser.sh /usr/local/bin/
COPY jupyter_notebook_config.py /etc/jupyter/
WORKDIR $HOME

# The list of Packages
RUN apt-get update && apt-get install -yq --no-install-recommends \
wget \
ca-certificates \
sudo \
locales \
fonts-liberation \
run-one && \

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen
RUN chmod a+rx /usr/local/bin/fix-permissions

RUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc && \
echo "auth requisite pam_deny.so" >> /etc/pam.d/su && \
sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \
sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \
useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
mkdir -p $CONDA_DIR && \
chown $NB_USER:$NB_GID $CONDA_DIR && \
chmod g+w /etc/passwd && \
fix-permissions $HOME && \

RUN mkdir "/home/$NB_USER/work" && \

RUN export arch=$(uname -m) && if [ "$arch" == "aarm64" ]; then arch="arm64"; fi; \
wget --quiet https://github.com/conda-forge/miniforge/releases/download/4.8.5-1/Miniforge3-4.8.5-1-Linux-${arch}.sh -O miniforge.sh && chmod a+x miniforge.sh && \

RUN conda install --quiet --yes \
'notebook=6.2.0' \
'jupyterhub=1.3.0' \

RUN conda clean --all -f -y && npm cache clean --force && \
jupyter notebook --generate-config && \
rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
rm -rf /home/$NB_USER/.cache/yarn && \
fix-permissions $CONDA_DIR && \

RUN sed -re "s/c.NotebookApp/c.ServerApp/g" /etc/jupyter/jupyter_notebook_config.py > /etc/jupyter/jupyter_server_config.py; \

# Expose the necessary port
EXPOSE 8888

# Setting up the entry point and cmd
ENTRYPOINT ["tini",, "-g",, "--"]
CMD ["start-notebook.sh"]
