{
    "source_code_info": {
        "language": "Ruby",
        "framework": "Ruby",
        "dependencies": {
            "Gemfile": "source \"https://rubygems.org\"\n# Hello! This is where you manage which Jekyll version is used to run.\n# When you want to use a different version, change it below, save the\n# file and run `bundle install`. Run Jekyll with `bundle exec`, like so:\n# Note: you probably want to set a local bundle path with : /usr/local/bin/bundle config set path 'vendor/bundle'\n#\n#     bundle exec jekyll serve\n#\n# This will help ensure the proper Jekyll version is running.\n# Happy Jekylling!\n# gem \"jekyll\", \"~> 4.0.0\"\n# This is the default theme for new Jekyll sites. You may change this to anything you like.\ngem \"minima\", \"~> 2.5\"\n# To upgrade, run `bundle update github-pages`.\ngem \"github-pages\", group: :jekyll_plugins\n# If you have any plugins, put them here!\ngroup :jekyll_plugins do\n  gem \"jekyll-feed\", \"~> 0.12\"\n  gem 'jekyll-octicons'\nend\n\ngem \"jekyll-github-metadata\"\n\n# Windows and JRuby does not include zoneinfo files, so bundle the tzinfo-data gem\n# and associated library.\ninstall_if -> { RUBY_PLATFORM =~ %r!mingw|mswin|java! } do\n  gem \"tzinfo\", \"~> 1.2\"\n  gem \"tzinfo-data\"\nend\n\n# Performance-booster for watching directories on Windows\ngem \"wdm\", \"~> 0.1.1\", :install_if => Gem.win_platform?\n\ngem \"faraday\", \"< 1.0\"\n\n# I like asciidoc & sitemaps\ngroup :jekyll_plugins do\n  gem 'jekyll-asciidoc'\n  gem 'jekyll-sitemap'\nend\n"
        },
        "database": "PostgreSQL",
        "build_system": "Bundler",
        "config_files": {
            "subrepos/dask-docker/docker-compose.yml": "version: \"3.1\"\n\nservices:\n  scheduler:\n    build:\n      context: ./base\n      dockerfile: Dockerfile\n    image: daskdev/dask\n    hostname: dask-scheduler\n    ports:\n      - \"8786:8786\"\n      - \"8787:8787\"\n    command: [\"dask-scheduler\"]\n\n  worker:\n    build:\n      context: ./base\n      dockerfile: Dockerfile\n    image: daskdev/dask\n    hostname: dask-worker\n    command: [\"dask-worker\", \"tcp://scheduler:8786\"]\n\n  base-notebook:\n    build:\n      context: github.com/jupyter/docker-stacks.git#master:base-notebook\n      dockerfile: Dockerfile\n      args:\n        PYTHON_VERSION: \"3.8\"\n    image: jupyter/base-notebook:lab\n\n  notebook:\n    build:\n      context: ./notebook\n      dockerfile: Dockerfile\n    image: daskdev/dask-notebook\n    depends_on:\n      - base-notebook\n    hostname: notebook\n    ports:\n      - \"8888:8888\"\n    environment:\n      - DASK_SCHEDULER_ADDRESS=\"tcp://scheduler:8786\"\n",
            "subrepos/dask-docker/miniforge/Dockerfile": "FROM debian:buster-slim\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\nRUN apt-get update --fix-missing && \\\n    apt-get install -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \\\n    apt-get clean\n\nCOPY setup.sh /setup.sh\nRUN /setup.sh\nCMD [ \"/bin/bash\" ]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "prepare.sh"
        ],
        "folders": [
            "examples"
        ]
    }
}