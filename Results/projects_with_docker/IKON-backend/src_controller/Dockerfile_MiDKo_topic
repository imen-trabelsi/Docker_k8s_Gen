# Python Runtime Environment
FROM python:3.8-slim-buster AS base

WORKDIR /app
COPY pyproject.toml poetry.lock /app/

# Installation of dependencies
RUN pip install poetry && \

COPY . /app

# Nginx Server
FROM node:13.10.1-alpine3.10 as builder

# Running required commands
RUN apk add git

#create directories
RUN mkdir -p /frontend && \
    git clone -j4 -b master https://github.com/FUB-HCC/IKON-projektor.git /frontend && \
    yarn install --cwd /frontend/ && \
    yarn --cwd /frontend/ build && \

# Python Build Environment
FROM base as build

WORKDIR /app


# Final Image
FROM builder
COPY src/controller/src/nginx.conf /etc/nginx/nginx.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
