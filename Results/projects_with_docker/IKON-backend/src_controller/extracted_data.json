{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            "pyproject.toml": "[tool.poetry]\nname = \"topicextraction\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"wittenator <wittenator@yahoo.de>\"]\n\n[tool.poetry.dependencies]\npython = \"^3.6\"\ngensim = \"^3.8.2\"\nspacy = \"^2.2.4\"\nlapjv = \"^1.3.1\"\nscikit-learn = \"^0.22.2\"\n\n[tool.poetry.dev-dependencies]\npylint = \"^2.5.0\"\nnotebook = \"^6.0.3\"\nipywidgets = \"^7.5.1\"\n\n[build-system]\nrequires = [\"poetry>=0.12\"]\nbuild-backend = \"poetry.masonry.api\"\n"
        },
        "database": null,
        "build_system": "poetry",
        "config_files": {
            "docker-compose.yml": "version: '3.1'\nservices:\n\n  nginx:\n    container_name: Controller\n    build:\n      context: .\n      dockerfile: ./src/controller/Dockerfile\n    image: ikonresearch/controller:latest\n    restart: always\n    ports:\n      - \"443:443\"\n      - \"80:80\"\n    secrets:\n      - ssl_key\n      - ssl_crt\n\n  mwc:\n    container_name: MediaWikiConnector\n    build:\n      context: ./src/mwc/\n      dockerfile: Dockerfile\n    image: ikonresearch/mwc:latest\n    restart: always\n    environment:\n      IKONCODE: /run/secrets/ikoncode_secrets\n      SSL_KEY: /run/secrets/ssl_key\n      SSL_CRT: /run/secrets/ssl_crt\n      PORT: 443\n    secrets:\n      - ssl_key\n      - ssl_crt\n      - ikoncode_secrets\n\n  topicextraction:\n    container_name: TopicExtractionService\n    build:\n      context: ./src/topicextraction/\n      dockerfile: Dockerfile\n    image: ikonresearch/tes:latest\n    restart: always\n    environment:\n      SSL_KEY: /run/secrets/ssl_key\n      SSL_CRT: /run/secrets/ssl_crt\n      PORT: 443\n    secrets:\n      - ssl_key\n      - ssl_crt\n\n  sharing:\n    container_name: SharingService\n    build:\n      context: ./src/sharing/\n      dockerfile: Dockerfile\n    image: ikonresearch/sharing:latest\n    restart: always\n    environment:\n      SSL_KEY: /run/secrets/ssl_key\n      SSL_CRT: /run/secrets/ssl_crt\n      PORT: 443\n    secrets:\n      - ssl_key\n      - ssl_crt\n\nsecrets:\n  ssl_crt:\n    file: ./assets/ssl/server.crt\n  ssl_key:\n    file: ./assets/ssl/server.key\n  ikoncode_secrets:\n    file: ./assets/secrets/ikoncode_secrets\n",
            "src/controller/Dockerfile": "FROM node:13.10.1-alpine3.10 AS builder\nRUN apk add git\n\nRUN mkdir -p /frontend\nRUN git clone -j4 -b master https://github.com/FUB-HCC/IKON-projektor.git /frontend\nRUN yarn install --cwd /frontend/\nRUN yarn --cwd /frontend/ build\n\nFROM nginx:1.17.8-alpine\n\nRUN mkdir -p /data/nginx/cache\nCOPY --from=builder /frontend/build/ /usr/local/nginx/html/\nCOPY src/controller/src/nginx.conf /etc/nginx/nginx.conf\n"
        },
        "static_files": {
            "assets/secrets/README.md": "# IKON-backend-config\n"
        }
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "poetry.lock",
            "pyproject.toml"
        ],
        "folders": [
            "src"
        ]
    }
}