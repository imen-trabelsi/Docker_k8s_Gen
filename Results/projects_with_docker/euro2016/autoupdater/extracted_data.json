{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"euro2016\",\n  \"description\": \"UEFA Euro 2021: Betting with your friends\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/syxolk/euro2016\"\n  },\n  \"scripts\": {\n    \"start\": \"nodemon index.js\",\n    \"migrate:latest\": \"knex migrate:latest\",\n    \"migrate:rollback\": \"knex migrate:rollback\",\n    \"migrate:make\": \"knex migrate:make\",\n    \"migrate:list\": \"knex migrate:list\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^1.7.7\",\n    \"bcrypt\": \"^5.1.1\",\n    \"bootstrap\": \"^4.6.0\",\n    \"chart.js\": \"^3.3.2\",\n    \"compression\": \"^1.7.4\",\n    \"connect-flash\": \"0.1.1\",\n    \"connect-session-knex\": \"4.0.0\",\n    \"csurf\": \"^1.11.0\",\n    \"datatables.net\": \"^1.13.1\",\n    \"datatables.net-bs4\": \"^1.13.1\",\n    \"express\": \"^4.21.2\",\n    \"express-promise-router\": \"^4.1.0\",\n    \"express-session\": \"^1.18.0\",\n    \"hbs\": \"^4.1.2\",\n    \"helmet\": \"^4.6.0\",\n    \"i18next\": \"^23.11.5\",\n    \"i18next-http-middleware\": \"^3.6.0\",\n    \"jquery\": \"^3.6.0\",\n    \"knex\": \"^3.1.0\",\n    \"moment\": \"^2.29.3\",\n    \"moment-timezone\": \"^0.5.38\",\n    \"morgan\": \"^1.10.0\",\n    \"ms\": \"^2.1.3\",\n    \"mustache\": \"^4.2.0\",\n    \"node-mailjet\": \"^6.0.6\",\n    \"nodemailer\": \"^6.9.13\",\n    \"nodemon\": \"^3.1.2\",\n    \"passport\": \"^0.7.0\",\n    \"passport-facebook\": \"^3.0.0\",\n    \"passport-google-oauth20\": \"^2.0.0\",\n    \"passport-local\": \"^1.0.0\",\n    \"pg\": \"^8.11.5\",\n    \"prettier\": \"^2.3.1\",\n    \"uuid\": \"^8.3.2\"\n  }\n}\n"
        },
        "database": "PostgreSQL",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: \"3\"\nservices:\n    caddy:\n        image: caddy:2.8.1-alpine\n        restart: unless-stopped\n        ports:\n        - \"80:80\"\n        - \"443:443\"\n        - \"443:443/udp\"\n        volumes:\n        - $PWD/Caddyfile:/etc/caddy/Caddyfile\n        - caddy_data:/data\n        - caddy_config:/config\n        networks:\n        - proxy\n    web:\n        build: .\n        restart: unless-stopped\n        environment:\n        - PGHOST=db\n        - PGPORT=5432\n        - PGDATABASE=cup2024\n        - PGUSER=cup2024\n        - PGPASSWORD=123456\n        env_file:\n        - prod.env        \n        networks:\n        - db\n        - proxy\n    db:\n        image: postgres:16.3\n        restart: unless-stopped\n        environment:\n        - POSTGRES_USER=cup2024\n        - POSTGRES_DB=cup2024\n        - POSTGRES_PASSWORD=123456\n        networks:\n        - db\n        volumes:\n        - postgres_data:/var/lib/postgresql/data\n    autoupdater:\n        build: ./autoupdater\n        restart: unless-stopped\n        networks:\n        - proxy\n    backup-daemon:\n        build: ./backup-daemon\n        restart: unless-stopped\n        networks:\n        - db\n        volumes:\n        - backups:/backups\n\nnetworks:\n    proxy:\n    db:\n\nvolumes:\n    caddy_data:\n    caddy_config:\n    postgres_data:\n    backups:",
            "Dockerfile": "FROM node:22.2.0-slim\nRUN apt-get update && apt-get install -y postgresql-client\n\nWORKDIR /app\n\nCOPY package.json /app\nCOPY package-lock.json /app\nRUN npm install\n\nCOPY . /app\n\nENV NODE_ENV production\nENV TRUST_PROXY 1\nCMD [\"./entrypoint.sh\"]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "crontab"
        ],
        "folders": []
    }
}