{
    "source_code_info": {
        "language": "Python",
        "framework": "Flask",
        "dependencies": {
            "pyproject.toml": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n[tool.poetry]\nname = \"apache-skywalking\"\nversion = \"1.1.0\"\ndescription = \"The Python Agent for Apache SkyWalking, which provides the native tracing/metrics/logging/profiling abilities for Python projects.\"\nlicense = \"Apache-2.0\"\nauthors = [\"Apache Software Foundation <dev@skywalking.apache.org>\"]\nmaintainers = [\"Apache SkyWalking Community <dev@skywalking.apache.org>\"]\nreadme = \"README.md\"\nhomepage = \"https://skywalking.apache.org/\"\nrepository = \"https://github.com/apache/skywalking-python\"\ndocumentation = \"https://skywalking.apache.org/docs/skywalking-python/next/readme/\"\nkeywords = [\n  \"skywalking\",\n  \"tracing\",\n  \"metrics\",\n  \"logging\",\n  \"profiling\",\n  \"observability\",\n  \"distributed-tracing\",\n  \"apm\",\n  \"python\",\n]\nclassifiers = [\n  'License :: OSI Approved :: Apache Software License',\n\n  'Operating System :: OS Independent',\n\n  'Programming Language :: Python',\n  'Programming Language :: Python :: 3',\n  'Programming Language :: Python :: 3.8',\n  'Programming Language :: Python :: 3.9',\n  'Programming Language :: Python :: 3.10',\n  'Programming Language :: Python :: 3.11',\n\n  'Topic :: System :: Monitoring',\n  'Topic :: Software Development',\n]\n\npackages = [{ include = \"skywalking\" }, { include = \"sw_python\" }]\n\n# poetry will ignore generated files as .gitignore, but we need them in package\ninclude = ['skywalking/protocol/**/*']\nexclude = ['tests']\n\n[tool.poetry.build]\ngenerate-setup-file = true\n\n[tool.poetry.urls]\n\"Bug Tracker\" = \"https://github.com/apache/skywalking/issues\"\n\n[tool.poetry.scripts]\nsw-python = 'skywalking.bootstrap.cli.sw_python:start'\n\n\n[tool.poetry.dependencies]\npython = \">=3.8, <=3.13\"\ngrpcio = '*'\ngrpcio-tools = '*'\npackaging = '*'\nwrapt = '*'\npsutil = '<=5.9.5'\nrequests = { version = \">=2.26.0\", optional = true }\nkafka-python = { version = \"*\", optional = true }\nuvloop = { version = \"^0.17.0\", optional = true }\naiokafka = { version = \"^0.8.0\", optional = true }\naiohttp = { version = \"^3.7.4\", optional = true }\n\n[tool.poetry.extras]\nall = ['requests', 'kafka-python', 'uvloop', 'aiokafka', 'aiohttp']\nsync = ['requests', 'kafka-python']\nhttp = ['requests']\nkafka = ['kafka-python']\nasync = ['uvloop', 'aiokafka', 'aiohttp']\nasynchttp = ['uvloop', 'aiohttp']\nasynckafka = ['uvloop', 'aiokafka']\n\n[tool.poetry.group.dev.dependencies]\npkginfo = \"^1.8.3\"\ntestcontainers = \"*\"\npyyaml = \"*\"\npytest = \"*\"\nuwsgi = \"*\"\ngunicorn = \"*\"\nuvicorn = \"*\"\nkafka-python = \"*\"\nrequests = \"*\"\npytest-benchmark = \"4.0.0\"\n\n[tool.poetry.group.plugins.dependencies]\nurllib3 = \"1.26.7\"\naiohttp = \"3.7.4\"\ncelery = \"5.1.2\"\ndjango = \"3.2.8\"\nelasticsearch = \"7.15.1\"\nflask = \"2.0.2\"\ngevent = \"22.10.2\"\nhug = \"2.6.1\"\npika = \"1.2.0\"\npsycopg = { extras = [\"binary\"], version = \"^3.1.7\" }\npsycopg2-binary = \"^2.9\"\npymongo = \"3.12.0\"\npymysql = \"1.0.2\"\nmysqlclient = \"^2.1.1\"\npyramid = \"2.0\"\npyyaml = \"6.0\"\nredis = \"3.5.3\"\nsanic = \"21.9.1\"\ntornado = \"6.1\"\nwerkzeug = \"2.0.2\"\nfastapi = \"0.89.1\"\nuvicorn = \"0.16.0\"\ngunicorn = \"20.1.0\"\nbottle = \"0.12.21\"\naioredis = \"^2.0.1\"\naiormq = \"^6.4.2\"\nasyncpg = \"^0.27.0\"\nhappybase = \"1.2.0\"\nwebsockets = \"^10.4\"\nloguru = \"^0.6.0\"\nhttpx = \"^0.23.3\"\nconfluent-kafka = \"^2.0.2\"\nneo4j = \"^5.9.0\"\npulsar-client = \"3.3.0\"\ngrpcio = \"^1.49.1\"\n\n[tool.poetry.group.lint.dependencies]\npylint = '2.13.9'\nflake8 = \"^5.0.4\"\n# isort = \"^5.10.1\"\nunify = \"^0.5\"\nflynt = \"^0.76\"\nflake8-quotes = \"^3.3.1\"\nflake8-use-fstring = \"^1.4\"\npep8-naming = \"^0.13.2\"\ndarglint = \"^1.8.1\"\nflake8-eradicate = \"^1.4.0\"\nflake8-docstrings = \"^1.6.0\"\nflake8-bugbear = \"^22.9.23\"\nflake8-comprehensions = \"^3.10.0\"\nflake8-2020 = \"^1.7.0\"\n\n\n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n"
        },
        "database": "PostgreSQL",
        "build_system": "poetry",
        "config_files": {
            "docker/Dockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG BASE_PYTHON_IMAGE\nARG BUILDER_PYTHON_IMAGE\nFROM ${BASE_PYTHON_IMAGE} AS base\n\nFROM ${BUILDER_PYTHON_IMAGE} AS builder\nRUN pip install --upgrade pip\nRUN pip install poetry\nCOPY ./ /tmp/\nRUN make -C /tmp package\n# This is a temporary workaround, see #11481\nRUN pip wheel \"psutil<=5.9.5\" -w /tmp/dist/\n\nFROM base AS final\nCOPY --from=builder /tmp/dist/*.whl /tmp/\nRUN pip install --upgrade pip\nRUN pip install /tmp/psutil*.whl /tmp/apache_skywalking*.whl\nRUN rm /tmp/apache_skywalking*.whl /tmp/psutil*.whl\n# So that the agent can be auto-started when container is started\nENTRYPOINT [\"sw-python\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "Makefile"
        ],
        "folders": []
    }
}