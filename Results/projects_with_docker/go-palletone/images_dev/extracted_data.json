{
    "source_code_info": {
        "language": "Go",
        "framework": "Go",
        "dependencies": {
            "go.mod": "module github.com/palletone/go-palletone\n\ngo 1.12\n\nrequire (\n\tgithub.com/FactomProject/basen v0.0.0-20150613233007-fe3947df716e // indirect\n\tgithub.com/FactomProject/btcutilecc v0.0.0-20130527213604-d3a63a5752ec // indirect\n\tgithub.com/aristanetworks/goarista v0.0.0-20190712234253-ed1100a1c015\n\tgithub.com/btcsuite/btcd v0.0.0-20190807005414-4063feeff79a\n\tgithub.com/btcsuite/btcutil v0.0.0-20190425235716-9e5f4b9a998d\n\tgithub.com/cmars/basen v0.0.0-20150613233007-fe3947df716e // indirect\n\tgithub.com/coocood/freecache v0.0.0-20180304015925-036298587d3a\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/deckarep/golang-set v1.7.1\n\tgithub.com/docker/docker v1.4.2-0.20190710153559-aa8249ae1b8b\n\tgithub.com/elastic/gosigar v0.10.4\n\tgithub.com/ethereum/go-ethereum v1.9.0\n\tgithub.com/fatih/color v1.6.0\n\tgithub.com/fjl/memsize v0.0.0-20180418122429-ca190fb6ffbc\n\tgithub.com/fsouza/go-dockerclient v1.4.2\n\tgithub.com/golang/mock v1.3.1\n\tgithub.com/golang/protobuf v1.3.2\n\tgithub.com/golang/snappy v0.0.1\n\tgithub.com/gomodule/redigo v2.0.0+incompatible\n\tgithub.com/hashicorp/golang-lru v0.5.3\n\tgithub.com/huin/goupnp v1.0.0\n\tgithub.com/influxdata/influxdb v0.0.0-20180221223340-01288bdb0883\n\tgithub.com/jackpal/go-nat-pmp v1.0.1\n\tgithub.com/julienschmidt/httprouter v1.2.0\n\tgithub.com/looplab/fsm v0.0.0-20180515091235-f980bdb68a89\n\tgithub.com/magiconair/properties v1.8.1 // indirect\n\tgithub.com/martinlindhe/base36 v0.0.0-20180729042928-5cda0030da17\n\tgithub.com/mattn/go-colorable v0.0.9\n\tgithub.com/mitchellh/mapstructure v1.2.2 // indirect\n\tgithub.com/naoina/toml v0.0.0-20170410220130-ac014c6b6502\n\tgithub.com/palletone/adaptor v1.0.1-0.20191204100220-740fe858e09b\n\tgithub.com/palletone/btc-adaptor v1.0.1-0.20191224041536-3348ea137f6e\n\tgithub.com/palletone/digital-identity v0.6.1-0.20190729063546-3dca665105bb\n\tgithub.com/palletone/eth-adaptor v1.1.1-0.20200114040401-8226d1a11f3f\n\tgithub.com/palletone/fabric-adaptor v0.0.0-20200331153353-6319b6f26aa4\n\tgithub.com/pborman/uuid v1.2.0\n\tgithub.com/peterh/liner v0.0.0-20170902204657-a37ad3984311\n\tgithub.com/pkg/errors v0.8.1\n\tgithub.com/prometheus/client_golang v1.0.0\n\tgithub.com/prometheus/tsdb v0.10.0\n\tgithub.com/rjeczalik/notify v0.9.2\n\tgithub.com/robertkrimen/otto v0.0.0-20170205013659-6a77b7cbc37d\n\tgithub.com/rs/cors v1.7.0\n\tgithub.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24\n\tgithub.com/spf13/afero v1.2.2 // indirect\n\tgithub.com/spf13/cast v1.3.1 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.1.0 // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/spf13/viper v1.0.2\n\tgithub.com/stretchr/testify v1.3.0\n\tgithub.com/syndtr/goleveldb v1.0.0\n\tgithub.com/tyler-smith/go-bip32 v0.0.0-20170922074101-2c9cfd177564\n\tgithub.com/tyler-smith/go-bip39 v1.0.2\n\tgo.dedis.ch/kyber/v3 v3.0.3\n\tgo.uber.org/atomic v1.5.1 // indirect\n\tgo.uber.org/multierr v1.4.0 // indirect\n\tgo.uber.org/zap v0.0.0-20180531205250-88c71ae3d702\n\tgolang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4\n\tgolang.org/x/net v0.0.0-20190724013045-ca1201d0de80\n\tgolang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5\n\tgoogle.golang.org/grpc v1.23.0\n\tgopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127\n\tgopkg.in/errgo.v1 v1.0.1\n\tgopkg.in/karalabe/cookiejar.v2 v2.0.0-20150724131613-8dcd6a7f4951\n\tgopkg.in/natefinch/lumberjack.v2 v2.0.0-20170531160350-a96e63847dc3\n\tgopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce\n\tgopkg.in/urfave/cli.v1 v1.20.0\n\tlaunchpad.net/gocheck v0.0.0-20140225173054-000000000087 // indirect\n)\n"
        },
        "database": null,
        "build_system": "go mod",
        "config_files": {
            "Dockerfile": "# Build Gptn in a stock Go builder container\nFROM golang:1.12-alpine as builder\n\n#RUN apk add --no-cache make gcc musl-dev linux-headers git\nRUN apk add make gcc musl-dev linux-headers git\n\nADD . /go-palletone\nRUN cd /go-palletone && make gptn\n\n# Pull Gptn into a second stage deploy alpine container\nFROM alpine:latest\n\nRUN apk add --no-cache ca-certificates\nCOPY --from=builder /go-palletone/build/bin/gptn /usr/local/bin/\n\nEXPOSE 8545 8546 30303 30303/udp\nENTRYPOINT [\"gptn\"]\n"
        },
        "static_files": {
            "build/ci-notes.md": "# Debian Packaging\n\nTagged releases and develop branch commits are available as installable Debian packages\nfor Ubuntu. Packages are built for the all Ubuntu versions which are supported by\nCanonical.\n\nPackages of develop branch commits have suffix -unstable and cannot be installed alongside\nthe stable version. Switching between release streams requires user intervention.\n\nThe packages are built and served by launchpad.net. We generate a Debian source package\nfor each distribution and upload it. Their builder picks up the source package, builds it\nand installs the new version into the PPA repository. Launchpad requires a valid signature\nby a team member for source package uploads. The signing key is stored in an environment\nvariable which Travis CI makes available to certain builds.\n\nWe want to build go-ethereum with the most recent version of Go, irrespective of the Go\nversion that is available in the main Ubuntu repository. In order to make this possible,\nour PPA depends on the ~gophers/ubuntu/archive PPA. Our source package build-depends on\ngolang-1.10, which is co-installable alongside the regular golang package. PPA dependencies\ncan be edited at https://launchpad.net/%7Eethereum/+archive/ubuntu/ethereum/+edit-dependencies\n\n## Building Packages Locally (for testing)\n\nYou need to run Ubuntu to do test packaging.\n\nAdd the gophers PPA and install Go 1.10 and Debian packaging tools:\n\n    $ sudo apt-add-repository ppa:gophers/ubuntu/archive\n    $ sudo apt-get update\n    $ sudo apt-get install build-essential golang-1.10 devscripts debhelper\n\nCreate the source packages:\n\n    $ go run build/ci.go debsrc -workdir dist\n\nThen go into the source package directory for your running distribution and build the package:\n\n    $ cd dist/ethereum-unstable-1.6.0+xenial\n    $ dpkg-buildpackage\n\nBuilt packages are placed in the dist/ directory.\n\n    $ cd ..\n    $ dpkg-deb -c gptn-unstable_1.6.0+xenial_amd64.deb\n"
        }
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md"
        ],
        "folders": []
    }
}