# Use the specified base image
FROM jenkins/jenkins:2.138.1

# Ensure root user is enabled
USER root

# Set environment variables
ENV JENKINS_USER=admin \
    JENKINS_PASS=admin \

# Install dependencies and configure Docker
RUN apt-get update && \
    apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor > /etc/apt/trusted.gpg.d/docker.gpg && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" && \
    apt-get update && \
    apt-get install -y docker-ce && \

# Copy init.groovy and plugins.txt to their respective directories
COPY init.groovy /var/jenkins_home/init.groovy.d/
COPY plugins.txt /usr/share/jenkins/ref/plugins.txt

# Install Jenkins plugins
RUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt

# Additional steps for your app here...
# e.g., COPY your application's executable jar as app.jar
# COPY build/libs/*.jar app.jar

# Ports you want to expose...
# e.g., 8080 for Spring Boot, 50000 for Jenkins slave agents
EXPOSE 8080 50000

# If your app contains an entrypoint.sh, uncomment the following line and make it executable:
# COPY entrypoint.sh /entrypoint.sh
# RUN chmod +x /entrypoint.sh
# ENTRYPOINT ["/entrypoint.sh"]

# Or if your app is a simple Spring Boot microservice, uncomment the following line:
# ENTRYPOINT ["java","-jar","/app.jar"]
