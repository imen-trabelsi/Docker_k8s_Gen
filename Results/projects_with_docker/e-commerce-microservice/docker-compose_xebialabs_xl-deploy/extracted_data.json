{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "build.gradle": "import org.gradle.internal.os.OperatingSystem\nimport org.apache.tools.ant.filters.ReplaceTokens\n\nbuildscript {\n    repositories {\n        mavenLocal()\n        mavenCentral()\n        maven { url \"https://repo.spring.io/plugins-release\" }\n        maven { url \"https://plugins.gradle.org/m2/\" }\n    }\n    dependencies {\n        classpath \"org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}\"\n        classpath \"io.spring.gradle:propdeps-plugin:0.0.10.RELEASE\"\n        classpath \"gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.5.1\"\n        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here\n    }\n}\n\nplugins {\n    id \"org.sonarqube\" version \"2.6.2\"\n    id \"net.ltgt.apt-eclipse\" version \"0.18\"\n    id \"net.ltgt.apt-idea\" version \"0.18\"\n    id \"net.ltgt.apt\" version \"0.18\"\n    id \"io.spring.dependency-management\" version \"1.0.5.RELEASE\"\n    //jhipster-needle-gradle-plugins - JHipster will add additional gradle plugins here\n}\n\napply plugin: 'java'\nsourceCompatibility=1.8\ntargetCompatibility=1.8\n// Until JHipster supports JDK 9\nassert System.properties['java.specification.version'] == '1.8'\n\napply plugin: 'maven'\napply plugin: 'org.springframework.boot'\napply plugin: 'war'\napply plugin: 'propdeps'\napply plugin: 'io.spring.dependency-management'\napply plugin: 'idea'\n\ndependencyManagement {\n  imports {\n    mavenBom 'io.github.jhipster:jhipster-dependencies:' + jhipster_dependencies_version\n    //jhipster-needle-gradle-dependency-management - JHipster will add additional dependencies management here\n  }\n}\n\ndefaultTasks 'bootRun'\n\ngroup = 'com.xebialabs.notification'\nversion = '0.0.1-SNAPSHOT'\n\ndescription = ''\n\nbootWar {\n   mainClassName = 'com.xebialabs.notification.NotificationApp'\n}\n\nwar {\n\n}\n\nspringBoot {\n    mainClassName = 'com.xebialabs.notification.NotificationApp'\n    buildInfo()\n}\n\nif (OperatingSystem.current().isWindows()) {\n    // https://stackoverflow.com/questions/40037487/the-filename-or-extension-is-too-long-error-using-gradle\n    task classpathJar(type: Jar) {\n        dependsOn configurations.runtime\n        appendix = 'classpath'\n\n        doFirst {\n            manifest {\n                attributes 'Class-Path': configurations.runtime.files.collect {\n                    it.toURI().toURL().toString().replaceFirst(/file:\\/+/, '/').replaceAll(' ', '%20')\n                }.join(' ')\n            }\n        }\n    }\n\n    bootRun {\n        dependsOn classpathJar\n        doFirst {\n            classpath = files(\"$buildDir/classes/java/main\", \"$buildDir/resources/main\", classpathJar.archivePath)\n        }\n    }\n}\n\ntest {\n    exclude '**/CucumberTest*'\n\n    // uncomment if the tests reports are not generated\n    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484\n    // ignoreFailures true\n    reports.html.enabled = false\n}\n\ntask testReport(type: TestReport) {\n    destinationDir = file(\"$buildDir/reports/tests\")\n    reportOn test\n}\n\n\napply from: 'gradle/docker.gradle'\napply from: 'gradle/sonar.gradle'\n//jhipster-needle-gradle-apply-from - JHipster will add additional gradle scripts to be applied here\n\nif (project.hasProperty('prod')) {\n    apply from: 'gradle/profile_prod.gradle'\n} else {\n    apply from: 'gradle/profile_dev.gradle'\n}\n\n\nif (project.hasProperty('zipkin')) {\n    apply from: 'gradle/zipkin.gradle'\n}\n\n\nconfigurations {\n    providedRuntime\n    compile.exclude module: \"spring-boot-starter-tomcat\"\n}\n\nrepositories {\n    mavenLocal()\n    mavenCentral()\n    jcenter()\n    //jhipster-needle-gradle-repositories - JHipster will add additional repositories\n}\n\ndependencies {\n    // Use \", version: jhipster_dependencies_version, changing: true\" if you want\n    // to use a SNAPSHOT release instead of a stable release\n    compile group: \"io.github.jhipster\", name: \"jhipster-framework\"\n    compile \"io.dropwizard.metrics:metrics-core\"\n    compile \"io.dropwizard.metrics:metrics-json\"\n    compile \"io.dropwizard.metrics:metrics-jvm\"\n    compile \"io.dropwizard.metrics:metrics-servlet\"\n    compile \"io.dropwizard.metrics:metrics-servlets\"\n    compile \"net.logstash.logback:logstash-logback-encoder\"\n    compile \"com.fasterxml.jackson.datatype:jackson-datatype-hppc\"\n    compile \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\"\n    compile \"com.fasterxml.jackson.core:jackson-annotations\"\n    compile \"com.fasterxml.jackson.core:jackson-databind\"\n    compile \"com.fasterxml.jackson.module:jackson-module-afterburner\"\n    compile \"com.ryantenney.metrics:metrics-spring\"\n    compile \"org.apache.commons:commons-lang3\"\n    compile \"commons-io:commons-io\"\n    compile \"javax.transaction:javax.transaction-api\"\n    compile \"org.springframework.boot:spring-boot-loader-tools\"\n    compile \"org.springframework.boot:spring-boot-starter-mail\"\n    compile \"org.springframework.boot:spring-boot-starter-logging\"\n    compile \"org.springframework.boot:spring-boot-starter-actuator\"\n    compile \"org.springframework.boot:spring-boot-starter-aop\"\n    compile \"org.springframework.boot:spring-boot-starter-data-mongodb\"\n    compile \"org.springframework.boot:spring-boot-starter-security\"\n    compile (\"org.springframework.boot:spring-boot-starter-web\") {\n        exclude module: 'spring-boot-starter-tomcat'\n    }\n    compile \"org.springframework.boot:spring-boot-starter-undertow\"\n    compile \"org.springframework.boot:spring-boot-starter-thymeleaf\"\n    compile \"org.zalando:problem-spring-web:0.24.0-RC.0\"\n    compile \"org.springframework.cloud:spring-cloud-starter\"\n    compile \"org.springframework.cloud:spring-cloud-starter-netflix-ribbon\"\n    compile \"org.springframework.cloud:spring-cloud-starter-netflix-hystrix\"\n    compile \"org.springframework.retry:spring-retry\"\n    compile \"org.springframework.cloud:spring-cloud-starter-netflix-eureka-client\"\n    compile \"org.springframework.cloud:spring-cloud-starter-config\"\n    compile \"org.springframework.cloud:spring-cloud-starter-openfeign\"\n    compile \"org.springframework.cloud:spring-cloud-spring-service-connector\"\n    compile \"org.springframework.security:spring-security-config\"\n    compile \"org.springframework.security:spring-security-data\"\n    compile \"org.springframework.security:spring-security-web\"\n    compile \"io.jsonwebtoken:jjwt-api\"\n    runtime \"io.jsonwebtoken:jjwt-impl\"\n    runtime \"io.jsonwebtoken:jjwt-jackson\"\n    compile \"com.github.mongobee:mongobee\"\n    compile (\"io.springfox:springfox-swagger2\") {\n        exclude module: 'mapstruct'\n    }\n    compile \"io.springfox:springfox-bean-validators\"\n    compile \"org.mapstruct:mapstruct-jdk8:${mapstruct_version}\"\n    annotationProcessor \"org.mapstruct:mapstruct-processor:${mapstruct_version}\"\n    annotationProcessor (\"org.springframework.boot:spring-boot-configuration-processor\") {\n        exclude group: 'com.vaadin.external.google', module: 'android-json'\n    }\n    testCompile \"com.jayway.jsonpath:json-path\"\n    testCompile (\"org.springframework.boot:spring-boot-starter-test\") {\n        exclude group: 'com.vaadin.external.google', module: 'android-json'\n    }\n    testCompile \"org.springframework.security:spring-security-test\"\n    testCompile \"org.springframework.boot:spring-boot-test\"\n    testCompile \"org.assertj:assertj-core\"\n    testCompile \"junit:junit\"\n    testCompile \"org.mockito:mockito-core\"\n    testCompile \"de.flapdoodle.embed:de.flapdoodle.embed.mongo\"\n    testCompile \"org.hamcrest:hamcrest-library\"\n    //jhipster-needle-gradle-dependency - JHipster will add additional dependencies here\n}\n\ntask cleanResources(type: Delete) {\n    delete 'build/resources'\n}\n\nwrapper {\n    gradleVersion = '4.9'\n}\n\ntask stage(dependsOn: 'bootWar') {\n}\n\ncompileJava.dependsOn processResources\nprocessResources.dependsOn cleanResources,bootBuildInfo\nbootBuildInfo.mustRunAfter cleanResources\n\nif (!hasProperty('imageTag')) {\n    ext.imageTag = \"latest\"\n}\n\n\ntask sourcesForRelease(type: Copy) {\n    outputs.upToDateWhen { false }\n    from 'kubernetes'\n    exclude \"build\"\n    into 'build/kubernetes'\n    filter(ReplaceTokens, tokens: [IMAGE_TAG: project.imageTag])\n}\n"
        },
        "database": "MongoDB",
        "build_system": "Gradle",
        "config_files": {
            "docker-compose/docker-compose.yml": "version: '2'\nservices:\n    invoice-app:\n        image: ecommerce-invoice\n        environment:\n            - SPRING_PROFILES_ACTIVE=prod,swagger\n            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka\n            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config\n            - SPRING_DATASOURCE_URL=jdbc:mysql://invoice-mysql:3306/invoice?useUnicode=true&characterEncoding=utf8&useSSL=false\n            - JHIPSTER_SLEEP=30\n            - JHIPSTER_REGISTRY_PASSWORD=admin\n    invoice-mysql:\n        image: mysql:5.7.20\n        environment:\n            - MYSQL_USER=root\n            - MYSQL_ALLOW_EMPTY_PASSWORD=yes\n            - MYSQL_DATABASE=invoice\n        command:             mysqld --lower_case_table_names=1 --skip-ssl\n            --character_set_server=utf8mb4 --explicit_defaults_for_timestamp\n    \n    notification-app:\n        image: ecommerce-notification\n        environment:\n            - SPRING_PROFILES_ACTIVE=prod,swagger\n            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka\n            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config\n            - SPRING_DATA_MONGODB_URI=mongodb://notification-mongodb:27017\n            - SPRING_DATA_MONGODB_DATABASE=notification\n            - JHIPSTER_SLEEP=30\n            - JHIPSTER_REGISTRY_PASSWORD=admin\n    notification-mongodb:\n        image: mongo:3.6.3\n    \n    store-app:\n        image: ecommerce-store\n        environment:\n            - SPRING_PROFILES_ACTIVE=prod,swagger\n            - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/eureka\n            - SPRING_CLOUD_CONFIG_URI=http://admin:$${jhipster.registry.password}@jhipster-registry:8761/config\n            - SPRING_DATASOURCE_URL=jdbc:mysql://store-mysql:3306/store?useUnicode=true&characterEncoding=utf8&useSSL=false\n            - JHIPSTER_SLEEP=30\n            - JHIPSTER_REGISTRY_PASSWORD=admin\n        ports:\n            - 8080:8080\n    store-mysql:\n        image: mysql:5.7.20\n        environment:\n            - MYSQL_USER=root\n            - MYSQL_ALLOW_EMPTY_PASSWORD=yes\n            - MYSQL_DATABASE=store\n        command:             mysqld --lower_case_table_names=1 --skip-ssl\n            --character_set_server=utf8mb4 --explicit_defaults_for_timestamp\n    \n    jhipster-registry:\n        extends:\n            file: jhipster-registry.yml\n            service: jhipster-registry\n\n    jhipster-elasticsearch:\n        extends:\n            file: jhipster-console.yml\n            service: jhipster-elasticsearch\n    jhipster-logstash:\n        extends:\n            file: jhipster-console.yml\n            service: jhipster-logstash\n        depends_on:\n            - jhipster-elasticsearch\n    jhipster-console:\n        extends:\n            file: jhipster-console.yml\n            service: jhipster-console\n        depends_on:\n            - jhipster-elasticsearch\n    jhipster-import-dashboards:\n        extends:\n            file: jhipster-console.yml\n            service: jhipster-import-dashboards\n        depends_on:\n            - jhipster-elasticsearch\n",
            "docker-compose/xebialabs/xl-deploy/Dockerfile": "FROM xebialabs/xl-deploy:9.5.1\n\nCOPY default-conf/* /opt/xebialabs/xl-deploy-server/default-conf/\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            "Dockerfile",
            "app.yml",
            "docker-registry.yml",
            "entrypoint.sh",
            "hazelcast-management-center.yml",
            "jenkins.yml",
            "jhipster-registry.yml",
            "mysql.yml",
            "sonar.yml"
        ],
        "folders": [
            "central-server-config"
        ]
    }
}