# Using lightweight Node.js base image
FROM node:12-alpine as builder

# Create application directory
WORKDIR  /app

# Install build dependencies
RUN apk update && apk add --no-cache alpine-sdk build-base bash python nano postgresql-client

# Update npm package manager
RUN npm install -g pnpm

# Adding package.json for installing application dependencies
COPY package.json .

# Installing application dependencies
RUN pnpm install

# Copy all the application files inside the docker image
COPY . .

# Building the application
RUN npm run build

# Creating a directory for the supporting files
RUN mkdir -p $SUPPORTING_FILES

# Adding supporting files
COPY . $SUPPORTING_FILES

# Setting environment variable for supporting files
ENV SUPPORTING_FILES /app

# Setting user to node for security purposes
USER node

# Exposing application port for other services to access the application
EXPOSE 8080

# Healthcheck instruction example
# HEALTHCHECK CMD curl --fail http://localhost:8080/health || exit 1 

# Network configuration example
# NETWORK host

# Providing the default command the container will run when it starts
CMD ["node", "index.js"]

