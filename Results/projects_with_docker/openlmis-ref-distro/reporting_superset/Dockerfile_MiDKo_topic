# Base image
FROM python:3.8.13

# Maintainer
LABEL maintainer="admins@example.com"

# Define environment variable
ENV PYTHONUNBUFFERED 1
ENV SUPERSET_VERSION=1.5.2
ENV SUPERSET_PATCHUP_VERSION=v0.5.1
ENV APP_DIR=/usr/local/lib/python3.8/site-packages/superset
ENV GUNICORN_BIND=0.0.0.0:8088 
ENV GUNICORN_CMD_ARGS="--workers ${GUNICORN_WORKERS} -k ${WORKER_CLASS} --timeout ${GUNICORN_TIMEOUT} --bind ${GUNICORN_BIND} --limit-request-line ${GUNICORN_LIMIT_REQUEST_LINE} --limit-request-field_size ${GUNICORN_LIMIT_REQUEST_FIELD_SIZE}"
ENV NVM_DIR=/usr/local/nvm
ENV NODE_VERSION=v16.16.0
ENV NODE_PATH=$NVM_DIR/versions/node/$NODE_VERSION/lib/node_modules
ENV PATH=$NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH

# Create user
RUN useradd -U -m superset 

# Install necessary libraries
RUN mkdir /etc/superset \
    && mkdir ${SUPERSET_HOME} \
    && chown -R superset:superset /etc/superset \
    && chown -R superset:superset ${SUPERSET_HOME} \
    && apt-get update \
    && apt-get install -y rsync build-essential curl default-libmysqlclient-dev freetds-bin freetds-dev \
        postgresql-client libssl-dev libffi-dev python-dev libsasl2-dev libldap2-dev libecpg-dev \
    && apt-get clean \
    && rm -r /var/lib/apt/lists/* \
    && pip install --upgrade setuptools "pip<24.1" \
    && pip install --no-cache-dir gunicorn==20.1.0 gevent==22.10.2 git+${SUPERSET_PATCHUP_REPO} \
        apache-superset==${SUPERSET_VERSION} apache-superset[cors]==${SUPERSET_VERSION} flask-mail==0.9.1 \
        flask-oauth==0.12 flask_oauthlib==0.9.5 \

# Copy files to container and install the project requirements
COPY requirements.txt requirements.txt
COPY superset /usr/local/bin
WORKDIR $APP_DIR
COPY app-customizations/$SUPERSET_VERSION $APP_DIR

# Set permissions for script files
RUN chmod +x /usr/local/bin/superset

# Switch to non-root user
USER superset:superset

# Open the specified Ports 
EXPOSE 8088

# Healthcheck 
HEALTHCHECK CMD ["curl", "-f", "http://localhost:8088/health"]

# Run the application
CMD ["gunicorn", "superset:app"]
