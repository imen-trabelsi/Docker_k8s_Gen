{
    "docker_info": {
        "base_image": "elixir:1.11.2-alpine",
        "multi_stage_build": false,
        "exposed_ports": [],
        "user": [],
        "labels": [],
        "health_checks": [],
        "build_args": [],
        "envs": [],
        "copy_instructions": [
            "COPY ./ ./elixir-omg",
            "WORKDIR ./elixir-omg",
            "WORKDIR ./priv/perf"
        ],
        "execution": [],
        "run": [
            [
                "apk add --no-cache rust \\",
                "cargo",
                "git",
                "curl",
                "bash",
                "maven jq",
                "autoconf",
                "automake",
                "gmp",
                "gmp-dev",
                "libtool",
                "gcc",
                "cmake",
                "gnupg",
                "alpine-sdk"
            ],
            [
                "mkdir -p priv/openapitools \\",
                "&& curl https://raw.githubusercontent.com/OpenAPITools/openapi-generator/v4.3.1/bin/utils/openapi-generator-cli.sh > priv/openapitools/openapi-generator-cli",
                "&& chmod u+x priv/openapitools/openapi-generator-cli"
            ],
            [
                "priv/openapitools/openapi-generator-cli generate \\",
                "-i https://raw.githubusercontent.com/omgnetwork/omg-childchain-v1/master/apps/omg_child_chain_rpc/priv/swagger/operator_api_specs.yaml",
                "-g elixir",
                "-o priv/perf/apps/child_chain_api/"
            ],
            [
                "priv/openapitools/openapi-generator-cli generate \\",
                "-i apps/omg_watcher_rpc/priv/swagger/security_critical_api_specs.yaml",
                "-g elixir",
                "-o priv/perf/apps/watcher_security_critical_api/"
            ],
            [
                "priv/openapitools/openapi-generator-cli generate \\",
                "-i apps/omg_watcher_rpc/priv/swagger/info_api_specs.yaml",
                "-g elixir",
                "-o priv/perf/apps/watcher_info_api/"
            ],
            [
                "mix local.hex --force && mix local.rebar --force",
                ""
            ],
            [
                "mix deps.get && mix compile"
            ]
        ]
    }
}