{
    "source_code_info": {
        "language": "Rust",
        "framework": "Rust",
        "dependencies": {
            "Cargo.toml": "[package]\nname = \"pool\"\nversion = \"0.1.0\"\nauthors = [\"bdoyle\"]\n\n[[bin]]\nname = \"grin-pool\"\npath = \"src/main.rs\"\n\n[dependencies]\nbufstream = \"0.1\"\nrustc-serialize = \"*\"\njsonrpc-core = \"~4.0\"\nserde = \"1.0\"\nserde_derive = \"1.0\"\nserde_json = \"1.0\"\nlog = \"0.4\"\nlog4rs = { version = \"0.8.1\", features = [\"rolling_file_appender\", \"compound_policy\", \"size_trigger\", \"fixed_window_roller\"] }\nbacktrace = \"0.3\"\ntime = \"0.1\"\nlazy_static = \"0.2\"\ntoml = \"0.4\"\nreqwest = \"0.9.4\"\nblake2-rfc = \"0.2\"\nrand = \"0.6.5\"\nbyteorder = \"1.3.1\"\nredis = \"0.9.0\"\nqueues = \"1.0.0\"\nfailure = \"0.1.5\"\n#grin_core = \"3.1.0\"\n#grin_util = \"3.1.0\"\ngrin_core = { git = \"https://github.com/mimblewimble/grin.git\", tag = \"v3.1.0\"}\ngrin_util = \"3.1.0\"\n\n[dependencies.grin_secp256k1zkp]\n#git = \"https://github.com/mimblewimble/rust-secp256k1-zkp\"\n#tag = \"grin_integration_29\"\n#path = \"../../rust-secp256k1-zkp\"\nversion = \"=0.7.7\"\nfeatures = [\"bullet-proof-sizing\"]\n\n"
        },
        "database": "Redis",
        "build_system": "Cargo",
        "config_files": {
            "grin/Dockerfile": "# Multistage docker build, requires docker 17.05\n\n# builder stage\nFROM rust:latest as builder\n\n# Install required packages\nRUN rustup update && \\\n    set -ex && \\\n    apt-get update && \\\n    apt-get --no-install-recommends --yes install \\\n        clang \\\n        libclang-dev \\\n        llvm-dev \\\n        libncurses5 \\\n        libncursesw5 \\\n        cmake \\\n        git \\\n        libssl-dev\n\n##\n# Build Grin and Grin Wallet\nWORKDIR /usr/src\n\n# Clone grin\nRUN git clone https://github.com/mimblewimble/grin.git && \\\n    cd grin && \\\n    git checkout v3.1.0 && \\\n    git fetch\n\n# Clone grin-wallet\nRUN git clone https://github.com/mimblewimble/grin-wallet.git && \\\n    cd grin-wallet && \\\n    git checkout v3.1.0 && \\\n    git fetch\n\n# Build Grin\nWORKDIR /usr/src/grin\nRUN cargo build --release\n\n# Generate configuration\nRUN target/release/grin server config\n\n\n\n# Build Grin Wallet\nWORKDIR /usr/src/grin-wallet\n\n# Monkey Patch grin-wallet\nRUN sed -i -e 's/\\.header(CONTENT_TYPE, \"application\\/json\")//g'  controller/src/controller.rs\nRUN sed -i -e 's/127\\.0\\.0\\.1/0.0.0.0/g' config/src/types.rs\n\nRUN cargo build --release\n\n\n\n\n# runtime stage\nFROM debian:10\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \\\n    locales \\\n    procps \\\n    libssl-dev \\\n    vim \\\n    telnet \\\n    curl \\\n    python3 \\\n    netcat \\\n    net-tools \\\n    libncursesw6 \\\n      && \\\n    apt-get autoremove -y && \\\n    rm -rf /var/cache/apt\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8 \n\nENV LANG en_US.UTF-8\n\nCOPY --from=builder /usr/src/grin/target/release/grin /usr/local/bin/\nCOPY --from=builder /usr/src/grin-wallet/target/release/grin-wallet /usr/local/bin/\n\nCOPY grin-wallet.toml /usr/src/grin-wallet/grin-wallet.toml\nCOPY grin-server.toml /usr/src/grin/grin-server.toml\n\n\n\n# floonet ports\nEXPOSE 13413\nEXPOSE 13414\nEXPOSE 13415\nEXPOSE 13416\nEXPOSE 13420\n\n# mainnet ports\nEXPOSE 3413\nEXPOSE 3414\nEXPOSE 3415\nEXPOSE 3416\nEXPOSE 3420\n\nCOPY run.sh /\nCOPY run-wallet.sh /\nCOPY libheath.py /\nCMD [\"/run.sh\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "Makefile",
            "jvm.options",
            "logstash.yml",
            "poolblockfilter.conf",
            "run.sh",
            "sharefilter.conf"
        ],
        "folders": []
    }
}