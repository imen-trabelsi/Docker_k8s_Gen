{
    "source_code_info": {
        "language": "Rust",
        "framework": "Rust",
        "dependencies": {
            "Cargo.toml": "[package]\nname = \"pool\"\nversion = \"0.1.0\"\nauthors = [\"bdoyle\"]\n\n[[bin]]\nname = \"grin-pool\"\npath = \"src/main.rs\"\n\n[dependencies]\nbufstream = \"0.1\"\nrustc-serialize = \"*\"\njsonrpc-core = \"~4.0\"\nserde = \"1.0\"\nserde_derive = \"1.0\"\nserde_json = \"1.0\"\nlog = \"0.4\"\nlog4rs = { version = \"0.8.1\", features = [\"rolling_file_appender\", \"compound_policy\", \"size_trigger\", \"fixed_window_roller\"] }\nbacktrace = \"0.3\"\ntime = \"0.1\"\nlazy_static = \"0.2\"\ntoml = \"0.4\"\nreqwest = \"0.9.4\"\nblake2-rfc = \"0.2\"\nrand = \"0.6.5\"\nbyteorder = \"1.3.1\"\nredis = \"0.9.0\"\nqueues = \"1.0.0\"\nfailure = \"0.1.5\"\n#grin_core = \"3.1.0\"\n#grin_util = \"3.1.0\"\ngrin_core = { git = \"https://github.com/mimblewimble/grin.git\", tag = \"v3.1.0\"}\ngrin_util = \"3.1.0\"\n\n[dependencies.grin_secp256k1zkp]\n#git = \"https://github.com/mimblewimble/rust-secp256k1-zkp\"\n#tag = \"grin_integration_29\"\n#path = \"../../rust-secp256k1-zkp\"\nversion = \"=0.7.7\"\nfeatures = [\"bullet-proof-sizing\"]\n\n"
        },
        "database": "Redis",
        "build_system": "Cargo",
        "config_files": {
            "nginx/Dockerfile": "FROM nginx:1.15.8\n  \nRUN set -ex && \\\n    apt-get update && \\\n    apt-get -q --no-install-recommends --yes install \\\n      software-properties-common \\\n      python3 \\\n      python3-pip \\\n      gpg \\\n      git \\\n      dirmngr \\\n      curl \\\n      ruby \\\n      procps \\\n      net-tools \\\n      htop \\\n      vim \\\n      locales\n\nRUN set -ex && \\\n    echo \"deb http://ftp.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get -q --no-install-recommends --yes install \\\n      python-certbot-nginx\n                  \n\n# Common Configuration\nCOPY src/entrypoint.sh /entrypoint.sh\nCOPY src/renew_certs.sh /renew_certs.sh\nCOPY src/nginx.conf /etc/nginx/nginx.conf\nCOPY src/dhparam-2048.pem /etc/ssl/certs/dhparam-2048.pem\nCOPY src/proxy_params /etc/nginx/proxy_params\nCOPY src/cors_wide_open /etc/nginx/cors_wide_open\n\n# Permissions, paths, ports, entrypoint\nRUN chmod a+x /entrypoint.sh\n\nCMD [\"/entrypoint\"]\n\nEXPOSE 80\nEXPOSE 443\nEXPOSE 3333\n\n# General\nCOPY src/nginx.conf /etc/nginx/nginx.conf\n\n# Proxy Config\nCOPY src/stratum_proxy_params  /etc/nginx/stratum_proxy_params\n\n# Automatic Renew\nCOPY src/renew_certs.sh /\n\nRUN update-ca-certificates --fresh\n\n# mwfloopool\nRUN mkdir -p /mwfloopool.com/\nCOPY src/mwfloopool.stream.conf /mwfloopool.com/mwfloopool.stream.conf\nCOPY src/mwfloopool.http.conf /mwfloopool.com/mwfloopool.http.conf\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "Makefile",
            "jvm.options",
            "logstash.yml",
            "poolblockfilter.conf",
            "run.sh",
            "sharefilter.conf"
        ],
        "folders": []
    }
}