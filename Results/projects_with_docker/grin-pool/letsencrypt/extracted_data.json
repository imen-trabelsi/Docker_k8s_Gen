{
    "source_code_info": {
        "language": "Rust",
        "framework": "Rust",
        "dependencies": {
            "Cargo.toml": "[package]\nname = \"pool\"\nversion = \"0.1.0\"\nauthors = [\"bdoyle\"]\n\n[[bin]]\nname = \"grin-pool\"\npath = \"src/main.rs\"\n\n[dependencies]\nbufstream = \"0.1\"\nrustc-serialize = \"*\"\njsonrpc-core = \"~4.0\"\nserde = \"1.0\"\nserde_derive = \"1.0\"\nserde_json = \"1.0\"\nlog = \"0.4\"\nlog4rs = { version = \"0.8.1\", features = [\"rolling_file_appender\", \"compound_policy\", \"size_trigger\", \"fixed_window_roller\"] }\nbacktrace = \"0.3\"\ntime = \"0.1\"\nlazy_static = \"0.2\"\ntoml = \"0.4\"\nreqwest = \"0.9.4\"\nblake2-rfc = \"0.2\"\nrand = \"0.6.5\"\nbyteorder = \"1.3.1\"\nredis = \"0.9.0\"\nqueues = \"1.0.0\"\nfailure = \"0.1.5\"\n#grin_core = \"3.1.0\"\n#grin_util = \"3.1.0\"\ngrin_core = { git = \"https://github.com/mimblewimble/grin.git\", tag = \"v3.1.0\"}\ngrin_util = \"3.1.0\"\n\n[dependencies.grin_secp256k1zkp]\n#git = \"https://github.com/mimblewimble/rust-secp256k1-zkp\"\n#tag = \"grin_integration_29\"\n#path = \"../../rust-secp256k1-zkp\"\nversion = \"=0.7.7\"\nfeatures = [\"bullet-proof-sizing\"]\n\n"
        },
        "database": "Redis",
        "build_system": "Cargo",
        "config_files": {
            "letsencrypt/Dockerfile": "FROM google/cloud-sdk:latest\n\nRUN set -ex && \\\n    apt-get update && \\\n    apt-get -q --no-install-recommends --yes install \\\n      software-properties-common \\\n      locales \\\n      python3 \\\n      python3-pip \\\n      gpg \\\n      git \\\n      dirmngr \\\n      curl \\\n      ruby \\\n      procps \\\n      net-tools \\\n      htop \\\n      vim\n\n# Vim Settings\nRUN echo \"set mouse=v\" >> /root/.vimrc\n\n# For Ruby route53 hook to parse a string\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# LetsEncrypt CertBot\nRUN echo \"deb http://deb.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list && \\\n    # add-apt-repository ppa:certbot/certbot && \\\n    set -ex && \\\n    apt-get update && \\\n    apt-get -q --no-install-recommends --yes install -t stretch-backports \\\n      certbot python-certbot-nginx\n\n# dehydrated \nWORKDIR /etc/letsencrypt\nRUN git clone https://github.com/lukas2511/dehydrated.git && \\\n    cd dehydrated && \\\n    ./dehydrated --register --accept-terms\n\n# AWS SDK in ruby for dehydrated dns challenge route53 automation\nRUN gem install aws-sdk && \\\n    gem install pry && \\\n    gem install awesome_print && \\\n    gem install public_suffix\n# LetsEncrypt DNS challenge automation\nCOPY route53_hook.rb /usr/share/nginx/dehydrated/hooks/manual/\nCOPY entrypoint /entrypoint\n\n# Permissions, paths, ports, entrypoint\nRUN chmod a+x /usr/share/nginx/dehydrated/hooks/manual/route53_hook.rb && \\\n    chmod a+x /entrypoint\n\nENV PATH $PATH:/etc/letsencrypt/dehydrated\n\nCMD [\"/entrypoint\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "Makefile",
            "jvm.options",
            "logstash.yml",
            "poolblockfilter.conf",
            "run.sh",
            "sharefilter.conf"
        ],
        "folders": []
    }
}