# Use the base image provided by the user
FROM shito/alpine-nginx:edge

# Update the package list and install necessary dependencies
RUN set -x \
    && apk upgrade -U \
    && apk --update add openssl nano ffmpeg file unzip bash curl php7 php7-pdo php7-exif php7-mcrypt \
       php7-curl php7-gd php7-json php7-fpm php7-openssl php7-ctype php7-opcache php7-mbstring php7-sodium \
       php7-xml php7-ftp php7-simplexml php7-session php7-fileinfo php7-pcntl git \

# Set up architectures details
RUN /bin/bash -c 'set -ex && \
    ARCH="$(apk --print-arch)" && \
    case "${ARCH##*-}" in \
        x86_64) S6_PLATFORM="amd64" ;; \
        armv7l) S6_PLATFORM="armhf" ;; \
        armv7) S6_PLATFORM="armhf" ;; \
        armv6) S6_PLATFORM="armhf" ;; \
        armhf) S6_PLATFORM="armhf" ;; \
        arm) S6_PLATFORM="arm" ;; \
        aarch64) S6_PLATFORM="aarch64" ;; \
        i386) S6_PLATFORM="x86" ;; \
        *) echo >&2 "unsupported architecture: ${ARCH}"; exit 1 ;; \

# Download and unpack S6 overlay
RUN curl -L -s https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-${S6_PLATFORM}.tar.gz | tar xvzf - -C /

# Set up the PHP links
RUN rm /usr/bin/php && \
    ln -s /etc/php7 /etc/php && \
    ln -s /usr/bin/php7 /usr/bin/php && \
    ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm && \
    ln -s /usr/lib/php7 /usr/lib/php && \

# Set up logs, sessions, and application directories with necessary permissions
RUN mkdir -p /var/log/php-fpm && \
    ln -s /dev/stderr /var/log/php-fpm/fpm-error.log && \
    mkdir -p /var/lib/php7/sessions && \
    chown nginx:nginx /var/lib/php7/sessions && \
    mkdir -p /usr/share/nginx/html && \
    chown -Rf nginx:nginx /usr/share/nginx/html && \
    chmod +x bin/ffmpeg && \
    chmod 777 /etc/pictshare.sh && \

# Pull the latest source code
RUN git clone https://github.com/gctools-outilsgc/Image-Resource-Server.git . && \
    git checkout master && \
    git pull && \
    mv inc/example.config.inc.php inc/config.inc.php && \

# Copy rootfs content into root directory, set working directory and expose the port
COPY /rootfs /
WORKDIR /usr/share/nginx/html
EXPOSE 80

# Define execution entry point
ENTRYPOINT ["/etc/pictshare.sh"]
