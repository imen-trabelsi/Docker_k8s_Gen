{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"api-node\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"lint\": \"standard --fix\",\n    \"dev\": \"nodemon src/index.js\",\n    \"start\": \"nodemon src/index.js\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"bcrypt\": \"^4.0.1\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^8.2.0\",\n    \"express\": \"^4.17.1\",\n    \"jsonwebtoken\": \"^8.5.1\",\n    \"node-fetch\": \"^2.6.0\",\n    \"pg\": \"^8.0.0\",\n    \"pg-hstore\": \"^2.3.3\",\n    \"sequelize\": \"^5.21.6\",\n    \"sequelize-cli\": \"^5.5.1\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.2\",\n    \"standard\": \"^14.3.3\"\n  }\n}\n"
        },
        "database": "PostgreSQL",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: \"3.3\"\n\nservices:\n  nextjs:\n    ports:\n      - 3000:3000\n    build: ./frontend/\n    volumes:\n      - ./frontend/:/usr/src/app\n      - /usr/src/app/node_modules\n      - /usr/src/app/.next\n    networks:\n      - backend\n  api-php:\n    build: ./api-php/\n    volumes:\n      - ./api-php/src:/var/www/html\n    ports:\n      - 8000:8000\n    networks:\n      - backend\n  api-node:\n    build: ./api-node/\n    volumes:\n      - ./api-node/:/usr/src/app\n      - node_modules:/usr/src/app/node_modules\n    ports:\n      - 8001:8001\n    command: npm start\n    networks:\n      - backend\n  api-python:\n    build: ./api-python/\n    volumes:\n      - ./api-python/app:/app\n    ports:\n      - 8002:8002\n    environment:\n      - FLASK_APP=main.py\n      - FLASK_DEBUG=1\n      - FLASK_ENV=development\n      - LISTEN_PORT=8002\n      - 'RUN=flask run --host=0.0.0.0 --port=8002'\n    command: flask run --host=0.0.0.0 --port=8002\n    networks:\n      - backend\n  proxy:\n    image: nginx:alpine\n    depends_on:\n      - api-node\n      - api-php\n      - api-python\n      - nextjs\n    volumes:\n      - ./default.conf:/etc/nginx/conf.d/default.conf\n    ports:\n      - 80:80\n      - 443:443\n    networks:\n      - backend\n  postgres:\n    image: postgres:11-alpine\n    volumes:\n         - \"./data/postgres:/var/lib/postgresql/data\"\n    environment:\n      - POSTGRES_USER=admin\n      - POSTGRES_PASSWORD=admin\n      - POSTGRES_DB=develop\n    ports:\n     - \"5432:5432\"\n    networks:\n     - backend\n\nnetworks:\n  backend:\n    driver: \"bridge\"\n\nvolumes:\n  node_modules:",
            "api-python/Dockerfile": "FROM tiangolo/meinheld-gunicorn-flask:python3.8-alpine3.11\n\nRUN apk --no-cache add build-base bash postgresql-dev\n\nWORKDIR /app\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\nCOPY ./app/requirements.txt ./\n\nRUN pip install -U pip && pip install -r requirements.txt\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "next.config.js",
            "package-lock.json",
            "package.json"
        ],
        "folders": [
            "components",
            "lib",
            "pages",
            "public",
            "services"
        ]
    }
}