{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>cache-invalidation-cdc-debezium</artifactId>\n        <groupId>io.redis.demos</groupId>\n        <version>1.0-SNAPSHOT</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>db-to-streams-service</artifactId>\n\n    <dependencies>\n        <!-- Debezium Engine & API (embedded) -->\n        <dependency>\n            <groupId>io.debezium</groupId>\n            <artifactId>debezium-api</artifactId>\n            <version>${version.debezium}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>io.debezium</groupId>\n            <artifactId>debezium-embedded</artifactId>\n            <version>${version.debezium}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-log4j12</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <!-- Debezium MySQL Connector -->\n        <dependency>\n            <groupId>io.debezium</groupId>\n            <artifactId>debezium-connector-mysql</artifactId>\n            <version>${version.debezium}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>redis.clients</groupId>\n            <artifactId>jedis</artifactId>\n            <version>${version.jedis}</version>\n        </dependency>\n        <!-- SpringBoot related dependencies -->\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n\n    </dependencies>\n\n    <repositories>\n        <repository>\n            <id>snapshots-repo</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </repository>\n    </repositories>\n\n\n    <build>\n        <plugins>\n\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <annotationProcessorPaths>\n                        <path>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                            <version>1.18.12</version>\n                        </path>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>dev</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <properties>\n                <spring.profiles.active>dev</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <id>prod</id>\n            <properties>\n                <spring.profiles.active>prod</spring.profiles.active>\n            </properties>\n        </profile>\n    </profiles>\n\n</project>"
        },
        "database": "MySQL",
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '3.7'\nservices:\n\n  app-redis:\n    build:\n      context: ./redis-server\n      dockerfile: Dockerfile\n    ports:\n      - \"6379:6379\"\n    networks:\n      - redis-microservices-network\n    restart: always\n\n  app-mysql:\n    build:\n      context: ./mysql-database\n      dockerfile: Dockerfile\n    ports:\n      - \"3306:3306\"\n    environment:\n      - MYSQL_ROOT_PASSWORD=debezium\n      - MYSQL_USER=mysqluser\n      - MYSQL_PASSWORD=mysqlpw\n    networks:\n      - redis-microservices-network\n    restart: always\n\n  app-db-to-streams:\n    build:\n      context: ./db-to-streams-service\n      dockerfile: Dockerfile\n    ports:\n      - \"8082:8082\"\n    environment:\n      - REDIS_HOST=app-redis\n      - REDIS_PORT=6379\n      - REDIS_PASSWORD=\n    networks:\n      - redis-microservices-network\n    restart: always\n    depends_on:\n      - app-mysql\n      - app-redis\n\n  app-streams-to-redisgraph:\n    build:\n      context: ./streams-to-redisgraph-service\n      dockerfile: Dockerfile\n    ports:\n      - \"8083:8083\"\n    environment:\n      - REDIS_HOST=app-redis\n      - REDIS_PORT=6379\n      - REDIS_PASSWORD=\n    networks:\n      - redis-microservices-network\n    restart: always\n    depends_on:\n      - app-mysql\n      - app-redis\n\n  app-sql-rest-api:\n    build:\n      context: ./sql-rest-api\n      dockerfile: Dockerfile\n    ports:\n      - \"8081:8081\"\n    environment:\n      - SPRING_DATASOURCE_URL=jdbc:mysql://app-mysql:3306/inventory\n      - SPRING_DATASOURCE_USERNAME=mysqluser\n      - SPRING_DATASOURCE_PASSWORD=mysqlpw\n    networks:\n      - redis-microservices-network\n    depends_on:\n      - app-mysql\n    restart: always\n\n  app-caching:\n    build:\n      context: ./caching-service\n      dockerfile: Dockerfile\n    ports:\n      - \"8084:8084\"\n    environment:\n      - REDIS_HOST=app-redis\n      - REDIS_PORT=6379\n      - REDIS_PASSWORD=\n    networks:\n      - redis-microservices-network\n    depends_on:\n      - app-mysql\n      - app-redis\n    restart: always\n\n  app-streams-to-redis-hashes:\n    build:\n      context: ./streams-to-redisearch-service\n      dockerfile: Dockerfile\n    ports:\n      - \"8085:8085\"\n    environment:\n      - REDIS_HOST=app-redis\n      - REDIS_PORT=6379\n      - REDIS_PASSWORD=\n    networks:\n      - redis-microservices-network\n    depends_on:\n      - app-redis\n    restart: always\n\n  app-comments:\n    build:\n      context: ./comments-service\n      dockerfile: Dockerfile\n    ports:\n      - \"8086:8086\"\n    environment:\n      - REDIS_HOST=app-redis\n      - REDIS_PORT=6379\n      - REDIS_PASSWORD=\n    networks:\n      - redis-microservices-network\n    depends_on:\n      - app-redis\n    restart: always\n\n  ws-notifications-service:\n      build:\n        context: ./notifications-service-node\n        dockerfile: Dockerfile\n      ports:\n        - \"8888:8888\"\n      environment:\n        - REDIS_HOST=app-redis\n        - REDIS_PORT=6379\n        - REDIS_PASSWORD=\n      networks:\n        - redis-microservices-network\n      depends_on:\n        - app-redis\n      restart: always\n      \n  app-frontend:\n    build:\n      context: ./ui-redis-front-end/redis-front\n      dockerfile: Dockerfile\n    ports:\n      - \"8080:80\"\n    networks:\n      - redis-microservices-network\n    depends_on:\n      - app-redis\n      - app-mysql\n      - app-streams-to-redisgraph\n      - app-streams-to-redis-hashes\n      - app-db-to-streams\n      - app-caching\n      - app-sql-rest-api\n    restart: always\n\nnetworks:\n  redis-microservices-network:\n    driver: bridge",
            "db-to-streams-service/Dockerfile": "FROM openjdk:8-jdk-alpine\n\nCOPY target/*.jar /app.jar\n\nENV REDIS_HOST=redis-service\nENV REDIS_PORT=6379\nENV REDIS_PASSWORD=\n\nENV DATABASE_HOSTNAME=app-mysql\nENV DATABASE_PORT=3306\nENV DATABASE_USER=debezium\nENV DATABASE_PASSWORD=dbz\n\nEXPOSE 8082\nENTRYPOINT [\"java\",\"-jar\",\"/app.jar\",\"--spring.profiles.active=prod\"]\n\n\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}