{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.azure.cosmos.kafka</groupId>\n    <artifactId>kafka-connect-cosmos</artifactId>\n    <version>1.17.0</version>\n\n    <name> kafka-connect-cosmos</name>\n    <url>https://github.com/microsoft/kafka-connect-cosmosdb</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <kafka.version>2.8.2</kafka.version>\n        <log4j.version>2.17.1</log4j.version>\n        <slf4j.version>1.7.30</slf4j.version>\n        <confluent-log4j.version>1.2.17-cp2</confluent-log4j.version>\n    </properties>\n\n    <repositories>\n        <repository>\n            <id>confluent</id>\n            <name>Confluent</name>\n            <url>https://packages.confluent.io/maven/</url>\n        </repository>\n    </repositories>\n         \n    <licenses>\n         <license>\n            <name>MIT License</name>\n            <url>https://mit-license.org/</url>\n            <distribution>repo</distribution>\n         </license>\n    </licenses>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.kafka</groupId>\n            <artifactId>connect-api</artifactId>\n            <version>${kafka.version}</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.azure</groupId>\n            <artifactId>azure-cosmos</artifactId>\n            <version>4.67.0</version>\n        </dependency>\n        <dependency>\n            <groupId>com.jayway.jsonpath</groupId>\n            <artifactId>json-path</artifactId>\n            <version>2.9.0</version>\n        </dependency>\n        <!-- remove once jsonpath increments version -->\n        <dependency>\n            <groupId>net.minidev</groupId>\n            <artifactId>json-smart</artifactId>\n            <version>2.5.2</version>\n        </dependency>\n\n        <!-- Apache commons -->\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-collections4</artifactId>\n            <version>4.4</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>3.12.0</version>\n        </dependency>\n\n        <!--Logging-->\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-api</artifactId>\n            <version>${log4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-core</artifactId>\n            <version>${log4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>${slf4j.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>log4j</groupId>\n                    <artifactId>log4j</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>io.confluent</groupId>\n            <artifactId>confluent-log4j</artifactId>\n            <version>${confluent-log4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>${slf4j.version}</version>\n        </dependency>\n\n        <!--Testing-->\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest</artifactId>\n            <version>2.2</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.kafka</groupId>\n            <artifactId>connect-runtime</artifactId>\n            <version>${kafka.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>3.6.28</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.sourcelab</groupId>\n            <artifactId>kafka-connect-client</artifactId>\n            <version>4.0.3</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.confluent</groupId>\n            <artifactId>kafka-avro-serializer</artifactId>\n            <version>6.0.1</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>3.1.1</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.puppycrawl.tools</groupId>\n                        <artifactId>checkstyle</artifactId>\n                        <version>8.29</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <configLocation>google_checks.xml</configLocation>\n                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>\n                    <encoding>UTF-8</encoding>\n                    <consoleOutput>true</consoleOutput>\n                    <failsOnError>true</failsOnError>\n                    <linkXRef>false</linkXRef>\n                    <failOnViolation>true</failOnViolation>\n                    <violationSeverity>warning</violationSeverity>\n                </configuration>\n                <executions>\n                    <execution>\n                    <id>validate</id>\n                    <phase>compile</phase>\n                    <goals>\n                        <goal>check</goal>\n                    </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>com.github.spotbugs</groupId>\n                <artifactId>spotbugs-maven-plugin</artifactId>\n                <version>4.0.0</version>\n                <dependencies>\n                    <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->\n                    <dependency>\n                        <groupId>com.github.spotbugs</groupId>\n                        <artifactId>spotbugs</artifactId>\n                        <version>4.2.0</version>\n                    </dependency>\n                </dependencies>\n                <executions>\n                    <execution>\n                        <id>validate</id>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.2.0</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                        </manifest>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.2.1</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <configuration>\n                            <finalName>${project.artifactId}-${project.version}-jar-with-dependencies</finalName>\n                            <filters>\n                                <filter>\n                                    <artifact>*:*</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/maven/**</exclude>\n                                        <exclude>META-INF/*.SF</exclude>\n                                        <exclude>META-INF/*.DSA</exclude>\n                                        <exclude>META-INF/*.RSA</exclude>\n                                    </excludes>\n                                </filter>\n                            </filters>\n                            <relocations>\n                                <relocation>\n                                    <pattern>io.netty</pattern>\n                                    <shadedPattern>shaded.io.netty</shadedPattern>\n                                    <includes>\n                                        <include>io.netty.**</include>\n                                    </includes>\n                                </relocation>\n                            </relocations>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>io.confluent</groupId>\n                <version>0.11.3</version>\n                <artifactId>kafka-connect-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>kafka-connect</goal>\n                        </goals>\n                        <configuration>\n                            <title>Azure Cosmos DB Connector</title>\n                            <documentationUrl>https://github.com/microsoft/kafka-connect-cosmosdb</documentationUrl>\n                            <sourceUrl>https://github.com/microsoft/kafka-connect-cosmosdb</sourceUrl>\n                            <description>\n                                The Azure Cosmos DB connectors allow moving data between Azure Cosmos DB and Kafka. The Cosmos DB Sink connector writes data from a Kafka topic to a Cosmos DB container. The Cosmos DB Source connector writes changes from a Cosmos DB container to a Kafka topic.\n                            </description>\n                            <logo>doc/images/microsoft.png</logo>\n                            <version>${project.version}</version>\n                            <ownerUsername>microsoftcorporation</ownerUsername>\n                            <ownerName>Microsoft Corporation</ownerName>\n                            <ownerLogo>doc/images/microsoft.png</ownerLogo>\n                            <componentTypes>\n                                <componentType>source</componentType>\n                                <componentType>sink</componentType>\n                            </componentTypes>\n                            <tags>\n                                <tag>Azure</tag>\n                                <tag>Cosmos</tag>\n                                <tag>Cosmos DB</tag>\n                                <tag>Database</tag>\n                                <tag>Source</tag>\n                                <tag>Sink</tag>\n                                <tag>Kafka Connect</tag>\n                            </tags>\n                            <confluentControlCenterIntegration>true</confluentControlCenterIntegration>\n                            <supportProviderName>Microsoft Corporation</supportProviderName>\n                            <supportUrl>https://github.com/microsoft/kafka-connect-cosmosdb/issues</supportUrl>\n                            <supportLogo>doc/images/microsoft.png</supportLogo>\n                            <supportProviderName>Microsoft Corporation</supportProviderName>\n                            <supportSummary>This project is in preview. File any issues, feature requests, or questions under issues at: https://github.com/microsoft/kafka-connect-cosmosdb/issues\n                            </supportSummary>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-clean-plugin</artifactId>\n                <version>3.1.0</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.0.2</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>3.0.0-M5</version>\n                <configuration>\n                    <excludedGroups>com.azure.cosmos.kafka.connect.IntegrationTest</excludedGroups>\n                    <skip>${skipSurefire}</skip>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n                <version>3.0.0-M5</version>\n                <executions>\n                    <execution>\n                    <goals>\n                        <goal>integration-test</goal>\n                        <goal>verify</goal>\n                    </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.7</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>generate-code-coverage-report</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "src/docker/.env": "BOOTSTRAP_SERVERS=\nSASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username=\"ClusterKey\" password=\"ClusterSecret\";\nSCHEMA_REGISTRY_URL=\nBASIC_AUTH_CREDENTIALS_SOURCE=USER_INFO\nSCHEMA_REGISTRY_BASIC_AUTH_USER_INFO=SchemaRegistryKey:SchemaRegistrySecret",
            "src/docker/docker-compose.yml": "# Adapted from https://github.com/confluentinc/cp-all-in-one and https://github.com/simplesteph/kafka-stack-docker-compose\nversion: '2.1'\n\nservices:\n  zookeeper:\n    image: confluentinc/cp-zookeeper:6.0.0\n    restart: unless-stopped\n    hostname: zookeeper\n    container_name: zookeeper\n    ports:\n      - \"2181:2181\"\n    environment:\n      ZOOKEEPER_CLIENT_PORT: 2181\n      ZOOKEEPER_TICK_TIME: 2000\n\n  schema-registry:\n    image: confluentinc/cp-schema-registry:7.4.0\n    hostname: schema-registry\n    container_name: schema-registry\n    ports:\n      - '8081:8081'\n    environment:\n      SCHEMA_REGISTRY_HOST_NAME: schema-registry\n      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081\n      SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: \"SASL_SSL\"\n      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: \"PLAIN\"\n    depends_on:\n      - broker\n\n  schema-registry-ui:\n    image: landoop/schema-registry-ui:0.9.4\n    hostname: schema-registry-ui\n    container_name: schema-registry-ui\n    ports:\n      - \"9001:8000\"\n    environment:\n      SCHEMAREGISTRY_URL: ${SCHEMA_REGISTRY_URL}\n      PROXY: \"true\"\n    depends_on:\n      - schema-registry\n\n  broker:\n    image: confluentinc/cp-server:6.0.0\n    hostname: broker\n    container_name: broker\n    ports:\n      - \"9092:9092\"\n      - \"9101:9101\"\n    environment:\n      KAFKA_BROKER_ID: 1\n      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://${BOOTSTRAP_SERVERS}\n      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0\n      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1\n      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1\n      KAFKA_JMX_PORT: 9101\n      KAFKA_JMX_HOSTNAME: ccloud\n      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}\n      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1\n      CONFLUENT_METRICS_ENABLE: 'true'\n      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'\n    depends_on:\n      - zookeeper\n\n\n  ksqldb-server:\n    image: confluentinc/cp-ksqldb-server:7.4.0\n    hostname: ksqldb-server\n    container_name: ksqldb-server\n    ports:\n      - \"8089:8089\"\n    environment:\n      KSQL_HOST_NAME: ksqldb-server\n      KSQL_CONFIG_DIR: \"/etc/ksql\"\n      KSQL_LISTENERS: \"http://0.0.0.0:8089\"\n      KSQL_AUTO_OFFSET_RESET: \"earliest\"\n      KSQL_COMMIT_INTERVAL_MS: 0\n      KSQL_CACHE_MAX_BYTES_BUFFERING: 0\n      KSQL_KSQL_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}\n      KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: ${BASIC_AUTH_CREDENTIALS_SOURCE}\n      KSQL_KSQL_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: ${SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO}\n      KSQL_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      KSQL_SECURITY_PROTOCOL: \"SASL_SSL\"\n      KSQL_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      KSQL_SASL_MECHANISM: \"PLAIN\"\n      KSQL_KSQL_STREAMS_PRODUCER_RETRIES: 2147483647\n      KSQL_KSQL_STREAMS_PRODUCER_CONFLUENT_BATCH_EXPIRE_MS: 9223372036854775807\n      KSQL_KSQL_STREAMS_PRODUCER_REQUEST_TIMEOUT_MS: 300000\n      KSQL_KSQL_STREAMS_PRODUCER_MAX_BLOCK_MS: 9223372036854775807\n      KSQL_KSQL_STREAMS_PRODUCER_DELIVERY_TIMEOUT_MS: 2147483647\n      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 3\n      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 3\n      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 3\n      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'\n      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'\n      # Producer Confluent Monitoring Interceptors for Control Center streams monitoring\n      KSQL_PRODUCER_INTERCEPTOR_CLASSES: \"io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor\"\n      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN\n      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: \"SASL_SSL\"\n      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      # Consumer Confluent Monitoring Interceptors for Control Center streams monitoring\n      KSQL_CONSUMER_INTERCEPTOR_CLASSES: \"io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor\"\n      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN\n      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: \"SASL_SSL\"\n      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      KSQL_KSQL_CONNECT_URL: \"http://connect:8083\"\n    depends_on:\n      - broker\n      - connect\n\n\n  ksqldb-cli:\n    image: confluentinc/cp-ksqldb-cli:7.4.0\n    container_name: ksqldb-cli\n    entrypoint: /bin/sh\n    tty: true\n\n  control-center:\n    image: confluentinc/cp-enterprise-control-center:7.4.0\n    hostname: control-center\n    container_name: control-center\n    ports:\n      - \"9021:9021\"\n    environment:\n      CONTROL_CENTER_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      CONTROL_CENTER_KSQL_KSQLDB1_URL: \"http://ksqldb-server:8089\"\n      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: \"http://localhost:8089\"\n      CONTROL_CENTER_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}\n      CONTROL_CENTER_SCHEMA_REGISTRY_BASIC_AUTH_CREDENTIALS_SOURCE: ${BASIC_AUTH_CREDENTIALS_SOURCE}\n      CONTROL_CENTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: ${SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO}\n      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: \"connect:8083\"\n      CONTROL_CENTER_STREAMS_SECURITY_PROTOCOL: SASL_SSL\n      CONTROL_CENTER_STREAMS_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      CONTROL_CENTER_STREAMS_SASL_MECHANISM: PLAIN\n      CONTROL_CENTER_REPLICATION_FACTOR: 3\n      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 3\n      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 3\n      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 3\n      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 3\n      CONFLUENT_METRICS_TOPIC_REPLICATION: 3\n      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 3\n      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1\n      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1\n      # Workaround for MMA-3564\n      CONTROL_CENTER_METRICS_TOPIC_MAX_MESSAGE_BYTES: 8388608\n      PORT: 9021\n    depends_on:\n      - broker\n      - schema-registry\n      - connect\n\n  connect:\n    image: cosmosdb-kafka-connect:latest\n    hostname: connect\n    container_name: connect\n    ports:\n      - \"8083:8083\"\n    environment:\n      CONNECT_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      CONNECT_GROUP_ID: \"connect\"\n      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs\n      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets\n      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status\n      CONNECT_REPLICATION_FACTOR: 3\n      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3\n      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3\n      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3\n      CONNECT_KEY_CONVERTER: \"org.apache.kafka.connect.storage.StringConverter\"\n      CONNECT_VALUE_CONVERTER: \"io.confluent.connect.avro.AvroConverter\"\n      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: \"true\"\n      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}\n      CONNECT_VALUE_CONVERTER_BASIC_AUTH_CREDENTIALS_SOURCE: ${BASIC_AUTH_CREDENTIALS_SOURCE}\n      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: ${SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO}\n      CONNECT_REST_ADVERTISED_HOST_NAME: \"connect\"\n      CONNECT_PLUGIN_PATH: \"/usr/share/java,/usr/share/confluent-hub-components,/etc/kafka-connect/jars\"\n      CONNECT_LOG4J_ROOT_LOGLEVEL: WARN\n      CONNECT_LOG4J_LOGGERS: org.apache.kafka=INFO,org.reflections=ERROR,com.azure.cosmos.kafka=DEBUG\n      # CLASSPATH required due to CC-2422\n      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.2.0.jar\n      # Connect worker\n      CONNECT_SECURITY_PROTOCOL: SASL_SSL\n      CONNECT_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      CONNECT_SASL_MECHANISM: PLAIN\n      # Connect producer\n      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL\n      CONNECT_PRODUCER_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      CONNECT_PRODUCER_SASL_MECHANISM: PLAIN\n      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: \"io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor\"\n      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL\n      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN\n      # Connect consumer\n      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL\n      CONNECT_CONSUMER_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      CONNECT_CONSUMER_SASL_MECHANISM: PLAIN\n      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: \"io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor\"\n      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SECURITY_PROTOCOL: SASL_SSL\n      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: PLAIN\n    depends_on:\n      - zookeeper\n      - broker\n      - schema-registry\n      - rest-proxy\n\n  rest-proxy:\n    image: confluentinc/cp-kafka-rest:7.4.0\n    ports:\n      - \"8082:8082\"\n    hostname: rest-proxy\n    container_name: rest-proxy\n    environment:\n      KAFKA_REST_HOST_NAME: rest-proxy\n      KAFKA_REST_LISTENERS: \"http://0.0.0.0:8082\"\n      KAFKA_REST_SCHEMA_REGISTRY_URL: ${SCHEMA_REGISTRY_URL}\n      KAFKA_REST_CLIENT_BASIC_AUTH_CREDENTIALS_SOURCE: ${BASIC_AUTH_CREDENTIALS_SOURCE}\n      KAFKA_REST_CLIENT_SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO: ${SCHEMA_REGISTRY_BASIC_AUTH_USER_INFO}\n      KAFKA_REST_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      KAFKA_REST_SECURITY_PROTOCOL: \"SASL_SSL\"\n      KAFKA_REST_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      KAFKA_REST_SASL_MECHANISM: \"PLAIN\"\n      KAFKA_REST_CLIENT_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}\n      KAFKA_REST_CLIENT_SECURITY_PROTOCOL: \"SASL_SSL\"\n      KAFKA_REST_CLIENT_SASL_JAAS_CONFIG: ${SASL_JAAS_CONFIG}\n      KAFKA_REST_CLIENT_SASL_MECHANISM: \"PLAIN\"\n    depends_on:\n      - broker\n      - schema-registry\n\n\n  kafka-topics-ui:\n    image: landoop/kafka-topics-ui:0.9.4\n    hostname: kafka-topics-ui\n    container_name: kafka-topics-ui\n    ports:\n      - \"9000:8000\"\n    environment:\n      KAFKA_REST_PROXY_URL: \"http://rest-proxy:8082/\"\n      PROXY: \"true\"\n    depends_on:\n      - zookeeper\n      - broker\n      - schema-registry\n      - rest-proxy\n\n  zoonavigator:\n    image: elkozmon/zoonavigator:0.8.0\n    container_name: zoonavigator\n    ports:\n      - \"9004:8000\"\n    environment:\n      HTTP_PORT: 8000\n      AUTO_CONNECT_CONNECTION_STRING: zookeeper:2181\n",
            "src/docker/Dockerfile": "# Build the Cosmos DB Connectors on top of the Kafka Connect image\nFROM confluentinc/cp-kafka-connect:6.0.0\n\n# Install datagen connector\nRUN confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest\n\nCOPY connectors/ /etc/kafka-connect/jars\n"
        },
        "static_files": {
            "src/docker/resources/sink-uuid-smt.example.json": "{\n\t\"name\": \"cosmosdb-sink-connector\",\n\t\"config\": {\n\t  \"connector.class\": \"com.azure.cosmos.kafka.connect.sink.CosmosDBSinkConnector\",\n\t  \"tasks.max\": \"1\",\n\t  \"topics\": \"sink-test\",\n\t  \"value.converter\": \"org.apache.kafka.connect.json.JsonConverter\",\n\t  \"value.converter.schemas.enable\": \"false\",\n\t  \"key.converter\": \"org.apache.kafka.connect.json.JsonConverter\",\n\t  \"key.converter.schemas.enable\": \"false\",\n\t  \"connect.cosmosdb.connection.endpoint\": \"https://<cosmosinstance-name>.documents.azure.com:443/\",\n\t  \"connect.cosmosdb.master.key\": \"<cosmosdbprimarykey>\",\n\t  \"connect.cosmosdb.databasename\": \"kafkaconnect\",\n\t  \"connect.cosmosdb.containers.topicmap\": \"sink-test#kafka\",\n\t  \"transforms\": \"insertID\",\n\t  \"transforms.insertID.type\": \"com.github.cjmatta.kafka.connect.smt.InsertUuid$Value\",\n\t  \"transforms.insertID.uuid.field.name\": \"id\"\n\t}\n}\n",
            "src/docker/resources/sink.example.json": "{\n  \"name\": \"cosmosdb-sink-connector\",\n  \"config\": {\n    \"connector.class\": \"com.azure.cosmos.kafka.connect.sink.CosmosDBSinkConnector\",\n    \"tasks.max\": \"1\",\n    \"topics\": \"sink-test\",\n    \"value.converter\": \"org.apache.kafka.connect.json.JsonConverter\",\n    \"value.converter.schemas.enable\": \"false\",\n    \"key.converter\": \"org.apache.kafka.connect.json.JsonConverter\",\n    \"key.converter.schemas.enable\": \"false\",\n    \"connect.cosmos.connection.endpoint\": \"https://<cosmosinstance-name>.documents.azure.com:443/\",\n    \"connect.cosmos.master.key\": \"<cosmosdbprimarykey>\",\n    \"connect.cosmos.databasename\": \"kafkaconnect\",\n    \"connect.cosmos.containers.topicmap\": \"sink-test#kafka\"\n  }\n}\n",
            "src/docker/resources/source.example.json": "{\n  \"name\": \"cosmosdb-source-connector\",\n  \"config\": {\n    \"connector.class\": \"com.azure.cosmos.kafka.connect.source.CosmosDBSourceConnector\",\n    \"tasks.max\": \"1\",\n    \"value.converter\": \"org.apache.kafka.connect.json.JsonConverter\",\n    \"value.converter.schemas.enable\": \"false\",\n    \"key.converter\": \"org.apache.kafka.connect.json.JsonConverter\",\n    \"key.converter.schemas.enable\": \"false\",\n    \"connect.cosmos.task.poll.interval\": \"1000\",\n    \"connect.cosmos.offset.useLatest\": false,\n    \"connect.cosmos.connection.endpoint\": \"https://<cosmosinstance-name>.documents.azure.com:443/\",\n    \"connect.cosmos.master.key\": \"<cosmosdbprimarykey>\",\n    \"connect.cosmos.databasename\": \"kafkaconnect\",\n    \"connect.cosmos.containers.topicmap\": \"source-test#kafka\"\n  }\n}\n"
        }
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "devcontainer.json",
            "post-install.sh"
        ],
        "folders": [
            "library-scripts"
        ]
    }
}