# Use the base image provided by user
FROM php:8.1.29-fpm-alpine3.20

# Set environment variables
ENV OPG_PHP_POOL_CHILDREN_MAX="25"

# Install system dependencies and PHP extensions
RUN set -xe \
&& apk add --update --no-cache icu gettext fcgi \
&& install-php-extensions apcu redis-^5 intl gettext opcache \

# Copy the necessary files and content
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin/
COPY service-front/docker/app/app-php.ini /usr/local/etc/php/conf.d/
COPY service-front/docker/app/fpm-pool.ini /usr/local/etc/php-fpm.d/zz-logging.conf
COPY service-front/docker/app/health-check.sh /usr/local/bin/health-check.sh

# Set work directory
WORKDIR /app

# Copy Composer and application files
COPY --from=composer /usr/bin/composer /usr/bin/
COPY service-front/app/composer.json service-front/app/composer.lock /app/
COPY service-front/app /app

# Copy vendor dependencies
COPY --from=dependency /app/vendor /app/vendor

# Copy PHP extensions and Composer binary again
COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin/
COPY --from=composer /usr/bin/composer /usr/bin/

# Copy additional config and scripts
COPY service-front/docker/app/app-php-development.ini /usr/local/etc/php/conf.d/app-php.ini
COPY scripts/docker_hardening/harden.sh /harden.sh

# Install composer dependencies
RUN composer install --prefer-dist --no-dev --no-interaction --no-scripts --optimize-autoloader \

# Install debugging extensions and clean up
RUN set -xe \
&& install-php-extensions xdebug-stable \

# Apply hardening and clean up
RUN chmod +x /harden.sh \
&& /harden.sh \

# Switch to non-root user
USER www-data

# Set the executing command
CMD ["php-fpm"]
