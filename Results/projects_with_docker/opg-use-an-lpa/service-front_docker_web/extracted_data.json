{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"web\",\n  \"version\": \"1.0.0\",\n  \"type\": \"module\",\n  \"description\": \"Web components for the use lpa service\",\n  \"main\": \"index.js\",\n  \"repository\": \"git@github.com:ministryofjustice/opg-use-an-lpa.git\",\n  \"scripts\": {\n    \"test\": \"CI=true jest --coverage\",\n    \"test:watch\": \"jest --watch\",\n    \"build\": \" npm run build-scss && BABEL_ENV=build babel src --out-dir dist && node build.js\",\n    \"watch\": \"webpack --progress --watch --config webpack.development.js\",\n    \"accessibility-check\": \"node ./pa11y.js\",\n    \"build-scss\": \"npm rebuild sass --verbose && sass --load-path=./ --verbose src/main.scss:dist/stylesheets/main.css src/gds.scss:dist/stylesheets/gds.css src/pdf.scss:dist/pdf.css --style compressed\"\n  },\n  \"author\": \"John Nolan <john.nolan@digital.justice.gov.uk>\",\n  \"license\": \"MIT\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"^7.19.3\",\n    \"@babel/core\": \"^7.20.2\",\n    \"@babel/plugin-transform-member-expression-literals\": \"^7.18.6\",\n    \"@babel/plugin-transform-property-literals\": \"^7.18.6\",\n    \"@babel/plugin-transform-reserved-words\": \"^7.18.6\",\n    \"@babel/plugin-transform-runtime\": \"^7.19.6\",\n    \"@babel/preset-env\": \"^7.20.2\",\n    \"@babel/runtime-corejs3\": \"^7.20.1\",\n    \"@testing-library/dom\": \"^10.0.0\",\n    \"@testing-library/jest-dom\": \"^6.0.0\",\n    \"babel-jest\": \"^29.2.2\",\n    \"core-js\": \"^3.26.0\",\n    \"coveralls\": \"^3.1.1\",\n    \"es6-promise\": \"^4.2.8\",\n    \"esbuild\": \"0.21.5\",\n    \"esbuild-sass-plugin\": \"^3.2.0\",\n    \"eslint\": \"^9.0.0\",\n    \"eslint-config-prettier\": \"^10.0.0\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"govuk-one-login-service-header\": \"github:govuk-one-login/service-header#a7cf88002f4c3c2f6b8f372bd62737c6c44119a5\",\n    \"jest\": \"^29.2.0\",\n    \"jest-environment-jsdom\": \"^29.2.2\",\n    \"jest-junit\": \"^16.0.0\",\n    \"prettier\": \"^3.0.0\",\n    \"sass\": \"^1.75.0\"\n  },\n  \"dependencies\": {\n    \"@babel/runtime\": \"^7.20.1\",\n    \"@jest/globals\": \"^29.6.4\",\n    \"@ministryofjustice/frontend\": \"2.1.3\",\n    \"govuk-frontend\": \"^5.3.1\",\n    \"perfume.js\": \"^6.4.0\"\n  },\n  \"jest-junit\": {\n    \"outputDirectory\": \"./test-results/junit\",\n    \"outputName\": \"results.xml\"\n  }\n}\n"
        },
        "database": "PostgreSQL",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "volumes:\n  esbuild:\n\nservices:\n  # ---------------------------\n  # Asset build\n\n  esbuild:\n    container_name: esbuild\n    build:\n      context: .\n      dockerfile: service-front/web/Dockerfile\n    entrypoint: >\n      sh -c \"npm ci --verbose && npm run build\"\n    volumes:\n      - ./service-front/web:/web:rw\n      - esbuild:/web/dist\n\n  # ---------------------------\n  # Viewer Front\n\n  viewer-web:\n    container_name: viewer-web\n    build:\n      context: .\n      dockerfile: service-front/docker/web/Dockerfile\n    volumes:\n      - esbuild:/web\n    environment:\n      WEB_DOMAIN: http://localhost:9001\n      APP_HOST: viewer-app\n      APP_PORT: 9000\n    depends_on:\n      - esbuild\n      - viewer-app\n\n  viewer-app:\n    container_name: viewer-app\n    build:\n      target: development\n      context: .\n      dockerfile: service-front/docker/app/Dockerfile\n    volumes:\n      - ./service-front/app:/app\n      - esbuild:/app/assets\n    environment:\n      # Always required\n      CONTEXT: \"viewer\"\n      GOOGLE_ANALYTICS_ID: \"UA-170469426-2\"\n      KMS_SESSION_CMK_ALIAS: \"alias/viewer-sessions-cmk-alias\"\n\n      # Local only\n      API_SERVICE_URL:\n      PDF_SERVICE_URL:\n      AWS_ENDPOINT_KMS:\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      LOGGING_LEVEL: \"100\" # \\Monolog\\Logger::DEBUG\n      PHP_IDE_CONFIG: serverName=viewer-app\n      XDEBUG_CONFIG: client_host=host.docker.internal\n      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with \"off\"\n      SESSION_EXPIRES: 30 # session expiry length to support timeout message.\n      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.\n      SUPPORT_DATASTORE_LPAS: \"false\"\n      PAPER_VERFICATION: \"false\"\n    depends_on:\n      - api-web\n\n  # ---------------------------\n  # Actor Front\n\n  actor-web:\n    container_name: actor-web\n    build:\n      context: .\n      dockerfile: service-front/docker/web/Dockerfile\n    volumes:\n      - esbuild:/web\n    environment:\n      WEB_DOMAIN: http://localhost:9002\n      APP_HOST: actor-app\n      APP_PORT: 9000\n    depends_on:\n      - esbuild\n      - actor-app\n\n  actor-app:\n    container_name: actor-app\n    build:\n      target: development\n      context: .\n      dockerfile: service-front/docker/app/Dockerfile\n    volumes:\n      - ./service-front/app:/app\n      - esbuild:/app/assets\n    environment:\n      # Always required\n      CONTEXT: \"actor\"\n      GOOGLE_ANALYTICS_ID: \"UA-170469426-1\"\n      KMS_SESSION_CMK_ALIAS: \"alias/viewer-sessions-cmk-alias\"\n\n      # Feature flags\n      DELETE_LPA_FEATURE: \"true\"\n      ALLOW_MERIS_LPAS: \"false\"\n      SUPPORT_DATASTORE_LPAS: \"true\"\n\n      # Local only\n      API_SERVICE_URL:\n      AWS_ENDPOINT_KMS:\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      LOGGING_LEVEL: \"100\" # \\Monolog\\Logger::DEBUG\n      PHP_IDE_CONFIG: serverName=actor-app\n      XDEBUG_CONFIG: client_host=host.docker.internal\n      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with \"off\"\n      SESSION_EXPIRES: 20 # session expiry length to support timeout message.\n      SESSION_EXPIRY_WARNING: 5 # session expiry warning time to trigger popup window.\n      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.\n      NOTIFY_API_KEY:\n    depends_on:\n      - api-web\n\n  # ---------------------------\n  # Front Composer (Shared)\n\n  front-composer:\n    profiles:\n      - tools\n    build:\n      target: development\n      context: .\n      dockerfile: service-front/docker/app/Dockerfile\n    volumes:\n      - ./service-front/app:/app\n    entrypoint:\n      - /usr/bin/composer\n    command:\n      - install\n      - --prefer-dist\n      - --no-suggest\n      - --no-interaction\n      - --no-scripts\n      - --optimize-autoloader\n\n  # ---------------------------\n  # API\n\n  api-web:\n    container_name: api-web\n    build:\n      context: .\n      dockerfile: service-api/docker/web/Dockerfile\n    volumes:\n      - ./service-api/web/dist:/web\n    ports:\n      - 9010:80\n    environment:\n      APP_HOST: api-app\n      APP_PORT: 9000\n    depends_on:\n      - api-app\n\n  api-app:\n    container_name: api-app\n    build:\n      target: development\n      context: .\n      dockerfile: service-api/docker/app/Dockerfile\n    volumes:\n      - ./service-api/app:/app\n    environment:\n      DYNAMODB_TABLE_ACTOR_CODES: \"ActorCodes\"\n      DYNAMODB_TABLE_ACTOR_USERS: \"ActorUsers\"\n      DYNAMODB_TABLE_VIEWER_CODES: \"ViewerCodes\"\n      DYNAMODB_TABLE_VIEWER_ACTIVITY: \"ViewerActivity\"\n      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: \"UserLpaActorMap\"\n      DYNAMODB_TABLE_STATS: \"Stats\"\n\n      SIRIUS_API_ENDPOINT:\n      LPA_DATA_STORE_API_ENDPOINT:\n      LPA_CODES_API_ENDPOINT:\n      IAP_IMAGES_API_ENDPOINT:\n\n      ONE_LOGIN_CLIENT_ID: \"client-id\"\n      ONE_LOGIN_DISCOVERY_URL:\n\n      # Feature flags\n      ALLOW_MERIS_LPAS: \"false\"\n      SUPPORT_DATASTORE_LPAS: \"true\"\n\n      # Local only\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_ENDPOINT_DYNAMODB:\n      AWS_ENDPOINT_SECRETSMANAGER:\n      AWS_ENDPOINT_SSM:\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      LPA_CODES_STATIC_AUTH_TOKEN: asdf1234567890\n      PACT_BROKER_PUBLISH: \"false\"\n      LOGGING_LEVEL: \"100\" # \\Monolog\\Logger::DEBUG\n      PHP_IDE_CONFIG: serverName=api-app\n      XDEBUG_CONFIG: client_host=host.docker.internal\n      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with \"off\"\n      XDEBUG_TRIGGER: \"true\"\n      NOTIFY_API_KEY:\n\n  api-composer:\n    profiles:\n      - tools\n    build:\n      target: development\n      context: .\n      dockerfile: service-api/docker/app/Dockerfile\n    volumes:\n      - ./service-api/app:/app\n    entrypoint:\n      - /usr/bin/composer\n    command:\n      - install\n      - --prefer-dist\n      - --no-interaction\n      - --no-scripts\n      - --optimize-autoloader\n\n  api-seeding:\n    container_name: api-seeding\n    build:\n      context: .\n      dockerfile: service-api/docker/seeding/Dockerfile\n    volumes:\n      - ./service-api/seeding:/app/seeding\n    environment:\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      DYNAMODB_TABLE_ACTOR_CODES: \"ActorCodes\"\n      DYNAMODB_TABLE_VIEWER_CODES: \"ViewerCodes\"\n      DYNAMODB_TABLE_ACTOR_USERS: \"ActorUsers\"\n      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: \"UserLpaActorMap\"\n      DYNAMODB_TABLE_STATS: \"Stats\"\n      AWS_ENDPOINT_DYNAMODB:\n      CODES_ENDPOINT:\n\n  # ---------------------------\n  # Lambda to upload stats\n\n  upload-stats-lambda:\n    container_name: upload-statistics\n    build:\n      context: ./lambda-functions/upload-statistics\n      dockerfile: Dockerfile\n    environment:\n      ENVIRONMENT: local\n      REGION: eu-west-1\n      AWS_ACCESS_KEY_ID: 'devkey'\n      AWS_SECRET_ACCESS_KEY: 'secretdevkey'\n    depends_on:\n      - localstack\n    volumes:\n      - ./lambda-functions/upload-statistics/app:/function/app\n      - ./lambda-functions/.aws-lambda-rie:/aws-lambda\n    ports:\n      - 9007:8080\n\n\n  # ---------------------------\n  # Lambda for ingestion from MLPA\n\n  event-receiver-lambda:\n    container_name: event-receiver\n    build:\n      context: ./lambda-functions/event-receiver\n      dockerfile: Dockerfile\n    environment:\n      AWS_LAMBDA_SERVER_PORT: '8080'\n      AWS_LAMBDA_RUNTIME_API: 'localhost:8080'\n      ENVIRONMENT: local\n      REGION: eu-west-1\n      AWS_ACCESS_KEY_ID: 'devkey'\n      AWS_SECRET_ACCESS_KEY: 'secretdevkey'\n    volumes:\n      - ./lambda-functions/event-receiver/app:/function/app\n      - ./lambda-functions/.aws-lambda-rie:/aws-lambda\n    entrypoint:\n      - /aws-lambda/aws-lambda-rie\n    command:\n      - ./main\n    ports:\n      - 9008:8080\n\n  proxy:\n    container_name: proxy\n    image: traefik:3.0\n    ports:\n      - \"9001:9001\"\n      - \"9041:9041\"\n      - \"9002:9002\"\n      - \"9042:9042\"\n      - \"9080:8080\"\n    volumes:\n      - ./local-config/proxy/traefik.toml:/etc/traefik/traefik.toml\n      - ./local-config/proxy/dynamic.toml:/etc/traefik/dynamic.toml\n    depends_on:\n      - actor-web\n      - viewer-web\n",
            "service-front/docker/web/Dockerfile": "\nFROM nginxinc/nginx-unprivileged:stable-alpine\nUSER root\n\nRUN apk upgrade && \\\n  apk update curl\n\nCOPY service-front/docker/web/default.conf.template /etc/nginx/templates/default.conf.template\nCOPY service-front/docker/web/web /web\n\nRUN apk --no-cache add libcap && \\\n    setcap 'cap_net_bind_service=+ep' /usr/sbin/nginx && \\\n    apk del libcap\n\nRUN ln -sf /dev/stdout /var/log/nginx/csp.log\n\nCOPY scripts/docker_hardening/harden-nginx.sh /harden-nginx.sh\nRUN /harden-nginx.sh && rm /harden-nginx.sh\n\nUSER nginx\n\n\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "app-php-development.ini",
            "app-php.ini",
            "fpm-pool.ini",
            "health-check.sh"
        ],
        "folders": []
    }
}