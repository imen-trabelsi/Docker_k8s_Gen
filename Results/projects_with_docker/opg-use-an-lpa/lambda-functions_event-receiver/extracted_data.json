{
    "source_code_info": {
        "language": "Go",
        "framework": "Go",
        "dependencies": {
            "go.mod": "module github.com/ministryofjustice/opg-use-an-lpa\n\ngo 1.23.1\n\nrequire (\n\tgithub.com/aws/aws-lambda-go v1.47.0\n\tgithub.com/aws/aws-sdk-go-v2 v1.36.3\n\tgithub.com/aws/aws-sdk-go-v2/config v1.29.9\n\tgithub.com/aws/aws-sdk-go-v2/feature/dynamodb/attributevalue v1.18.7\n\tgithub.com/aws/aws-sdk-go-v2/service/dynamodb v1.41.1\n\tgithub.com/google/uuid v1.6.0\n\tgithub.com/ministryofjustice/opg-go-common v1.75.0\n\tgithub.com/stretchr/testify v1.10.0\n)\n\nrequire (\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.62 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.30 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.34 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.34 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/dynamodbstreams v1.25.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.3 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/endpoint-discovery v1.10.15 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.15 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.25.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.29.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.33.17 // indirect\n\tgithub.com/aws/smithy-go v1.22.2 // indirect\n\tgithub.com/brunoscheufler/aws-ecs-metadata-go v0.0.0-20221221133751-67e37ae746cd // indirect\n\tgithub.com/cenkalti/backoff/v4 v4.3.0 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/go-logr/logr v1.4.2 // indirect\n\tgithub.com/go-logr/stdr v1.2.2 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway/v2 v2.25.1 // indirect\n\tgithub.com/jmespath/go-jmespath v0.4.0 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/stretchr/objx v0.5.2 // indirect\n\tgo.opentelemetry.io/auto/sdk v1.1.0 // indirect\n\tgo.opentelemetry.io/contrib/detectors/aws/ecs v1.34.0 // indirect\n\tgo.opentelemetry.io/contrib/propagators/aws v1.34.0 // indirect\n\tgo.opentelemetry.io/otel v1.34.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace v1.34.0 // indirect\n\tgo.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc v1.34.0 // indirect\n\tgo.opentelemetry.io/otel/metric v1.34.0 // indirect\n\tgo.opentelemetry.io/otel/sdk v1.34.0 // indirect\n\tgo.opentelemetry.io/otel/trace v1.34.0 // indirect\n\tgo.opentelemetry.io/proto/otlp v1.5.0 // indirect\n\tgolang.org/x/net v0.34.0 // indirect\n\tgolang.org/x/sys v0.29.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/api v0.0.0-20250115164207-1a7da9e5054f // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20250115164207-1a7da9e5054f // indirect\n\tgoogle.golang.org/grpc v1.71.0 // indirect\n\tgoogle.golang.org/protobuf v1.36.4 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        "database": "PostgreSQL",
        "build_system": "go mod",
        "config_files": {
            "docker-compose.yml": "volumes:\n  esbuild:\n\nservices:\n  # ---------------------------\n  # Asset build\n\n  esbuild:\n    container_name: esbuild\n    build:\n      context: .\n      dockerfile: service-front/web/Dockerfile\n    entrypoint: >\n      sh -c \"npm ci --verbose && npm run build\"\n    volumes:\n      - ./service-front/web:/web:rw\n      - esbuild:/web/dist\n\n  # ---------------------------\n  # Viewer Front\n\n  viewer-web:\n    container_name: viewer-web\n    build:\n      context: .\n      dockerfile: service-front/docker/web/Dockerfile\n    volumes:\n      - esbuild:/web\n    environment:\n      WEB_DOMAIN: http://localhost:9001\n      APP_HOST: viewer-app\n      APP_PORT: 9000\n    depends_on:\n      - esbuild\n      - viewer-app\n\n  viewer-app:\n    container_name: viewer-app\n    build:\n      target: development\n      context: .\n      dockerfile: service-front/docker/app/Dockerfile\n    volumes:\n      - ./service-front/app:/app\n      - esbuild:/app/assets\n    environment:\n      # Always required\n      CONTEXT: \"viewer\"\n      GOOGLE_ANALYTICS_ID: \"UA-170469426-2\"\n      KMS_SESSION_CMK_ALIAS: \"alias/viewer-sessions-cmk-alias\"\n\n      # Local only\n      API_SERVICE_URL:\n      PDF_SERVICE_URL:\n      AWS_ENDPOINT_KMS:\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      LOGGING_LEVEL: \"100\" # \\Monolog\\Logger::DEBUG\n      PHP_IDE_CONFIG: serverName=viewer-app\n      XDEBUG_CONFIG: client_host=host.docker.internal\n      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with \"off\"\n      SESSION_EXPIRES: 30 # session expiry length to support timeout message.\n      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.\n      SUPPORT_DATASTORE_LPAS: \"false\"\n      PAPER_VERFICATION: \"false\"\n    depends_on:\n      - api-web\n\n  # ---------------------------\n  # Actor Front\n\n  actor-web:\n    container_name: actor-web\n    build:\n      context: .\n      dockerfile: service-front/docker/web/Dockerfile\n    volumes:\n      - esbuild:/web\n    environment:\n      WEB_DOMAIN: http://localhost:9002\n      APP_HOST: actor-app\n      APP_PORT: 9000\n    depends_on:\n      - esbuild\n      - actor-app\n\n  actor-app:\n    container_name: actor-app\n    build:\n      target: development\n      context: .\n      dockerfile: service-front/docker/app/Dockerfile\n    volumes:\n      - ./service-front/app:/app\n      - esbuild:/app/assets\n    environment:\n      # Always required\n      CONTEXT: \"actor\"\n      GOOGLE_ANALYTICS_ID: \"UA-170469426-1\"\n      KMS_SESSION_CMK_ALIAS: \"alias/viewer-sessions-cmk-alias\"\n\n      # Feature flags\n      DELETE_LPA_FEATURE: \"true\"\n      ALLOW_MERIS_LPAS: \"false\"\n      SUPPORT_DATASTORE_LPAS: \"true\"\n\n      # Local only\n      API_SERVICE_URL:\n      AWS_ENDPOINT_KMS:\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      LOGGING_LEVEL: \"100\" # \\Monolog\\Logger::DEBUG\n      PHP_IDE_CONFIG: serverName=actor-app\n      XDEBUG_CONFIG: client_host=host.docker.internal\n      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with \"off\"\n      SESSION_EXPIRES: 20 # session expiry length to support timeout message.\n      SESSION_EXPIRY_WARNING: 5 # session expiry warning time to trigger popup window.\n      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.\n      NOTIFY_API_KEY:\n    depends_on:\n      - api-web\n\n  # ---------------------------\n  # Front Composer (Shared)\n\n  front-composer:\n    profiles:\n      - tools\n    build:\n      target: development\n      context: .\n      dockerfile: service-front/docker/app/Dockerfile\n    volumes:\n      - ./service-front/app:/app\n    entrypoint:\n      - /usr/bin/composer\n    command:\n      - install\n      - --prefer-dist\n      - --no-suggest\n      - --no-interaction\n      - --no-scripts\n      - --optimize-autoloader\n\n  # ---------------------------\n  # API\n\n  api-web:\n    container_name: api-web\n    build:\n      context: .\n      dockerfile: service-api/docker/web/Dockerfile\n    volumes:\n      - ./service-api/web/dist:/web\n    ports:\n      - 9010:80\n    environment:\n      APP_HOST: api-app\n      APP_PORT: 9000\n    depends_on:\n      - api-app\n\n  api-app:\n    container_name: api-app\n    build:\n      target: development\n      context: .\n      dockerfile: service-api/docker/app/Dockerfile\n    volumes:\n      - ./service-api/app:/app\n    environment:\n      DYNAMODB_TABLE_ACTOR_CODES: \"ActorCodes\"\n      DYNAMODB_TABLE_ACTOR_USERS: \"ActorUsers\"\n      DYNAMODB_TABLE_VIEWER_CODES: \"ViewerCodes\"\n      DYNAMODB_TABLE_VIEWER_ACTIVITY: \"ViewerActivity\"\n      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: \"UserLpaActorMap\"\n      DYNAMODB_TABLE_STATS: \"Stats\"\n\n      SIRIUS_API_ENDPOINT:\n      LPA_DATA_STORE_API_ENDPOINT:\n      LPA_CODES_API_ENDPOINT:\n      IAP_IMAGES_API_ENDPOINT:\n\n      ONE_LOGIN_CLIENT_ID: \"client-id\"\n      ONE_LOGIN_DISCOVERY_URL:\n\n      # Feature flags\n      ALLOW_MERIS_LPAS: \"false\"\n      SUPPORT_DATASTORE_LPAS: \"true\"\n\n      # Local only\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_ENDPOINT_DYNAMODB:\n      AWS_ENDPOINT_SECRETSMANAGER:\n      AWS_ENDPOINT_SSM:\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      LPA_CODES_STATIC_AUTH_TOKEN: asdf1234567890\n      PACT_BROKER_PUBLISH: \"false\"\n      LOGGING_LEVEL: \"100\" # \\Monolog\\Logger::DEBUG\n      PHP_IDE_CONFIG: serverName=api-app\n      XDEBUG_CONFIG: client_host=host.docker.internal\n      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with \"off\"\n      XDEBUG_TRIGGER: \"true\"\n      NOTIFY_API_KEY:\n\n  api-composer:\n    profiles:\n      - tools\n    build:\n      target: development\n      context: .\n      dockerfile: service-api/docker/app/Dockerfile\n    volumes:\n      - ./service-api/app:/app\n    entrypoint:\n      - /usr/bin/composer\n    command:\n      - install\n      - --prefer-dist\n      - --no-interaction\n      - --no-scripts\n      - --optimize-autoloader\n\n  api-seeding:\n    container_name: api-seeding\n    build:\n      context: .\n      dockerfile: service-api/docker/seeding/Dockerfile\n    volumes:\n      - ./service-api/seeding:/app/seeding\n    environment:\n      AWS_ACCESS_KEY_ID: \"devkey\"\n      AWS_SECRET_ACCESS_KEY: \"secretdevkey\"\n      DYNAMODB_TABLE_ACTOR_CODES: \"ActorCodes\"\n      DYNAMODB_TABLE_VIEWER_CODES: \"ViewerCodes\"\n      DYNAMODB_TABLE_ACTOR_USERS: \"ActorUsers\"\n      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: \"UserLpaActorMap\"\n      DYNAMODB_TABLE_STATS: \"Stats\"\n      AWS_ENDPOINT_DYNAMODB:\n      CODES_ENDPOINT:\n\n  # ---------------------------\n  # Lambda to upload stats\n\n  upload-stats-lambda:\n    container_name: upload-statistics\n    build:\n      context: ./lambda-functions/upload-statistics\n      dockerfile: Dockerfile\n    environment:\n      ENVIRONMENT: local\n      REGION: eu-west-1\n      AWS_ACCESS_KEY_ID: 'devkey'\n      AWS_SECRET_ACCESS_KEY: 'secretdevkey'\n    depends_on:\n      - localstack\n    volumes:\n      - ./lambda-functions/upload-statistics/app:/function/app\n      - ./lambda-functions/.aws-lambda-rie:/aws-lambda\n    ports:\n      - 9007:8080\n\n\n  # ---------------------------\n  # Lambda for ingestion from MLPA\n\n  event-receiver-lambda:\n    container_name: event-receiver\n    build:\n      context: ./lambda-functions/event-receiver\n      dockerfile: Dockerfile\n    environment:\n      AWS_LAMBDA_SERVER_PORT: '8080'\n      AWS_LAMBDA_RUNTIME_API: 'localhost:8080'\n      ENVIRONMENT: local\n      REGION: eu-west-1\n      AWS_ACCESS_KEY_ID: 'devkey'\n      AWS_SECRET_ACCESS_KEY: 'secretdevkey'\n    volumes:\n      - ./lambda-functions/event-receiver/app:/function/app\n      - ./lambda-functions/.aws-lambda-rie:/aws-lambda\n    entrypoint:\n      - /aws-lambda/aws-lambda-rie\n    command:\n      - ./main\n    ports:\n      - 9008:8080\n\n  proxy:\n    container_name: proxy\n    image: traefik:3.0\n    ports:\n      - \"9001:9001\"\n      - \"9041:9041\"\n      - \"9002:9002\"\n      - \"9042:9042\"\n      - \"9080:8080\"\n    volumes:\n      - ./local-config/proxy/traefik.toml:/etc/traefik/traefik.toml\n      - ./local-config/proxy/dynamic.toml:/etc/traefik/dynamic.toml\n    depends_on:\n      - actor-web\n      - viewer-web\n",
            "lambda-functions/event-receiver/Dockerfile": "FROM golang:1.23.4-alpine AS base\n\nWORKDIR /app\n\nCOPY go.mod go.sum ./\n\nRUN go mod download\n\nCOPY app/ ./\nCOPY internal/ ./internal\n\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /go/bin/main ./\n\nFROM scratch AS production\n\nWORKDIR /var/task\n\nCOPY --from=base /go/bin/main ./main\n\nENTRYPOINT [\"./main\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "app-php-development.ini",
            "app-php.ini",
            "fpm-pool.ini",
            "health-check.sh"
        ],
        "folders": []
    }
}