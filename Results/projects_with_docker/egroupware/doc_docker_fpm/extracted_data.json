{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"EGroupware\",\n  \"description\": \"EGroupware is a groupware suite in PHP and Javascript: https://www.egroupware.org/\",\n  \"license\": \"GPL-2.0\",\n  \"version\": \"23.1.20250307\",\n  \"repository\": {},\n  \"scripts\": {\n    \"build\": \"rollup -c\",\n    \"build:watch\": \"rollup -cw\",\n    \"docs\": \"node doc/scripts/build.mjs --dev\",\n    \"docs:serve\": \"node doc/scripts/build.mjs --dev --serve\",\n    \"jstest\": \"tsc &> /dev/null; web-test-runner\",\n    \"jstest:watch\": \"web-test-runner  --node-resolve --watch\"\n  },\n  \"devDependencies\": {\n    \"@11ty/eleventy\": \"^2.0.1\",\n    \"@babel/core\": \"^7.14.6\",\n    \"@babel/plugin-proposal-decorators\": \"^7.22.10\",\n    \"@babel/plugin-transform-class-properties\": \"^7.18.6\",\n    \"@babel/preset-env\": \"^7.23.3\",\n    \"@babel/preset-typescript\": \"^7.14.5\",\n    \"@custom-elements-manifest/analyzer\": \"^0.10.2\",\n    \"@interactjs/interactjs\": \"^1.10.11\",\n    \"@open-wc/testing\": \"^4.0.0\",\n    \"@rollup/plugin-babel\": \"^5.3.0\",\n    \"@rollup/plugin-node-resolve\": \"^13.0.0\",\n    \"@rollup/plugin-typescript\": \"^8.2.1\",\n    \"@types/chai\": \"^4.2.21\",\n    \"@types/mocha\": \"^10.0.3\",\n    \"@web/dev-server-esbuild\": \"^1.0.2\",\n    \"@web/dev-server-rollup\": \"^0.6.3\",\n    \"@web/test-runner\": \"^0.18.2\",\n    \"@web/test-runner-commands\": \"^0.9.0\",\n    \"@web/test-runner-playwright\": \"^0.11.0\",\n    \"browser-sync\": \"^3.0.2\",\n    \"cem\": \"^1.0.4\",\n    \"change-case\": \"^4.1.2\",\n    \"custom-element-jet-brains-integration\": \"^1.2.1\",\n    \"custom-element-vs-code-integration\": \"^1.2.1\",\n    \"del\": \"^7.1.0\",\n    \"esbuild\": \"^0.25.0\",\n    \"esbuild-plugin-replace\": \"^1.4.0\",\n    \"get-port\": \"^7.0.0\",\n    \"globby\": \"^14.0.1\",\n    \"grunt\": \"^1.5.3\",\n    \"grunt-contrib-cssmin\": \"^2.2.1\",\n    \"jsdom\": \"^22.1.0\",\n    \"lunr\": \"^2.3.9\",\n    \"markdown-it\": \"^13.0.1\",\n    \"markdown-it-container\": \"^3.0.0\",\n    \"markdown-it-ins\": \"^3.0.1\",\n    \"markdown-it-kbd\": \"^2.2.2\",\n    \"markdown-it-mark\": \"^3.0.1\",\n    \"markdown-it-replace-it\": \"^1.0.0\",\n    \"ora\": \"^7.0.1\",\n    \"prettier\": \"^3.0.3\",\n    \"prismjs\": \"^1.29.0\",\n    \"rimraf\": \"^3.0.2\",\n    \"rollup\": \"^2.79.1\",\n    \"sinon\": \"^18.0.0\",\n    \"smartquotes\": \"^2.3.2\",\n    \"terser\": \"^4.8.1\",\n    \"typescript\": \"^3.9.7\"\n  },\n  \"jshintConfig\": {\n    \"esversion\": 6,\n    \"boss\": true,\n    \"curly\": true,\n    \"eqeqeq\": true,\n    \"eqnull\": true,\n    \"expr\": true,\n    \"noarg\": true,\n    \"smarttabs\": true,\n    \"trailing\": true,\n    \"node\": true,\n    \"undef\": true,\n    \"unused\": true,\n    \"globals\": {\n      \"egw\": true,\n      \"app\": true\n    }\n  },\n  \"dependencies\": {\n    \"@bundled-es-modules/pdfjs-dist\": \"^2.5.207-rc1\",\n    \"@rollup/plugin-commonjs\": \"^24.0.1\",\n    \"@shoelace-style/shoelace\": \"2.18.0\",\n    \"@types/jquery\": \"^3.5.29\",\n    \"blueimp-gallery\": \"^3.4.0\",\n    \"bootstrap-icons\": \"^1.11.3\",\n    \"colortranslator\": \"^1.9.2\",\n    \"core-js\": \"^3.29.1\",\n    \"dexie\": \"^3.2.4\",\n    \"diff2html\": \"^3.4.48\",\n    \"imask\": \"^7.6.1\",\n    \"lit\": \"^2.7.5\",\n    \"lit-flatpickr\": \"^0.3.0\",\n    \"shortcut-buttons-flatpickr\": \"^0.4.0\",\n    \"sortablejs\": \"^1.14.0\"\n  },\n  \"engines\": {\n    \"node\": \">=14.0.0\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "doc/docker/docker-compose.yml": "version: '3'\nvolumes:\n  # data directory: here are the files stored (/var/lib/egroupware by default)\n  data:\n    driver_opts:\n      type: none\n      o: bind\n      # to upgrade an existing non-docker installation most easy is to use the existing\n      # data directory /var/lib/egroupware AND the host database see below\n      #device: /var/lib/egroupware\n      # otherwise data is stored in data subdirectory of the current directory\n      device: $PWD/data\n  # sources directory or document root mounted as /var/www inside the container\n  sources:\n    driver_opts:\n      type: none\n      o: bind\n      # use this if you have an existing document root with an egroupware directory inside\n      #device: /var/www\n      # otherwise sources/document is stored in sources subdirectory of current directory\n      device: $PWD/sources\n  # sources for push server, swoolpush subdirectory of egroupware\n  sources-push:\n    driver_opts:\n      type: none\n      o: bind\n      device: $PWD/sources/egroupware/swoolepush\n  # volume to store config.inc.php file / token shared between egroupware and push container\n  push-config:\n  # collabora-config\n  collabora-config:\n    driver_opts:\n      type: none\n      o: bind\n      # to upgrade an existing non-docker installation most easy is to use the existing\n      # data directory /var/lib/egroupware AND the host database see below\n      #device: /var/lib/egroupware/default/loolwsd\n      # otherwise data is stored in data subdirectory of the current directory\n      device: $PWD/data/default/loolwsd\n  # for Mac and Windows, do NOT use a directory for the DB, as the Docker host is in a VM!\n  db:\n  sessions:\n  # store Rocket.Chat MongoDB on an (internal) Volume\n  mongo:\n  # directory to store MongoDB dumps\n  rocketchat-dumps:\n    driver_opts:\n      type: none\n      o: bind\n      device: $PWD/data/default/rocketchat/dump\n  rocketchat-uploads:\n    driver_opts:\n      type: none\n      o: bind\n      device: $PWD/data/default/rocketchat/uploads\n\nservices:\n  egroupware:\n    # you can also use a branch as tags like e.g. \"23.1\" or a specific release like \"23.1.20230911\"\n    image: egroupware/egroupware:latest\n    # setting a default language for a new installation\n    #environment:\n    #- LANG=de\n    volumes:\n      - $PWD/sources:/var/www\n      - $PWD/data:/var/lib/egroupware\n      - $PWD/sessions:/var/lib/php/sessions\n      - $PWD/push-config:/var/lib/egroupware-push\n    # if you want to use the host database:\n    # 1. comment out the whole db service below AND\n    # 2. set EGW_DB_HOST=localhost AND\n    # 3. uncomment the next line and modify the host path (first one), it depends on your distro:\n    #    - RHEL/CentOS   /var/lib/mysql/mysql.sock:/var/run/mysqld/mysqld.sock\n    #    - openSUSE/SLE  /var/run/mysql/mysql.sock:/var/run/mysqld/mysqld.sock\n    #    - Debian/Ubuntu /var/run/mysqld:/var/run/mysqld\n    #- /var/run/mysqld:/var/run/mysqld\n    # private CA so egroupware can validate your certificate to talk to Collabora or Rocket.Chat\n    # multiple certificates (eg. a chain) have to be single files in a directory, with one named private-ca.crt!\n    #- /etc/egroupware-docker/private-ca.crt:/usr/local/share/ca-certificates/private-ca.crt:ro\n    environment:\n      #\n      # MariaDB/MySQL host to use: for internal service use \"db\", for host database (socket bind-mounted into container) use \"localhost\"\n      - EGW_DB_HOST=db\n      # grant host is needed for NOT using localhost / unix domain socket for MySQL/MariaDB\n      - EGW_DB_GRANT_HOST=172.%\n      # for internal db service you should to specify a root password here AND in db service\n      # a database \"egroupware\" with a random password is created for you on installation (password is stored in header.inc.php in data directory)\n      #- EGW_DB_ROOT=root\n      - EGW_DB_ROOT_PW=${EGW_DB_ROOT_PW}\n      # alternatively you can specify an already existing database with full right by the given user!\n      #- EGW_DB_NAME=egroupware\n      #- EGW_DB_USER=egroupware\n      #- EGW_DB_PASS=\n      #\n      # other php.ini values to set in the container and their current defaults\n      #- EGW_SESSION_TIMEOUT=14000\n      #- EGW_APC_SHM_SIZE=128M\n      #- EGW_MEMORY_LIMIT=128M\n      #- EGW_MAX_EXECUTION_TIME=90\n      #\n      # further post_install.php arguments can be passed as a single enviroment variable with space separated assignments\n      # \"<name1>=<value1> <name2>=<value2>\" see https://github.com/EGroupware/egroupware/blob/master/doc/rpm-build/post_install.php#L17\n      # to configure eg. LDAP for authentication and account storage use\n      #- EGW_POST_INSTALL='account-auth=ldap,ldap ldap_base=ou=egroupware,dc=example,dc=org ldap_host=tls://ldap.example.org ldap_admin=cn=admin,$base ldap_admin_pw=secret ldap_context=cn=users,$base ldap_group_context=cn=groups,$base'\n      #\n    restart: always\n    depends_on:\n      - db\n    container_name: egroupware\n    # set the ip-address of your docker host AND your official DNS name so EGroupware\n    # can access Rocket.Chat or Collabora without the need to go over your firewall\n    #extra_hosts:\n    #- \"my.host.name:172.17.0.1\"\n\n  nginx:\n    image: nginx:stable-alpine\n    volumes:\n      - $PWD/sources:/var/www:ro\n      # to add a certificate create a certificate.pem containing (in that order)\n      # 1. private key\n      # 2. public key\n      # 3. (optional) chain certificates\n      # uncomment to the next line\n      # ./certificate.pem:/etc/ssl/private/certificate.pem\n      # AND uncomment the three lines starting with \"listen 443\", \"ssl_certificate\", \"ssl_certificate_key\" in nginx.conf\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro\n    ports:\n      # if no webserver is running on the host, change (first) number to 80 and 443\n      - \"8080:80\"\n      - \"4443:443\"\n    depends_on:\n      - egroupware\n      - push\n      - collabora-key\n      - rocketchat\n    container_name: egroupware-nginx\n    restart: always\n\n  # run an own MariaDB:10.6 (you can use EGroupware's database backup and restore to add your existing database)\n  db:\n    image: mariadb:10.6\n    environment:\n      #- MYSQL_ROOT=root\n      - MYSQL_ROOT_PASSWORD=${EGW_DB_ROOT_PW}\n      #- MARIADB_AUTO_UPGRADE=true\n    volumes:\n      - db:/var/lib/mysql\n    # to add an own persistent configuration\n    #- ./mariadb.cnf:/etc/mysql/mariadb.conf.d/egroupware.cnf\n    container_name: egroupware-db\n    restart: always\n    # make mysql also available on the host\n    #ports:\n    #- \"3306:3306\"\n\n  # push server using phpswoole\n  push:\n    image: phpswoole/swoole:latest-alpine\n    command:\n      - /var/www/server.php\n    volumes:\n      - $PWD/sources/egroupware/swoolepush:/var/www\n      - $PWD/sessions:/var/lib/php/sessions\n      - $PWD/push-config:/var/lib/egroupware-push\n    container_name: egroupware-push\n    restart: always\n    depends_on:\n      - egroupware\n\n  # automatic updates of all containers daily at 4am\n  # see https://containrrr.github.io/watchtower for more information\n  watchtower:\n    image: containrrr/watchtower\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    # For automatic EPL Updates (not necessary for CE!) you need to pass docker\n    # credentials into watchtower after running: docker login download.egroupware.org\n    #- /root/.docker/config.json:/config.json:ro\n    environment:\n      - WATCHTOWER_CLEANUP=true # delete old image after update to not fill up the disk\n    # for email notifications add your email and mail-server here\n    #- WATCHTOWER_NOTIFICATIONS=email\n    #- WATCHTOWER_NOTIFICATIONS_LEVEL=info # possible values: panic, fatal, error, warn, info or debug\n    #- WATCHTOWER_NOTIFICATION_EMAIL_FROM=\"watchtower@my-domain.com\"\n    #- WATCHTOWER_NOTIFICATION_EMAIL_TO=\"me@my-domain.com\"\n    #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER=\"mail.my-domain.com\" # if you give your MX here, you need no user/password\n    #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=25\n    #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=\"watchtower@my-domain.com\"\n    #- WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=\"secret\"\n    command: --schedule \"0 0 4 * * *\"\n    container_name: egroupware-watchtower\n    restart: always\n\n  # Collabora Online Office\n  collabora-key:\n    image: \"quay.io/egroupware/collabora-key:stable\"\n    #image: collabora/code:latest\n    volumes:\n      #- collabora-config:/etc/loolwsd\n      # support for Collabora/CODE 21.11+\n      - $PWD/data/default/loolwsd:/etc/coolwsd\n    restart: always\n    container_name: collabora-key\n    # set the ip-address of your docker host AND your official DNS name so Collabora\n    # can access EGroupware without the need to go over your firewall\n    #extra_hosts:\n    #- \"my.host.name:172.17.0.1\"\n    depends_on:\n      - collabora-init\n\n  # initialise the collabora-config volume\n  collabora-init:\n    image: \"quay.io/egroupware/collabora-key:latest\"\n    command:  bash -c \"test -f /tmp/coolwsd/coolwsd.xml || (cp -p /etc/coolwsd/* /tmp/coolwsd && cd /tmp/coolwsd && ln -s coolwsd.xml loolwsd.xml && chown -R 33:33 /tmp/coolwsd)\"\n    volumes:\n      - $PWD/data/default/loolwsd:/tmp/coolwsd\n\n  # Rocket.Chat server\n  rocketchat:\n    image: rocketchat/rocket.chat:latest\n    command: >\n      sh -c\n        \"while true; do\n          node main.js &&\n          s=$$? && break || s=$$?;\n          echo \\\"Could not reach MongoDB. Waiting 5 secs ...\\\";\n          sleep 5;\n        done; (exit $$s)\"\n    restart: unless-stopped\n    volumes:\n      - $PWD/data/default/rocketchat/uploads:/app/uploads\n    # if EGroupware uses a certificate from a private CA, OAuth authentication will fail, you need to:\n    # - have the CA certificate stored at /etc/egroupware-docker/private-ca.crt\n    # - uncomment the next 2 lines about the private CA:\n    # - /etc/egroupware-docker/private-ca.crt:/usr/local/share/ca-certificates/private-ca.crt:ro\n    environment:\n      # - NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/private-ca.crt\n      # IMPORTANT: change ROOT_URL to your actual url eg. https://domain.com/rocketchat\n      - ROOT_URL=http://localhost/rocketchat\n      - PORT=3000\n      - MONGO_URL=mongodb://mongo:27017/rocketchat\n      - MONGO_OPLOG_URL=mongodb://mongo:27017/local\n    #     - HTTP_PROXY=http://proxy.domain.com\n    #     - HTTPS_PROXY=http://proxy.domain.com\n    depends_on:\n      - mongo\n    container_name: rocketchat\n    # set the ip-address of your docker host AND your official DNS name so Rocket.Chat\n    # can access EGroupware without the need to go over your firewall\n    #extra_hosts:\n    #- \"my.host.name:172.17.0.1\"\n\n  # MongoDB for Rocket.Chat\n  mongo:\n    image: mongo:5.0\n    restart: unless-stopped\n    volumes:\n      - mongo:/data/db\n      - $PWD/data/default/rocketchat/dump:/dump\n    command: mongod --oplogSize 128 --replSet rs0 -\n    container_name: rocketchat-mongo\n  # this container's job is just run the command to initialize the replica set.\n  # it will run the command and remove himself (it will not stay running)\n  mongo-init-replica:\n    image: mongo:5.0\n    command: 'bash -c \"for i in `seq 1 30`; do mongo mongo/rocketchat --eval \\\"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\\\" && s=$$? && break || s=$$?; echo \\\"Tried $$i times. Waiting 5 secs...\\\"; sleep 5; done; (exit $$s)\"'\n    depends_on:\n      - mongo\n\n  # Portainer: Docker GUI (needs to be enabled in nginx.conf too!)\n#   portainer:\n#    image: portainer/portainer\n#    command: -H unix:///var/run/docker.sock\n#    restart: always\n#    ports:\n#      - 9000:9000\n#      - 8000:8000\n#    volumes:\n#      - /var/run/docker.sock:/var/run/docker.sock\n#      - portainer_data:/data\n#    container_name: portainer",
            "doc/docker/fpm/Dockerfile": "################################################################################\n##\n## EGroupware FPM container using Ubuntu 20.04, NodeJS 20 and PHP 8.2 from ondrej/php PPA\n##\n################################################################################\nARG ARCH=\nFROM ${ARCH}ubuntu:20.04\nMAINTAINER rb@egroupware.org\n\nARG VERSION=dev-master\nARG PHP_VERSION=8.2\n# Set environment variable for non-interactive install\nARG DEBIAN_FRONTEND=noninteractive\nARG TARGETPLATFORM\n\n# keeping build-arg in environment for entrypoint.sh\nENV VERSION=$VERSION\nENV PHP_VERSION=$PHP_VERSION\n\nRUN set -e \\\n    && apt-get update \\\n\t&& apt-get install -y software-properties-common \\\n\t&& LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php \\\n\t&& apt-get update \\\n\t&& bash -c \"apt-get install -y php$PHP_VERSION-{cli,mysql,gd,xsl,bz2,opcache,tidy,zip,bcmath,mbstring,smbclient,ldap,curl,fpm,pgsql,gmp,memcached}\" \\\n\t# php8.{0,1}-apcu recommends (not needed) php-apcu-bc, which cause PHP 7.4 to be installed :(\n    && apt-get install --no-install-recommends -y php$PHP_VERSION-apcu \\\n\t&& bash -c \"[[ $PHP_VERSION =~ ^8\\..* ]] || apt-get install -y php$PHP_VERSION-json\" \\\n\t# fpm and php.ini settings\n\t&& sed -e 's/^;\\?listen \\?=.*/listen = 9000/g' \\\n\t\t-e '/allowed_clients/d' \\\n\t\t-e '/pm.max_children/s/=.*/= 80/' \\\n\t\t-e '/pm.start_servers/s/=.*/= 10/' \\\n\t\t-e '/pm.min_spare_servers/s/=.*/= 10/' \\\n\t\t-e '/pm.max_spare_servers/s/=.*/= 20/' \\\n\t\t-e '/catch_workers_output/s/^;/;/' \\\n\t\t-e '/error_log/d' \\\n\t\t-e 's/^;\\?pm.max_requests =.*/pm.max_requests = 30/' \\\n\t\t-e 's/^;\\?php_admin_value\\[memory_limit\\].*/php_admin_value[memory_limit] = 172M/' \\\n\t\t-e 's/^;\\?request_terminate_timeout.*/request_terminate_timeout = 70m/' \\\n\t\t-i /etc/php/$PHP_VERSION/fpm/pool.d/www.conf \\\n\t&& sed \t-e 's/^;\\?session.gc_maxlifetime.*/session.gc_maxlifetime=14400/g' \\\n\t\t-e 's|^;\\?date.timezone.*|date.timezone = UTC|g' \\\n\t\t-e 's|^;\\?sys_temp_dir.*|sys_temp_dir = /tmp|g' \\\n\t\t-e 's|^;\\?disable_functions.*|disable_functions = exec,passthru,shell_exec,system,proc_open,popen|g' \\\n\t\t-e 's|^;\\?max_execution_time \\?=.*|max_execution_time = 90|g' \\\n\t\t-e 's|^;\\?upload_max_filesize \\?=.*|upload_max_filesize = 64M|g' \\\n\t\t-e 's|^;\\?post_max_size \\?=.*|post_max_size = 65M|g' \\\n\t\t-e 's|^;\\?max_input_vars \\?=.*|max_input_vars = 2000|g' \\\n\t\t-e 's|^;\\?zlib.output_compression \\?=.*|zlib.output_compression = On|g' \\\n\t\t-e 's|^;\\?opcache.validate_timestamps \\?=.*|opcache.validate_timestamps=0|g' \\\n\t\t-i /etc/php/$PHP_VERSION/fpm/php.ini \\\n\t&& sed \t-e 's|^;\\?date.timezone.*|date.timezone = UTC|g' \\\n\t\t-e 's|^;\\?sys_temp_dir.*|sys_temp_dir = /tmp|g' \\\n\t\t-i /etc/php/$PHP_VERSION/cli/php.ini \\\n\t# create directory for pid file\n\t&& mkdir -p /run/php \\\n\t# send logs to stderr to be viewed by docker logs\n\t&& ln -s /dev/stderr /var/log/php$PHP_VERSION-fpm.log \\\n\t&& update-alternatives --install /usr/sbin/php-fpm php-fpm /usr/sbin/php-fpm$PHP_VERSION 5 \\\n\t# install tools to build EGroupware\n\t&& apt-get install -y xz-utils rsync zip curl sudo cron patch \\\n\t&& bash -c \\\n'EXPECTED_SIGNATURE=$(curl https://composer.github.io/installer.sig); \\\ncurl https://getcomposer.org/installer > composer-setup.php; \\\nACTUAL_SIGNATURE=$(php -r \"echo hash_file(\\\"sha384\\\", \\\"composer-setup.php\\\");\"); \\\nif [ \"$EXPECTED_SIGNATURE\" != \"$ACTUAL_SIGNATURE\" ]; \\\nthen \\\n    >&2 echo \"ERROR: Invalid Composer installer signature\"; \\\n    RESULT=1; \\\nelse \\\n\tphp composer-setup.php --quiet --install-dir /usr/local/bin; \\\n\tRESULT=$?; \\\nfi; \\\nrm composer-setup.php; \\\nexit $RESULT' \\\n\t&& cd /usr/share \\\n    # not all dependencies already allow PHP 8.x, thought what we use from them works\n    && bash -c \"[[ $PHP_VERSION  =~ ^8\\..* ]]\" && COMPOSER_EXTRA=--ignore-platform-reqs || true \\\n\t&& COMPOSER_ALLOW_SUPERUSER=1 composer.phar create-project $COMPOSER_EXTRA --prefer-dist --no-scripts --no-dev egroupware/egroupware:$VERSION \\\n\t# clean up and remove caches\n\t&& composer.phar clear-cache \\\n\t&& rm -f /usr/local/bin/composer.phar\nRUN set -e \\\n\t&& cd /usr/share/egroupware \\\n\t# install nodejs 20.x (Shoelace requires >= 14.17, Ubuntu 22.04 only has 12.x) \\\n\t&& if [ \"$TARGETPLATFORM\" = \"linux/ppc64le\" ]; then \\\n        dist_node_v20=https://nodejs.org/dist/latest-v20.x/ \\\n        dist_node_v20_ppc64le=$(curl $dist_node_v20|grep ppc64le.tar.xz|cut -d'\"' -f2) \\\n        curl -L $dist_node_v20$dist_node_v20_ppc64le | tar --directory=/usr/local/ -xJvf - ; \\\n    else \\\n    \tmkdir -p /etc/apt/keyrings \\\n        && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \\\n        && echo \"deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n        && apt-get update \\\n        && apt-get install -y nodejs libatomic1 ; \\\n    fi \\\n\t&& npm config set fetch-retries 5 \\\n\t&& mkdir chunks  \\\n\t&& npm install \\\n\t# npm install fails \"silent\" on network timeouts, retry until it works\n\t&& until npm run build; do sleep 5; npm install; done \\\n\t&& npm install -g grunt-cli \\\n\t# npm install fails \"silent\" on network timeouts, retry until it works\n\t&& until grunt; do sleep 5; npm install -g grunt-cli; done \\\n\t# clean up and remove caches\n\t&& npm uninstall -g grunt-cli \\\n\t&& npm cache clear --force \\\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false zip \\\n\t&& apt-get clean \\\n\t# create data directory\n\t&& mkdir -p /var/lib/egroupware/default/files/sqlfs \\\n\t&& mkdir -p /var/lib/egroupware/default/backup \\\n\t&& chown -R www-data:www-data /var/lib/egroupware \\\n\t&& chmod 700 /var/lib/egroupware/ \\\n\t&& ln -s /var/lib/egroupware/header.inc.php /usr/share/egroupware \\\n\t# create directory for push config\n\t&& mkdir -p /var/lib/egroupware-push \\\n    && chown -R www-data:www-data /var/lib/egroupware-push \\\n    && ln -s /var/lib/egroupware-push/config.inc.php /usr/share/egroupware/swoolepush \\\n\t# install cron-job and disable fallback async service and ability to switch them off in admin\n\t&& sed 's/apache/www-data/' doc/rpm-build/egroupware.cron > /etc/cron.d/egroupware \\\n\t&& patch -p1 < doc/rpm-build/asyncservice.patch \\\n\t# disable certificate checks for LDAP as most LDAP and AD servers have no \"valid\" cert\n\t&& ls /etc/ldap/ldap.conf >/dev/null 2>&1 || apt-get install -y libldap-common \\\n    && echo \"TLS_REQCERT never\" >> /etc/ldap/ldap.conf \\\n\t# mv sources to a different directory so entrypoint can rsync them to volume for both nginx and fpm\n\t&& mv /usr/share/egroupware /usr/share/egroupware-sources\n\nVOLUME /usr/share/egroupware\nVOLUME /var/lib/egroupware\nVOLUME /var/lib/php/sessions\nVOLUME /var/lib/egroupware-push\n\nEXPOSE 9000\n\nADD entrypoint.sh /\n\nCMD [\"php-fpm\", \"--nodaemonize\"]\nENTRYPOINT [\"/entrypoint.sh\"]",
            "doc/docker/nginx.conf": "# stuff for http block\nclient_max_body_size 1g;\n# fix error: upstream sent too big header while reading response header from upstream\nfastcgi_buffers 16 16k;\nfastcgi_buffer_size 32k;\n\nupstream fpm {\n\tserver egroupware:9000;\n}\n\n# redirects needs to use X-Forwarded-Proto too\nmap $http_x_forwarded_proto $redirectscheme {\n    default $scheme;\n    https https;\n}\n\nserver {\n\taccess_log off;\n\n\tlisten 80 default_server;\n\n\t# ssl config (enable following line plus either include or ssl_certificate* line)\n\t#listen 443 ssl http2 default_server;\n\t#include snippets/snakeoil.conf;\t# requires ssl-certs package installed!\n\t# concatenate private key, certificate and intermediate certs to /etc/ssl/private/certificate.pem\n\t#ssl_certificate /etc/ssl/private/certificate.pem;\n\t#ssl_certificate_key /etc/ssl/private/certificate.pem;\n\t# HTTP Strict-Transport-Security header (start with a short max-age!)\n\t#add_header Strict-Transport-Security max-age=31536000;\t# 31536000sec=1year\n\n\tserver_name _;\n\troot /var/www/html;\n\n\tindex index.php index.nginx-debian.html index.html index.htm;\n\n\t# other settings\n\tclient_max_body_size 65M;\n\n\t# EGroupware installed in /usr/share/egroupware\n\tlocation ^~ /egroupware {\n\t\talias  /usr/share/egroupware/;\n\t\ttry_files $uri $uri/ =404;\n\t\tlocation ~ ^/egroupware(/(?U).+\\.php) {\n\t\t\t# do not allow to call files ment to be included only\n\t\t\tlocation ~ ^$path/(vendor|[^/]+/(src|setup|inc|vendor))/ {\n\t\t\t\treturn 404;\n\t\t\t}\n\t\t\talias  /usr/share/egroupware;\n\t\t\tfastcgi_pass fpm;\n\t\t\t# added to support WebDAV/CalDAV/CardDAV\n\t\t\tfastcgi_read_timeout 60m;\n\t\t\tfastcgi_index  index.php;\n\t\t\tfastcgi_split_path_info ^((?U).+\\.php)(.*)$;\n\t\t\tfastcgi_param  PATH_INFO          $fastcgi_path_info;\n\t\t\tfastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_path_info;\n\t\t\t# standard Nginx\n\t\t\tinclude fastcgi_params;\n\t\t\tfastcgi_param SCRIPT_FILENAME /usr/share/egroupware$1;\n\t\t\tfastcgi_param DOCUMENT_ROOT /var/www/html;\n\t\t}\n\t\tlocation ~ (?i)\\.(ico|jpe?g|gif|png|svg|xet|xml|js|css|html|map|swf)$ {\n\t\t\taccess_log off;\n\t\t\texpires 10d;\n\t\t\tadd_header Pragma public;\n\t\t\tadd_header Cache-Control \"public\";\n\t\t\tlocation ~ ^/egroupware(/.*)$ {\n\t\t\t\talias /usr/share/egroupware/;\n\t\t\t\ttry_files $1 =404;\n\t\t\t}\n\t\t}\n\t}\n\n\t# push-server\n\tlocation /egroupware/push {\n\t\tproxy_read_timeout 3600;\n\t\tproxy_http_version 1.1;\n\t\tproxy_set_header Host $http_host;\n\t\tproxy_set_header Upgrade $http_upgrade;\n\t\tproxy_set_header Connection \"Upgrade\";\n\t\tproxy_pass http://push:9501;\n\t}\n\n\t# SmallParT videos\n\tlocation /egroupware/smallpart/Resources/Videos {\n\t    alias /var/lib/egroupware/default/files/smallpart;\n\t}\n\n\t# PHP in docroot\n\t#location ~ \\.php {\n\t#\tfastcgi_pass fpm;\n\t#\tinclude fastcgi_params;\n\t#}\n\n\t# phpmyadmin in /usr/share/phpmyadmin\n\t#location /phpmyadmin {\n\t#\t\talias  /usr/share/phpmyadmin/;\n\t#\t\ttry_files $uri $uri/ =404;\n\t#\t\tlocation ~ ^/phpmyadmin(/(?U).+\\.php) {\n\t#\t\t\t\talias  /usr/share/phpmyadmin;\n\t#\t\t\t\tfastcgi_pass fpm;\n\t#\t\t\t\tfastcgi_index  index.php;\n\t#\t\t\t\tfastcgi_split_path_info ^((?U).+\\.php)(.*)$;\n\t#\t\t\t\tfastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n\t#\t\t\t\tfastcgi_param  PATH_INFO          $fastcgi_path_info;\n\t#\t\t\t\tfastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_path_info;\n\t#\t\t\t\t# standard Nginx\n\t#\t\t\t\tinclude fastcgi_params;\n\t#\t\t\t\tfastcgi_param DOCUMENT_ROOT /var/www/html;\n\t#\t\t\t\tfastcgi_param SCRIPT_FILENAME /usr/share/phpmyadmin$1;\n\t#\t\t}\n\t#}\n\n\t# ActiveSync support\n\tlocation /Microsoft-Server-ActiveSync {\n\t\tfastcgi_pass fpm;\n\t\t# added to support WebDAV/CalDAV/CardDAV\n\t\tfastcgi_read_timeout 60m;\n\t\tfastcgi_index  index.php;\n\t\tfastcgi_split_path_info ^((?U).+\\.php)(.*)$;\n\t\tfastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n\t\tfastcgi_param  PATH_INFO          $fastcgi_path_info;\n\t\tfastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_path_info;\n\t\tinclude fastcgi_params;\n\t\tfastcgi_param SCRIPT_FILENAME /usr/share/egroupware/activesync/index.php;\n\t}\n\t# CalDAV & CardDAV autoconfig\n\tlocation ~ ^/.well-known/(caldav|carddav)$ {\n\t\treturn 301 $redirectscheme://$host/egroupware/groupdav.php/;\n\t}\n\tlocation ~ ^(/principals/users/.*)$ {\n\t\treturn 301 $redirectscheme://$host/egroupware/groupdav.php$1;\n\t}\n\t# OpenID Connect autodiscovery\n\tlocation = /.well-known/openid-configuration {\n\t\tfastcgi_pass fpm;\n\t\tinclude fastcgi_params;\n\t\tfastcgi_param SCRIPT_FILENAME /usr/share/egroupware/openid/well-known-configuration.php;\n\t}\n\t# Nginx does NOT use index for OPTIONS requests breakng WebDAV\n\t# for Windows, which sends OPTIONS / and stalls on Nginx 405 response!\n\t# This also redirects all requests to root to EGroupware.\n\tlocation = / {\n\t\treturn 301 $redirectscheme://$host/egroupware/index.php;\n\t}\n\t# redirect /egroupware to /egroupware/\n\tlocation = /egroupware {\n\t\treturn 301 $redirectscheme://$host/egroupware/index.php;\n\t}\n\n\t# Collabora sniplet meant to be included in server block of EGroupware vhost\n\t# static files\n\tlocation ^~ /browser {\n\t\tproxy_pass http://collabora-key:9980;\n\t\tproxy_set_header Host $http_host;\n\t}\n\n\t# WOPI discovery URL\n\tlocation ^~ /hosting/discovery {\n\t\tproxy_pass http://collabora-key:9980;\n\t\tproxy_set_header Host $http_host;\n\t}\n\n    # Capabilities\n    location ^~ /hosting/capabilities {\n      proxy_pass http://collabora-key:9980;\n      proxy_set_header Host $http_host;\n    }\n\n    # websockets, download, presentation and image upload\n\tlocation ^~ /cool {\n\t\tproxy_pass http://collabora-key:9980;\n\t\tproxy_set_header Upgrade $http_upgrade;\n\t\tproxy_set_header Connection \"upgrade\";\n\t\tproxy_set_header Host $http_host;\n\t}\n\n\t# proxy into rocketchat container\n\tlocation /rocketchat {\n\t\tproxy_pass http://rocketchat:3000;\n\t\tproxy_set_header Upgrade $http_upgrade;\n\t\tproxy_set_header Connection \"upgrade\";\n\t\tproxy_set_header Host $http_host;\n\t}\n\n    # Portainer: Docker GUI (needs to be enabled in docker-compose.yml too!)\n    #location /portainer/ {\n    #    proxy_pass http://portainer:9000/;\n    #    proxy_set_header Upgrade $http_upgrade;\n    #    proxy_set_header Connection \"upgrade\";\n    #    proxy_set_header Host $http_host;\n    #}\n}"
        },
        "static_files": {
            "resources/setup/importexport_default.xml": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<entry type=\"array\" name=\"importExportDefinitions\">\n  <entry type=\"array\" name=\"metainfo\">\n    <entry type=\"string\" name=\"type\">importexport definitions</entry>\n    <entry type=\"string\" name=\"charset\">utf-8</entry>\n    <entry type=\"integer\" name=\"entries\">2</entry>\n  </entry>\n  <entry type=\"array\" name=\"definitions\">\n    <entry type=\"array\" name=\"export-resources\">\n      <entry type=\"string\" name=\"name\">export-resources</entry>\n      <entry type=\"string\" name=\"application\">resources</entry>\n      <entry type=\"string\" name=\"plugin\">resources_export_csv</entry>\n      <entry type=\"string\" name=\"type\">export</entry>\n      <entry type=\"array\" name=\"allowed_users\">\n        <entry type=\"string\" name=\"0\">Default</entry>\n      </entry>\n      <entry type=\"array\" name=\"plugin_options\">\n        <entry type=\"array\" name=\"mapping\">\n          <entry type=\"string\" name=\"res_id\">Resource ID</entry>\n          <entry type=\"string\" name=\"name\">Name</entry>\n          <entry type=\"string\" name=\"short_description\">Short description</entry>\n          <entry type=\"string\" name=\"cat_id\">Category</entry>\n          <entry type=\"string\" name=\"quantity\">Quantity</entry>\n          <entry type=\"string\" name=\"useable\">Useable</entry>\n          <entry type=\"string\" name=\"location\">Location</entry>\n          <entry type=\"string\" name=\"storage_info\">Storage</entry>\n          <entry type=\"string\" name=\"bookable\">Bookable</entry>\n          <entry type=\"string\" name=\"long_description\">Long description</entry>\n          <entry type=\"string\" name=\"inventory_number\">Inventory number</entry>\n          <entry type=\"string\" name=\"accessory_of\">Accessory of</entry>\n          <entry type=\"string\" name=\"all_custom_fields\">resources</entry>\n        </entry>\n        <entry type=\"string\" name=\"delimiter\">;</entry>\n        <entry type=\"string\" name=\"charset\">user</entry>\n        <entry type=\"string\" name=\"begin_with_fieldnames\">label</entry>\n        <entry type=\"string\" name=\"convert\">1</entry>\n      </entry>\n      <entry type=\"string\" name=\"modified\">2012-12-31 09:00:00</entry>\n    </entry>\n    <entry type=\"array\" name=\"import-resources\">\n      <entry type=\"string\" name=\"name\">import-resources</entry>\n      <entry type=\"string\" name=\"application\">resources</entry>\n      <entry type=\"string\" name=\"plugin\">resources_import_csv</entry>\n      <entry type=\"string\" name=\"type\">import</entry>\n      <entry type=\"array\" name=\"allowed_users\">\n        <entry type=\"string\" name=\"0\">Admins</entry>\n      </entry>\n      <entry type=\"array\" name=\"plugin_options\">\n        <entry type=\"string\" name=\"fieldsep\">;</entry>\n        <entry type=\"string\" name=\"charset\">user</entry>\n        <entry type=\"string\" name=\"num_header_lines\">1</entry>\n        <entry type=\"string\" name=\"update_cats\">add</entry>\n        <entry type=\"array\" name=\"csv_fields\">\n          <entry type=\"string\" name=\"0\">Resource ID</entry>\n          <entry type=\"string\" name=\"1\">Name</entry>\n          <entry type=\"string\" name=\"2\">Short description</entry>\n          <entry type=\"string\" name=\"3\">Category</entry>\n          <entry type=\"string\" name=\"4\">Quantity</entry>\n          <entry type=\"string\" name=\"5\">Useable</entry>\n          <entry type=\"string\" name=\"6\">Location</entry>\n          <entry type=\"string\" name=\"7\">Storage</entry>\n          <entry type=\"string\" name=\"8\">Bookable</entry>\n          <entry type=\"string\" name=\"9\">Long description</entry>\n          <entry type=\"string\" name=\"10\">Inventory number</entry>\n          <entry type=\"string\" name=\"11\">Accessory of</entry>\n        </entry>\n        <entry type=\"array\" name=\"field_mapping\">\n          <entry type=\"string\" name=\"0\">res_id</entry>\n          <entry type=\"string\" name=\"1\">name</entry>\n          <entry type=\"string\" name=\"2\">short_description</entry>\n          <entry type=\"string\" name=\"3\">cat_id</entry>\n          <entry type=\"string\" name=\"4\">quantity</entry>\n          <entry type=\"string\" name=\"5\">useable</entry>\n          <entry type=\"string\" name=\"6\">location</entry>\n          <entry type=\"string\" name=\"7\">storage_info</entry>\n          <entry type=\"string\" name=\"8\">bookable</entry>\n          <entry type=\"string\" name=\"9\">long_description</entry>\n          <entry type=\"string\" name=\"10\">inventory_number</entry>\n          <entry type=\"string\" name=\"11\">accessory_of</entry>\n        </entry>\n        <entry type=\"string\" name=\"field_conversion\"/>\n        <entry type=\"array\" name=\"conditions\">\n          <entry type=\"array\" name=\"0\">\n            <entry type=\"string\" name=\"string\">res_id</entry>\n            <entry type=\"string\" name=\"type\">exists</entry>\n            <entry type=\"array\" name=\"true\">\n              <entry type=\"string\" name=\"action\">update</entry>\n              <entry type=\"string\" name=\"stop\">1</entry>\n            </entry>\n            <entry type=\"array\" name=\"false\">\n              <entry type=\"string\" name=\"action\">insert</entry>\n              <entry type=\"string\" name=\"stop\">1</entry>\n            </entry>\n          </entry>\n        </entry>\n        <entry type=\"string\" name=\"convert\">1</entry>\n      </entry>\n      <entry type=\"string\" name=\"modified\">2012-12-31 09:00:00</entry>\n    </entry>\n  </entry>\n</entry>\n",
            "resources/templates/mobile/app.less": "/**\n *\n * Resources - Mobile\n *\n * Please do NOT change app.css directly, instead change app.less and compile it!\n * Pixleegg Template app.css\n * @link http://www.egroupware.org\n * @license http://opensource.org/licenses/gpl-license.php GPL - GNU General Public License\n * @author Hadi Nategh <hn@stylite.de>\n * @package resources\n * @version $Id: app.less 55033 2016-02-16 18:49:17Z hnategh $\n */\n\n@import (reference) \"../../../pixelegg/less/def_buttons.less\";\n@import (reference) \"../../../pixelegg/less/def_mobile.less\";\n/* tablets and smartphones  */\n@media all {\n\t#resources-show {\n\t\ttable.egwGridView_outer tbody {\n\t\t\tdiv.resourcesCol2 {\n\t\t\t\t.mob-fontsize-n;\n\t\t\t}\n\t\t\tspan[id^=\"resources-show_\"][id$=\"name]\"]{\n\t\t\t\tfont-weight: bold;\n\t\t\t\t.mob-fontsize-l;\n\t\t\t}\n\t\t\tspan[id^=\"resources-show_\"][id$=\"name]\"],\n\t\t\tspan[id^=\"resources-show_\"][id$=\"short_description]\"],\n\t\t\tspan[id^=\"resources-show_\"][id$=\"accessory_of_label]\"],\n\t\t\tspan[id^=\"resources-show_\"][id$=\"accessories]\"]{\n\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\toverflow: hidden;\n\t\t\t\twhite-space: nowrap;\n\t\t\t}\n\t\t}\n\t}\n\t#resources-edit {\n\t\t.resources_pictureFile .et2_file_span {\n\t\t\ttext-align: center;\n\t\t\twidth: 120px;\n\t\t\tmargin-left: 120px;\n\t\t}\n\t}\n}"
        }
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "build.sh",
            "docker-compose.yml",
            "entrypoint.sh",
            "nginx.conf"
        ],
        "folders": []
    }
}