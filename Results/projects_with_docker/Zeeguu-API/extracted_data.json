{
    "source_code_info": {
        "language": "Python",
        "framework": "Flask",
        "dependencies": {
            "requirements.txt": "beautifulsoup4\nmarkupsafe # added this because of this stupid breaking change with minor version bump: https://github.com/pallets/markupsafe/issues/284\nblinker\ndeprecated\nelastic-transport==8.12.0\nelasticsearch==8.12.1\nelasticsearch-dsl==8.12.0\nFaker\nfeedparser\nhuman-readable\nflask==2.3.2\nwerkzeug==3.0.2\nFlask-Assets\nflask_cors\nflask_sqlalchemy>=3.0\ngit+https://github.com/zeeguu/apimux.git@master#egg=apimux\ngit+https://github.com/zeeguu/python-translators@master#egg=python_translators\njieba3k\njinja2\nlangdetect\nlxml\nmysqlclient\nnewspaper3k==0.2.7\nnltk\nnumpy\ntqdm\nPillow\npyphen\nregex\nrequests\nrequests_mock\nsentry-sdk[flask]\nsortedcontainers\nSQLAlchemy>=2.0\ngit+https://github.com/zeeguu/python-wordstats.git@master#egg=wordstats\ngoogle-cloud-texttospeech==2.3.0\ntimeago\npymysql\nyagmail\ngoogle\nprotobuf\nwheel\npytest\n# added with Tiago\nspacy>=3.0.0,<4.0.0\nen_core_web_md @ https://github.com/explosion/spacy-models/releases/download/en_core_web_md-3.7.1/en_core_web_md-3.7.1-py3-none-any.whl\nde_core_news_md @ https://github.com/explosion/spacy-models/releases/download/de_core_news_md-3.7.0/de_core_news_md-3.7.0-py3-none-any.whl\nda_core_news_md @ https://github.com/explosion/spacy-models/releases/download/da_core_news_md-3.7.0/da_core_news_md-3.7.0-py3-none-any.whl\nrapidfuzz==3.0.0\nscipy==1.13.0\ngit+https://github.com/zeeguu/confusionwords.git@main#egg=confusionwords\nscikit-learn==1.4.0\nflask_monitoringdashboard\n\n# For the report generator\nmatplotlib\nseaborn\npandas\n\n# the following two were required when deploying the API on Mac OS with Python 3.12.1\ncryptography\nlxml_html_clean \n\n# spacy sometimes pulls an older version of pydantic that breaks stuff; adding the following line to prevent this\npydantic>=1.10.8\n\n# nlp pipeline\nstanza==1.10.1\n"
        },
        "database": "MySQL",
        "build_system": "pip",
        "config_files": {
            "docker-compose.yml": "services:\n\n  # main db\n  mysql:\n    image: mysql:5.7\n    volumes:\n      - ${ZEEGUU_DATA_FOLDER}/mysql:/var/lib/mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: ${ZEEGUU_MYSQL_ROOT_PASSWORD}\n      MYSQL_DATABASE: ${ZEEGUU_MYSQL_DB}\n      MYSQL_USER: ${ZEEGUU_MYSQL_USER}\n      MYSQL_PASSWORD: ${ZEEGUU_MYSQL_USER_PASSWORD}\n    networks:\n      - zeeguu_backend\n    restart: unless-stopped\n\n\n  # main db\n  fmd_mysql:\n    image: mysql:5.7\n    volumes:\n      - ${ZEEGUU_DATA_FOLDER}/fmd_mysql:/var/lib/mysql\n    environment:\n      MYSQL_ROOT_PASSWORD: ${FMD_ROOT_PASS}\n      MYSQL_DATABASE: ${FMD_MYSQL_DB}\n      MYSQL_USER: ${FMD_MYSQL_USER}\n      MYSQL_PASSWORD: ${FMD_MYSQL_USER_PASS}\n    networks:\n      - zeeguu_backend\n    restart: unless-stopped\n\n\n  elasticsearch_v8:\n    image: elasticsearch:8.12.2\n    platform: linux/amd64\n    # ports:\n    # - 9200:9200\n    # - 9300:9300\n    # Ports don't have to be exposed, but it can be nice to debug.\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n    volumes:\n      - ./data/elasticsearch_db_v8/data:/usr/share/elasticsearch/data\n    networks:\n      - zeeguu_backend\n    restart: unless-stopped\n    mem_limit: 512m # Useful to restrict the ammount of RAM used by ES.\n\n  readability_server:\n    image: zeeguu/readability_server\n    networks:\n      - zeeguu_backend\n    restart: unless-stopped\n\n  embedding_api:\n    image: zeeguu/semantic-emb-api:main\n    # deploy:\n    #   resources:\n    #     limits:\n    #       cpus: '0.50'\n    environment:\n      SEMANTIC_EMB_API_PORT: 3654\n    # ports:\n    #   - 3654:3654\n    # Ports don't have to be exposed, but it can be nice to debug.\n    entrypoint: \"python ./semantic-emb-api/app/app.py\"\n    volumes:\n      - .:/Zeeguu-API\n      - ./data/zeeguu/language-models:/semantic-emb-api/semantic-emb-api/app/semantic_vector/binaries\n    networks:\n      - zeeguu_backend\n    # When encoding certain longer documents, it might use more than\n    # the available memory allocated to the container, in that case restart the service.\n    mem_limit: 2512m # From testing usually the container needs about 2GBs to run\n    # However, as a Dev safeguard, if needed the container is restarted to avoid \n    # taking too much memory from the host.\n    restart: unless-stopped\n\n  # yaml-anchors:\n  # https://support.atlassian.com/bitbucket-cloud/docs/yaml-anchors/\n  zapi: &zapi_default\n    depends_on:\n      - mysql\n      - fmd_mysql\n      - elasticsearch_v8\n      - readability_server\n      - embedding_api\n    image: zeeguu/api:latest\n    build: .\n    ports:\n      - \"127.0.0.1:8080:8080\"\n      # to consider mapping only to localhost cf here:\n      # https://serverfault.com/questions/681571/docker-exposed-ports-accessible-from-outside-iptables-rules-ignored\n      # otherwise the port is visible from the outside; even against ufw rules!\n    volumes:\n      - .:/Zeeguu-API\n      - ${ZEEGUU_DATA_FOLDER}:/zeeguu-data\n    #      - ./api.cfg:/Zeeguu-API/api.cfg\n    #      - ./fmd.cfg:/Zeeguu-API/fmd.cfg\n    #      - ./lu-mir-zeeguu-credentials.json:/Zeeguu-API/lu-mir-zeeguu-credentials.json\n    environment: &zapi_env\n      ZEEGUU_CONFIG: /Zeeguu-API/api.cfg\n      ZEEGUU_DATA_FOLDER: /zeeguu-data/\n      SENTRY_DSN: ${SENTRY_DSN}\n      FLASK_MONITORING_DASHBOARD_CONFIG: /Zeeguu-API/fmd.cfg\n      MICROSOFT_TRANSLATE_API_KEY: ${MICROSOFT_TRANSLATE_API_KEY}\n      GOOGLE_TRANSLATE_API_KEY: ${GOOGLE_TRANSLATE_API_KEY}\n      GOOGLE_APPLICATION_CREDENTIALS: /Zeeguu-API/lu-mir-zeeguu-credentials.json\n      WORDNIK_API_KEY: ${WORDNIK_API_KEY}\n      MULTI_LANG_TRANSLATOR_AB_TESTING: ${MULTI_LANG_TRANSLATOR_AB_TESTING}\n      ZEEGUU_ES_CONN_STRING: 'http://elasticsearch_v8:9200'\n      ZEEGUU_EMB_API_CONN_STRING: 'http://semantic_emb_api:3654'\n\n      # TODO: remove these two envvars and simply use the $ZEEGUU_DATA_FOLDER\n      FOLDER_FOR_REPORT_OUTPUT: /zeeguu-data/crawl-reports\n      CRAWL_REPORT_DATA: /zeeguu-data/crawl-reports/data\n\n    command: /usr/sbin/apache2ctl -D FOREGROUND\n    networks:\n      - zeeguu_backend\n    restart: unless-stopped\n    # TODO: align with the docker-compose in ops which has here a logging configuration\n\n  zapi_dev: &zapi_dev\n    <<: *zapi_default\n    ports:\n      - \"127.0.0.1:8080:9001\"\n    command: python /Zeeguu-API/start.py\n\n  zapi_dev_translations:\n    <<: *zapi_dev\n    environment:\n      <<: *zapi_env\n      DEV_SKIP_TRANSLATION: 1\n# TODO add the zapi_pink back\n\nnetworks:\n  zeeguu_backend:\n\n",
            "Dockerfile": "FROM python:3.12.7\n\nRUN apt-get clean all\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get dist-upgrade -y\n\n# We use ACL to modify folder permissions later\nRUN apt-get install acl\n\n# Git\n# ---\n# required by github dependencies in requirements.txt\nRUN apt-get -y install git\n\n\n# mysql CL client\n# -------------------------\n# - good for debugging sometimes\nRUN apt-get install -y mysql\\*\n\n\n# libmysqlclient\n# --------------\n# - required to be able to install mysqlclient with pip\n#   https://stackoverflow.com/questions/5178292/pip-install-mysql-python-fails-with-environmenterror-mysql-config-not-found\nRUN apt-get install -y default-libmysqlclient-dev\n\n\n# mysql CL client\n# -------------------------\n# - good for debugging sometimes\nRUN apt-get install -y mysql\\*\n\n\n# libmysqlclient\n# --------------\n# - required to be able to install mysqlclient with pip\n#   https://stackoverflow.com/questions/5178292/pip-install-mysql-python-fails-with-environmenterror-mysql-config-not-found\nRUN apt-get install -y default-libmysqlclient-dev\n\n\n# Apache\n# ------\nRUN apt-get install -y \\\n    apache2 \\\n    apache2-dev \\\n    vim\n\n\n# mod_wsgi\n# --------\nRUN pip install mod_wsgi\n\nRUN /bin/bash -c 'mod_wsgi-express install-module | tee /etc/apache2/mods-available/wsgi.{load,conf}'\nRUN a2enmod wsgi\nRUN a2enmod headers\n\n# ML: maybe better to map this file from outside?\nRUN echo '\\n\\\n<VirtualHost *:8080>\\n\\\n    WSGIDaemonProcess zeeguu_api home=/zeeguu-data/ python-path=/Zeeguu-API/\\n\\\n    WSGIScriptAlias / /Zeeguu-API/zeeguu_api.wsgi\\n\\\n    <Location />\\n\\\n        WSGIProcessGroup zeeguu_api\\n\\\n\t    WSGIApplicationGroup %{GLOBAL}\\n\\\n    </Location>\\n\\\n    <Directory \"/Zeeguu-API\">\\n\\\n        <Files \"zeeguu_api.wsgi\">\\n\\\n            Require all granted\\n\\\n        </Files>\\n\\\n    </Directory>\\n\\\n    ErrorLog ${APACHE_LOG_DIR}/error.log\\n\\\n    LogLevel info\\n\\\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\\n\\\n</VirtualHost>' > /etc/apache2/sites-available/zeeguu-api.conf\n\n\n# ML: is this needed?\nRUN chown -R www-data:www-data /var/www\n\n\n# have apache listen on port 8080\nRUN sed -i \"s,Listen 80,Listen 8080,g\" /etc/apache2/ports.conf\n\n\n# Zeeguu-Api\n# ----------\n\n# Declare that this will be mounted from a volume\nVOLUME /Zeeguu-API\n\n# We need to copy the requirements file it in order to be able to install it\n# However, we're not copying the whole folder, such that in case we make a change in the folder\n# (e.g. to this build file) the whole cache is not invalidated and the build process does\n# not have to start from scratch\nRUN mkdir /Zeeguu-API\nCOPY ./requirements.txt /Zeeguu-API/requirements.txt\nCOPY ./setup.py /Zeeguu-API/setup.py\n\nWORKDIR /Zeeguu-API\n\n# Install requirements and run the setup.py\nRUN python -m pip install -r requirements.txt\n\n\n# setup.py installs NLTK in the $ZEEGUU_RESOURCES_FOLDER folder, so we create it\nENV ZEEGUU_RESOURCES_FOLDER=/zeeguu-resources\nRUN mkdir -p $ZEEGUU_RESOURCES_FOLDER\n\n\nRUN python setup.py develop #Installs the nltk resources in the /zeeguu_resources/nltk_data\n\n# For nltk to know where to look we need to set an envvar inside of the image\nENV NLTK_DATA=$ZEEGUU_RESOURCES_FOLDER/nltk_data/\n\n\n# Copy the rest of the files\n# (this is done after the requirements are installed, so that the layer does not need to be changed\n# if only the code is being changed...\nCOPY . /Zeeguu-API\n\n\n\n# We can only run this here, after we copied the files,\n# because it depends on the zeeguuu.core.languages\nRUN python install_stanza_models.py\n\n\n# Create the temporary folder for newspaper and make sure that it can be\n# written by www-data\nENV SCRAPER_FOLDER=/tmp/.newspaper_scraper\nRUN mkdir -p $SCRAPER_FOLDER # -p does not report error if folder already exists\n\n\n# Ensure that apache processes have acess to relevant folders\nRUN chown -R www-data:www-data $SCRAPER_FOLDER\nRUN chown -R www-data:www-data $ZEEGUU_RESOURCES_FOLDER\n\n\nENV ZEEGUU_CONFIG=/Zeeguu-API/default_docker.cfg\n\nVOLUME /zeeguu-data\n\nRUN a2dissite 000-default.conf\nRUN a2ensite zeeguu-api\n\n\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".envrc",
            ".gitignore",
            "CODING-GUIDELINES.md",
            "Dockerfile",
            "Dockerfile.development",
            "FAQ.md",
            "LICENSE",
            "MANIFEST.in",
            "README.md",
            "UpdateToTopics.md",
            "archlens.json",
            "cleanup.sh",
            "default.api.cfg",
            "default.env",
            "default.fmd.cfg",
            "default_api.cfg",
            "default_docker.cfg",
            "default_docker_v8.cfg",
            "docker-compose.yml",
            "env_var_defs_default.py",
            "generate_configs.sh",
            "install_stanza_models.py",
            "requirements.txt",
            "run_tests.sh",
            "setup.py",
            "start.py",
            "truckconfig.json",
            "zeeguu_api.wsgi"
        ],
        "folders": [
            ".githooks",
            ".github",
            ".vscode",
            "tools",
            "zeeguu"
        ]
    }
}