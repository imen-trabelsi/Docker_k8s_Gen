# Use the official lightweight Node.js base image
FROM base as builder

# Set environment variables
ENV PNPM_HOME="/root/.local/share/pnpm"
ENV NODE_ENV="production"
ENV optDir=/opt
ENV appDir=${optDir}/growi
ENV PATH="$PNPM_HOME:$PATH"

# Set working directory
WORKDIR ${optDir}

# Install dependencies
RUN apt-get update && apt-get install -y ca-certificates wget curl --no-install-recommends && \
    wget -qO- https://get.pnpm.io/install.sh | ENV="$HOME/.shrc" SHELL="$(which sh)" PNPM_VERSION="10.4.1" sh - && \
    pnpm add turbo --global && \

# Copy files into the Docker image
COPY apps/app/.env.production apps/app/.env.production
COPY apps/app/.env.development apps/app/.env.development
COPY apps/app/.env.test apps/app/.env.test
COPY apps/app/docker/Dockerfile apps/app/docker/Dockerfile
COPY package.json package.json

# Set working directory
WORKDIR ${appDir}

# Build and clean up
RUN pnpm install --frozen-lockfile && \
    turbo run clean && \
    turbo run build --filter @growi/app && \
    pnpm deploy out --prod --filter @growi/app && \
    rm -rf apps/app/node_modules && mv out/node_modules apps/app/node_modules && \
    rm -rf apps/app/.next/cache && \
    tar -zcf packages.tar.gz package.json apps/app/.next apps/app/config apps/app/dist apps/app/public apps/app/resource apps/app/tmp apps/app/.env.production* apps/app/next.config.js apps/app/package.json apps/app/node_modules && \

# Expose port 3000
EXPOSE 3000

# Change user
USER node

# Set labels
LABEL maintainer="Yuki"

# Copy entrypoint instructions

# Startup command
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["npm", "run", "migrate", "&&", "node", "-r", "dotenv-flow/config", "--expose_gc", "dist/server/app.js"]
