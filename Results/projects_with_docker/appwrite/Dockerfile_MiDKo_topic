# Dockerfile

FROM composer:2.0

ARG TESTING=false
ENV TESTING=$TESTING
ARG DEBUG=false
ENV DEBUG=$DEBUG
ARG VERSION=dev
ENV _APP_VERSION=$VERSION

WORKDIR /usr/local/src/

COPY composer.lock /usr/local/src/
COPY composer.json /usr/local/src/
COPY .env /usr/local/src/

RUN composer install --ignore-platform-reqs --optimize-autoloader \

RUN if [ "$TESTING" != "true" ]; then echo "--no-dev"; fi \
    && if [ "$DEBUG" == "true" ]; then \
    apk add boost boost-dev; \

# Copy the rest of the code
WORKDIR /usr/src/code
COPY --from=composer /usr/local/src/vendor /usr/src/code/vendor

COPY ./app /usr/src/code/app
COPY ./public /usr/src/code/public
COPY ./bin /usr/local/bin
COPY ./docs /usr/src/code/docs
COPY ./src /usr/src/code/src
COPY ./dev /usr/src/code/dev

RUN chmod -Rf 0755 /usr/local/bin/doctor && \
    chmod +x /usr/local/bin/doctor && \
    chmod +x /usr/local/bin/install && \
    chmod +x /usr/local/bin/maintenance && \
    chmod +x /usr/local/bin/migrate && \
    chmod +x /usr/local/bin/realtime && \
    chmod +x /usr/local/bin/schedule-functions && \
    chmod +x /usr/local/bin/schedule-executions && \
    chmod +x /usr/local/bin/schedule-messages && \
    chmod +x /usr/local/bin/sdks && \
    chmod +x /usr/local/bin/specs && \
    chmod +x /usr/local/bin/ssl && \
    chmod +x /usr/local/bin/test && \
    chmod +x /usr/local/bin/upgrade && \
    chmod +x /usr/local/bin/vars && \
    chmod +x /usr/local/bin/queue-retry && \
    chmod +x /usr/local/bin/queue-count-failed && \
    chmod +x /usr/local/bin/queue-count-processing && \
    chmod +x /usr/local/bin/queue-count-success && \
    chmod +x /usr/local/bin/worker-audits && \
    chmod +x /usr/local/bin/worker-builds && \
    chmod +x /usr/local/bin/worker-certificates && \
    chmod +x /usr/local/bin/worker-databases && \
    chmod +x /usr/local/bin/worker-deletes && \
    chmod +x /usr/local/bin/worker-functions && \
    chmod +x /usr/local/bin/worker-mails && \
    chmod +x /usr/local/bin/worker-messaging && \
    chmod +x /usr/local/bin/worker-migrations && \
    chmod +x /usr/local/bin/worker-webhooks && \
    chmod +x /usr/local/bin/worker-usage && \

RUN mkdir -p /etc/letsencrypt/live/ && \

RUN if [ "$DEBUG" == "true" ]; then \
    cp /usr/src/code/dev/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini; \
    mkdir -p /tmp/xdebug; \

RUN if [ "$DEBUG" = "false" ]; then \
    rm -rf /usr/src/code/dev; \
    rm -f /usr/local/lib/php/extensions/no-debug-non-zts-20220829/xdebug.so; \

LABEL maintainer="team@appwrite.io"

EXPOSE 80

CMD ["php", "app/http.php"]
