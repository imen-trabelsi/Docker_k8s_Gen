# Use the specified .NET base image from Microsoft
ARG NET_IMAGE=7.0-bullseye-slim
FROM mcr.microsoft.com/dotnet/sdk:${NET_IMAGE} AS build

# Set work directory
WORKDIR /src

# Copy project files into work directory
COPY ["src/ApiGateways/Aggregators/Web.Shopping.HttpAggregator/Web.Shopping.HttpAggregator.csproj", "src/ApiGateways/Aggregators/Web.Shopping.HttpAggregator/"]
COPY ["src/BuildingBlocks/EventBus/EventBus.csproj", "src/BuildingBlocks/EventBus/"]
COPY ["src/BuildingBlocks/Healthchecks/Healthchecks.csproj", "src/BuildingBlocks/Healthchecks/"]
COPY ["src/Services/Basket/Basket.API/Basket.API.csproj", "src/Services/Basket/Basket.API/"]
COPY ["src/Services/Catalog/Catalog.API/Catalog.API.csproj", "src/Services/Catalog/Catalog.API/"]
COPY ["src/Services/Identity/Identity.API/Identity.API.csproj", "src/Services/Identity/Identity.API/"]
COPY ["src/Services/Ordering/Ordering.API/Ordering.API.csproj", "src/Services/Ordering/Ordering.API/"]
COPY ["src/Services/Payment/Payment.API/Payment.API.csproj", "src/Services/Payment/Payment.API/"]
COPY ["src/Web/BlazorClient.Host/BlazorClient.Host.csproj", "src/Web/BlazorClient.Host/"]
COPY ["src/Web/BlazorClient/BlazorClient.csproj", "src/Web/BlazorClient/"]
COPY ["src/Web/WebStatus/WebStatus.csproj", "src/Web/WebStatus/"]
COPY ["docker-compose.dcproj", "./"]
COPY ["NuGet.config", "./"]
COPY ["eShopOnDapr.sln", "./"]

# Restore the project
RUN dotnet restore "src/Web/BlazorClient.Host/BlazorClient.Host.csproj"

# Copy all other files into work directory
COPY . .

# Publish the project
RUN dotnet publish "src/Web/BlazorClient.Host/BlazorClient.Host.csproj" --no-restore -c Release -o /app/publish

FROM mcr.microsoft.com/dotnet/sdk:${NET_IMAGE} AS final

# Set work directory
WORKDIR /app

# Copy from build phase

# Expose port 80
EXPOSE 80 

# Set the startup command to run your binary
ENTRYPOINT ["dotnet", "Microsoft.eShopOnDapr.BlazorClient.Host.dll"]
