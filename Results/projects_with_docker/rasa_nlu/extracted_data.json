{
    "source_code_info": {
        "language": "Python",
        "framework": "Rasa",
        "dependencies": {
            "pyproject.toml": "[build-system]\nrequires = [ \"poetry-core>=1.0.4\",]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.black]\nline-length = 88\ntarget-version = [ \"py38\", \"py39\", \"py310\",]\nexclude = \"((.eggs | .git | .pytest_cache | build | dist))\"\n\n[tool.poetry]\nname = \"rasa\"\nversion = \"3.6.21\"\ndescription = \"Open source machine learning framework to automate text- and voice-based conversations: NLU, dialogue management, connect to Slack, Facebook, and more - Create chatbots and voice assistants\"\nauthors = [ \"Rasa Technologies GmbH <hi@rasa.com>\",]\nmaintainers = [ \"Tom Bocklisch <tom@rasa.com>\",]\nhomepage = \"https://rasa.com\"\nrepository = \"https://github.com/rasahq/rasa\"\ndocumentation = \"https://rasa.com/docs\"\nclassifiers = [ \"Development Status :: 5 - Production/Stable\", \"Intended Audience :: Developers\", \"License :: OSI Approved :: Apache Software License\", \"Topic :: Software Development :: Libraries\",]\nkeywords = [ \"nlp\", \"machine-learning\", \"machine-learning-library\", \"bot\", \"bots\", \"botkit\", \"rasa conversational-agents\", \"conversational-ai\", \"chatbot\", \"chatbot-framework\", \"bot-framework\",]\ninclude = [ \"LICENSE.txt\", \"README.md\", \"rasa/shared/core/training_data/visualization.html\", \"rasa/cli/default_config.yml\", \"rasa/shared/importers/*\", \"rasa/utils/schemas/*\", \"rasa/keys\",]\nreadme = \"README.md\"\nlicense = \"Apache-2.0\"\n[[tool.poetry.source]]\nname = \"internal repository mirroring psycopg binary for macos\"\nurl = \"https://europe-west3-python.pkg.dev/rasa-releases/psycopg-binary/simple/\"\npriority = \"supplemental\"\n\n[tool.towncrier]\npackage = \"rasa\"\npackage_dir = \"rasa\"\nfilename = \"CHANGELOG.mdx\"\ndirectory = \"./changelog\"\nunderlines = \"   \"\ntitle_format = \"## [{version}] - {project_date}\"\ntemplate = \"./changelog/_template.md.jinja2\"\nstart_string = \"<!-- TOWNCRIER -->\\n\"\nissue_format = \"[#{issue}](https://github.com/rasahq/rasa/issues/{issue})\"\n[[tool.towncrier.type]]\ndirectory = \"removal\"\nname = \"Deprecations and Removals\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"feature\"\nname = \"Features\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"improvement\"\nname = \"Improvements\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"bugfix\"\nname = \"Bugfixes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"doc\"\nname = \"Improved Documentation\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"misc\"\nname = \"Miscellaneous internal changes\"\nshowcontent = false\n\n[tool.mypy]\nmypy_path = \"./stubs\"\nignore_missing_imports = true\nshow_error_codes = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\ndisallow_untyped_calls = true\ndisallow_incomplete_defs = true\ndisallow_untyped_defs = true\ndisallow_untyped_decorators = true\nno_implicit_optional = false\ndisable_error_code = [ \"arg-type\",]\n\n[tool.bandit]\nskips = [ \"B104\", \"B301\",]\n\n[tool.ruff]\nignore = [ \"D100\", \"D104\", \"D105\", \"RUF001\", \"RUF002\", \"RUF003\", \"RUF005\",]\nline-length = 88\nselect = [ \"D\", \"E\", \"F\", \"W\", \"RUF\",]\n\n[tool.poetry.dependencies]\npython = \">=3.8,<3.11\"\nboto3 = \"^1.26.136\"\nrequests = \"^2.23\"\nmatplotlib = \">=3.1,<3.6\"\nattrs = \">=19.3,<22.2\"\njsonpickle = \">=1.3,<3.1\"\nredis = \">=4.5.3, <5.0\"\nabsl-py = \">=0.9,<1.5\"\napscheduler = \">=3.6,<3.10\"\ntqdm = \"^4.31\"\nnetworkx = \">=2.4,<2.7\"\nfbmessenger = \"~6.0.0\"\npykwalify = \">=1.7,<1.9\"\ncoloredlogs = \">=10,<16\"\n\"ruamel.yaml\" = \">=0.16.5,<0.17.22\"\npyyaml = \">=6.0\"\ntwilio = \">=6.26,<8.3\"\nwebexteamssdk = \">=1.1.1,<1.7.0\"\nmattermostwrapper = \"~2.2\"\nrocketchat_API = \">=0.6.31,<1.31.0\"\ncolorhash = \">=1.0.2,<1.3.0\"\njsonschema = \">=3.2,<4.18\"\npackaging = \">=20.0,<21.0\"\npytz = \">=2019.1,<2023.0\"\nrasa-sdk = \"~3.6.2\"\ncolorclass = \"~2.2\"\nterminaltables = \"~3.1.0\"\nsanic = \"~21.12\"\nsanic-cors = \"~2.0.0\"\nsanic-jwt = \"^1.6.0\"\nsanic-routing = \"^0.7.2\"\nwebsockets = \">=10.0,<11.0\"\naiohttp = \">=3.9.0,<3.10\"\nquestionary = \">=1.5.1,<1.11.0\"\nprompt-toolkit = \"^3.0,<3.0.29\"\npython-socketio = \">=4.4,<6\"\npython-engineio = \">=4,<6,!=5.0.0\"\npydot = \"~1.4\"\nSQLAlchemy = \">=1.4.0,<1.5.0\"\nsklearn-crfsuite = \"~0.3\"\npsycopg2-binary = \">=2.8.2,<2.10.0\"\npython-dateutil = \"~2.8\"\nprotobuf = \">=4.23.3,< 4.23.4\"\ntensorflow_hub = \"^0.13.0\"\nsetuptools = \"~70.3.0\"\nujson = \">=1.35,<6.0\"\nregex = \">=2020.6,<2022.11\"\nsentry-sdk = \">=0.17.0,<1.15.0\"\naio-pika = \">=6.7.1,<8.2.4\"\naiogram = \"<2.26\"\ntyping-extensions = \">=4.1.1,<5.0.0\"\ntyping-utils = \"^0.1.0\"\ntarsafe = \">=0.0.3,<0.0.5\"\ngoogle-auth = \"<3\"\nCacheControl = \"^0.12.9\"\nrandomname = \"^0.1.5\"\npluggy = \"^1.0.0\"\nslack-sdk = \"^3.19.2\"\nconfluent-kafka = \">=1.9.2,<3.0.0\"\nportalocker = \"^2.7.0\"\nstructlog = \"^23.1.0\"\nstructlog-sentry = \"^2.0.2\"\ndnspython = \"2.3.0\"\nwheel = \">=0.38.1\"\ncertifi = \">=2023.7.22\"\ncryptography = \">=41.0.7\"\nskops = \"0.9.0\"\nsafetensors = \"~0.4.5\"\n[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]\nversion = \"==0.31\"\nmarkers = \"sys_platform == 'win32'\"\n\n[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]\nversion = \"==0.32\"\nmarkers = \"sys_platform == 'linux'\"\n\n[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]\nversion = \"==0.32\"\nmarkers = \"sys_platform == 'darwin' and platform_machine != 'arm64'\"\n\n[[tool.poetry.dependencies.dask]]\nversion = \"2022.2.0\"\npython = \"~=3.7.0\"\n\n[[tool.poetry.dependencies.dask]]\nversion = \"2022.10.2\"\npython = \">=3.8,<3.11\"\n\n[[tool.poetry.dependencies.numpy]]\nversion = \">=1.19.2,<1.22.0\"\npython = \"~=3.7.0\"\n\n[[tool.poetry.dependencies.numpy]]\nversion = \">=1.19.2,<1.25.0\"\npython = \">=3.8,<3.11\"\n\n[[tool.poetry.dependencies.numpy]]\nversion = \"1.22.3\"\nmarkers = \"sys_platform =='Windows' and platform_python_implementation != 'PyPy'\"\npython = \"3.10\"\n\n[[tool.poetry.dependencies.scipy]]\nversion = \">=1.4.1,<1.7.3\"\npython = \"~=3.7.0\"\n\n[[tool.poetry.dependencies.scipy]]\nversion = \">=1.10.0,<1.11.0\"\npython = \">=3.8,<3.11\"\n\n[[tool.poetry.dependencies.scikit-learn]]\nversion = \">=0.22,<1.1\"\npython = \"~=3.7.0\"\n\n[[tool.poetry.dependencies.scikit-learn]]\nversion = \">=0.22,<1.2\"\npython = \">=3.8,<3.11\"\n\n[[tool.poetry.dependencies.spacy]]\nversion = \"^3.4\"\nmarkers = \"sys_platform == 'darwin' and platform_machine == 'arm64'\"\noptional = true\n\n[[tool.poetry.dependencies.spacy]]\nversion = \">=3.1,<3.5\"\nmarkers = \"sys_platform != 'darwin' or platform_machine != 'arm64'\"\noptional = true\n\n[[tool.poetry.dependencies.pydantic]]\nversion = \"<1.10.10\"\noptional = true\n\n[tool.poetry.extras]\nspacy = [ \"spacy\",]\njieba = [ \"jieba\",]\ntransformers = [ \"transformers\", \"sentencepiece\",]\nfull = [ \"spacy\", \"transformers\", \"sentencepiece\", \"jieba\",]\ngh-release-notes = [ \"github3.py\",]\nmetal = [ \"tensorflow-metal\",]\n\n[tool.poetry.scripts]\nrasa = \"rasa.__main__:main\"\n\n[tool.ruff.pydocstyle]\nconvention = \"google\"\n\n[tool.ruff.per-file-ignores]\n\"tests/test_telemetry.py\" = [ \"E501\",]\n\"tests/shared/core/test_domain.py\" = [ \"E501\",]\n\n[tool.pytest.ini_options]\npython_functions = \"test_\"\nfilterwarnings = [ \"ignore::ResourceWarning:ruamel[.*]\",]\nlog_cli_level = \"WARNING\"\nlog_cli = true\nmarkers = [ \"skip_on_windows\", \"skip_on_ci\", \"sequential\", \"category_cli\", \"category_core_featurizers\", \"category_policies\", \"category_nlu_featurizers\", \"category_nlu_predictors\", \"category_full_model_training\", \"category_other_unit_tests\", \"category_performance\", \"flaky\",]\ntimeout = 60\ntimeout_func_only = true\nasyncio_mode = \"auto\"\n\n[tool.poetry.dependencies.tensorflow]\nversion = \"2.12.0\"\nmarkers = \"sys_platform != 'darwin' or platform_machine != 'arm64'\"\n\n[tool.poetry.dependencies.tensorflow-intel]\nversion = \"2.12.0\"\nmarkers = \"sys_platform == 'win32'\"\n\n[tool.poetry.dependencies.tensorflow-cpu-aws]\nversion = \"2.12.0\"\nmarkers = \"sys_platform == 'linux' and (platform_machine == 'arm64' or platform_machine == 'aarch64')\"\n\n[tool.poetry.dependencies.tensorflow-macos]\nversion = \"2.12.0\"\nmarkers = \"sys_platform == 'darwin' and platform_machine == 'arm64'\"\n\n[tool.poetry.dependencies.PyJWT]\nversion = \"^2.0.0\"\nextras = [ \"crypto\",]\n\n[tool.poetry.dependencies.colorama]\nversion = \"^0.4.4\"\nmarkers = \"sys_platform == 'win32'\"\n\n[tool.poetry.dependencies.tensorflow-metal]\nversion = \"0.8.0\"\nmarkers = \"sys_platform == 'darwin' and platform_machine == 'arm64'\"\noptional = true\n\n[tool.poetry.dependencies.tensorflow-text]\nversion = \"2.12.0\"\nmarkers = \"sys_platform != 'win32' and platform_machine != 'arm64' and platform_machine != 'aarch64'\"\n\n[tool.poetry.dependencies.\"github3.py\"]\nversion = \"~3.2.0\"\noptional = true\n\n[tool.poetry.dependencies.transformers]\nversion = \"~4.36.2\"\noptional = true\n\n[tool.poetry.dependencies.sentencepiece]\nversion = \"~0.1.99\"\noptional = true\nextras = [ \"sentencepiece\",]\n\n[tool.poetry.dependencies.jieba]\nversion = \">=0.39, <0.43\"\noptional = true\n\n[tool.poetry.dependencies.pymongo]\nversion = \">=3.8,<4.4\"\nextras = [ \"tls\", \"srv\",]\n\n[tool.poetry.dev-dependencies.pytest-sanic]\ngit = \"https://github.com/RasaHQ/pytest-sanic\"\nbranch = \"fix_signal_issue\"\n\n[tool.poetry.group.dev.dependencies]\nruff = \">=0.0.255,<0.0.256\"\ndocker = \"^6.0.1\"\npytest-cov = \"^4.0.0\"\npytest-asyncio = \"^0.20.0\"\npytest-xdist = \"^3.2.1\"\npytest = \"^7.1.3\"\nfreezegun = \"^1.0.0\"\nresponses = \"^0.22.0\"\naioresponses = \"^0.7.6\"\nmoto = \"~=4.1.2\"\nfakeredis = \"^2.11.2\"\nmongomock = \"^4.1.2\"\nblack = \"^22.10.0\"\ngoogle-cloud-storage = \"^2.4.0\"\nazure-storage-blob = \"<12.16.0\"\ncoveralls = \"^3.0.1\"\ntowncrier = \"^22.8.0\"\ntoml = \"^0.10.0\"\npep440-version-utils = \"^0.3.0\"\npydoc-markdown = \"^4.5.1\"\npytest-timeout = \"^2.1.0\"\nmypy = \"^1.0.0\"\nbandit = \"^1.6.3\"\ntypes-pytz = \"^2022.1.1\"\ntypes-python-dateutil = \"^2.8.19\"\ntypes-requests = \"^2.25.0\"\ntypes-setuptools = \"^67.2.0\"\nmemory-profiler = \"^0.61.0\"\npsutil = \"^5.8.0\"\nmypy-extensions = \"^0.4.3\"\nsanic-testing = \">=21.12.0,<22.9.0\"\nanalytics-python = \"^1.4.0\"\ndatadog-api-client = \"^2.0.0\"\ndatadog = \"^0.45.0\"\ntypes-redis = \"^4.3.20\"\nhttpx = \"0.23.3\"\n"
        },
        "database": "PostgreSQL",
        "build_system": "poetry",
        "config_files": {
            ".env": "TIMES=2",
            "Dockerfile": "# The default Docker image\nARG IMAGE_BASE_NAME\nARG BASE_IMAGE_HASH\nARG BASE_BUILDER_IMAGE_HASH\n\nFROM ${IMAGE_BASE_NAME}:base-builder-${BASE_BUILDER_IMAGE_HASH} as builder\n# copy files\nCOPY . /build/\n\n# change working directory\nWORKDIR /build\n\n# install dependencies\nRUN python -m venv /opt/venv && \\\n  . /opt/venv/bin/activate && \\\n  pip install --no-cache-dir -U \"pip==22.*\" -U \"wheel>0.38.0\" && \\\n  poetry install --no-dev --no-root --no-interaction && \\\n  poetry build -f wheel -n && \\\n  pip install --no-deps dist/*.whl && \\\n  rm -rf dist *.egg-info\n\n# start a new build stage\nFROM ${IMAGE_BASE_NAME}:base-${BASE_IMAGE_HASH} as runner\n\n# copy everything from /opt\nCOPY --from=builder /opt/venv /opt/venv\n\n# make sure we use the virtualenv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# set HOME environment variable\nENV HOME=/app\n\n# update permissions & change user to not run as root\nWORKDIR /app\nRUN chgrp -R 0 /app && chmod -R g=u /app && chmod o+wr /app\nUSER 1001\n\n# create a volume for temporary data\nVOLUME /tmp\n\n# change shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# the entry point\nEXPOSE 5005\nENTRYPOINT [\"rasa\"]\nCMD [\"--help\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "devcontainer.json",
            "docker-compose.yml"
        ],
        "folders": []
    }
}