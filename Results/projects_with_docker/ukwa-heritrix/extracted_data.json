{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <groupId>uk.bl.wa.heritrix</groupId>\n   <artifactId>bl-heritrix-modules</artifactId>\n   <version>2.7.12-SNAPSHOT</version>\n   <properties>\n      <jdk.version>1.8</jdk.version>\n      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n      <heritrix.version>3.4.0-20220727</heritrix.version>\n      <!-- heritrix.version>3.4.0-SNAPSHOT</heritrix.version -->\n   </properties>\n   <licenses>\n      <license>\n         <name>The Apache Software License, Version 2.0</name>\n         <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n         <distribution>repo</distribution>\n      </license>\n   </licenses>\n   <developers>\n      <developer>\n         <id>anjackson</id>\n         <name>Andrew Jackson</name>\n         <email>Andrew.Jackson@bl.uk</email>\n      </developer>\n   </developers>\n   <issueManagement>\n      <system>GitHub Issues</system>\n      <url>https://github.com/ukwa/ukwa-heritrix/issues</url>\n   </issueManagement>   <scm>\n      <connection>scm:git:git@github.com:ukwa/ukwa-heritrix.git</connection>\n      <developerConnection>scm:git:git@github.com:ukwa/ukwa-heritrix.git</developerConnection>\n      <url>git@github.com:ukwa/ukwa-heritrix.git</url>\n     <tag>HEAD</tag>\n  </scm>   \n   <build>\n      <plugins>\n         <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <version>2.3.2</version>\n            <configuration>\n               <tagNameFormat>@{project.version}</tagNameFormat>\n            </configuration>\n         </plugin>\n         <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-compiler-plugin</artifactId>\n            <version>3.8.1</version>\n            <configuration>\n               <source>1.8</source>\n               <target>1.8</target>\n            </configuration>\n         </plugin>\n         <plugin>\n            <artifactId>maven-assembly-plugin</artifactId>\n            <executions>\n               <execution>\n                  <phase>package</phase>\n                  <goals>\n                     <goal>single</goal>\n                  </goals>\n               </execution>\n            </executions>\n            <configuration>\n               <descriptorRefs>\n                  <descriptorRef>jar-with-dependencies</descriptorRef>\n               </descriptorRefs>\n               <outputDirectory>${project.build.directory}/dist/heritrix-${heritrix.version}/lib</outputDirectory>\n            </configuration>\n         </plugin>\n        <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-dependency-plugin</artifactId>\n         <version>3.2.0</version>\n         <executions>\n           <execution>\n             <id>unpack</id>\n             <phase>validate</phase>\n             <goals>\n               <goal>unpack</goal>\n             </goals>\n             <configuration>\n               <artifactItems>\n                 <artifactItem>\n                   <groupId>org.archive.heritrix</groupId>\n                   <artifactId>heritrix</artifactId>\n                   <version>${heritrix.version}</version>\n                   <type>zip</type>\n                   <classifier>dist</classifier>\n                 </artifactItem>\n               </artifactItems>\n               <outputDirectory>${project.build.directory}/dist</outputDirectory>\n             </configuration>\n           </execution>\n         </executions>\n       </plugin>\n      </plugins>\n   </build>\n   <repositories>\n      <repository>\n         <id>ossrh-snapshots</id>\n         <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n         <releases>\n            <enabled>false</enabled>\n         </releases>\n         <snapshots>\n            <enabled>true</enabled>\n         </snapshots>\n      </repository>\n   </repositories>\n   <dependencies>\n      <dependency>\n         <groupId>org.archive.heritrix</groupId>\n         <artifactId>heritrix-commons</artifactId>\n         <version>${heritrix.version}</version>\n         <scope>provided</scope>\n         <exclusions>\n            <exclusion>\n               <groupId>commons-io</groupId>\n               <artifactId>commons-io</artifactId>\n            </exclusion>\n         </exclusions>\n      </dependency>\n      <dependency>\n         <groupId>org.archive.heritrix</groupId>\n         <artifactId>heritrix-modules</artifactId>\n         <version>${heritrix.version}</version>\n         <scope>provided</scope>\n      </dependency>\n      <dependency>\n         <groupId>org.archive.heritrix</groupId>\n         <artifactId>heritrix-engine</artifactId>\n         <version>${heritrix.version}</version>\n         <scope>provided</scope>\n      </dependency>\n      <dependency>\n         <groupId>org.archive.heritrix</groupId>\n         <artifactId>heritrix-contrib</artifactId>\n         <version>${heritrix.version}</version>\n         <exclusions>\n            <exclusion> <!-- Excluding here to avoid these transitive dependencies getting packed -->\n               <groupId>org.archive.heritrix</groupId>\n               <artifactId>heritrix-common</artifactId>\n            </exclusion>\n            <exclusion>\n               <groupId>org.archive.heritrix</groupId>\n               <artifactId>heritrix-modules</artifactId>\n            </exclusion>\n            <exclusion>\n               <groupId>org.archive.heritrix</groupId>\n               <artifactId>heritrix-engine</artifactId>\n            </exclusion>\n            <exclusion>\n               <artifactId>guava</artifactId>\n               <groupId>com.google.guava</groupId>\n            </exclusion>\n            <exclusion>\n               <artifactId>httpclient</artifactId>\n               <groupId>org.apache.httpcomponents</groupId>\n            </exclusion>\n            <exclusion>\n               <groupId>org.apache.kafka</groupId>\n               <artifactId>kafka_2.10</artifactId>\n            </exclusion>\n            <exclusion>\n               <groupId>commons-io</groupId>\n               <artifactId>commons-io</artifactId>\n            </exclusion>\n         </exclusions>\n      </dependency>      \n      <dependency>\n        <groupId>com.maxmind.geoip2</groupId>\n        <artifactId>geoip2</artifactId>\n        <version>2.13.1</version>\n        <exclusions>\n            <exclusion>\n               <artifactId>guava</artifactId>\n               <groupId>com.google.guava</groupId>\n            </exclusion>\n            <exclusion>\n               <artifactId>httpclient</artifactId>\n               <groupId>org.apache.httpcomponents</groupId>\n            </exclusion>\n            <exclusion>\n               <artifactId>google-http-client</artifactId>\n               <groupId>com.google.http-client</groupId>\n            </exclusion>\n         </exclusions>\n      </dependency>\n      <dependency>\n         <groupId>commons-pool</groupId>\n         <artifactId>commons-pool</artifactId>\n         <version>1.6</version>\n      </dependency>\n      <dependency>\n         <groupId>com.sun.jersey</groupId>\n         <artifactId>jersey-client</artifactId>\n         <version>1.19.2</version>\n      </dependency>\n      <dependency>\n         <groupId>junit</groupId>\n         <artifactId>junit</artifactId>\n         <version>4.13.1</version>\n         <scope>test</scope>\n      </dependency>\n      <dependency>\n\t    <groupId>io.lettuce</groupId>\n\t    <artifactId>lettuce-core</artifactId>\n\t    <version>6.1.4.RELEASE</version>\n         <exclusions>\n            <exclusion>\n               <artifactId>guava</artifactId>\n               <groupId>com.google.guava</groupId>\n            </exclusion>\n         </exclusions>\n      </dependency>\n      <dependency>\n         <groupId>org.apache.kafka</groupId>\n         <artifactId>kafka-clients</artifactId>\n         <version>1.0.0</version>\n      </dependency>\n      <dependency>\n         <groupId>io.prometheus</groupId>\n         <artifactId>simpleclient_httpserver</artifactId>\n         <version>0.12.0</version>\n      </dependency>\n      <dependency>\n         <groupId>io.prometheus</groupId>\n         <artifactId>simpleclient</artifactId>\n         <version>0.12.0</version>\n      </dependency>\n      <dependency>\n         <groupId>io.prometheus</groupId>\n         <artifactId>simpleclient_hotspot</artifactId>\n         <version>0.12.0</version>\n      </dependency>\n      <dependency>\n         <groupId>com.github.crawler-commons</groupId>\n         <artifactId>crawler-commons</artifactId>\n         <version>1.1</version>\n      </dependency>\n      <dependency>\n      \t <groupId>org.rocksdb</groupId>\n      \t <artifactId>rocksdbjni</artifactId>\n      \t <version>6.22.1.1</version>\n      </dependency>\n   </dependencies>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '3.7'\n\nservices:\n  # UKWA Heritrix\n  heritrix:\n    build:\n      context: .\n      args:\n        http_proxy: ${HTTP_PROXY}\n        https_proxy: ${HTTPS_PROXY}\n    hostname: \"h3w\" # Set the hostname so the persistent files are in consistent locations\n    ports:\n      - \"8443:8443\"\n      - \"9101:9101\" # JMX port\n      - \"9119:9118\" # Metrics for Prometheus\n    environment:\n       - \"JAVA_OPTS=-Xmx2g -javaagent:/jmx_prometheus_javaagent-0.3.1.jar=9101:/jmx-config.yml\"\n       - \"CRAWL_NAME=npld-fc\"\n       - \"MAX_TOE_THREADS=10\"\n       - \"LAUNCH_AUTOMATICALLY=true\"\n       - \"PAUSE_AT_START=false\"\n       - \"WARC_PREFIX=BL-NPLD-TEST\"\n       - \"WEBRENDER_WARC_PREFIX=BL-NPLD-WEBRENDER\"\n       - \"SCOPE_LOG_ENABLED=false\"\n       - \"SCOPE_FILE_RELOAD_INTERVAL=5\"\n       - \"RECORD_DECIDING_RULE=true\"\n       - \"KAFKA_BOOTSTRAP_SERVERS=kafka:9092\"\n       - \"KAFKA_TOCRAWL_TOPIC=fc.tocrawl\"\n       - \"KAFKA_CANDIDATES_LOG_ENABLED=false\"\n       - \"KAFKA_CANDIDATES_TOPIC=fc.tocrawl\"\n       - \"KAFKA_CANDIDATES_IN_SCOPE_ONLY=true\"\n       - \"KAFKA_INSCOPE_TOPIC=fc.inscope\"\n       - \"KAFKA_DISCARDED_FEED_ENABLED=true\"\n       - \"KAFKA_DISCARDED_TOPIC=fc.discarded\"\n       - \"KAFKA_CRAWLED_TOPIC=fc.crawled\"\n       - \"KAFKA_NUM_MESSAGE_THREADS=2\"\n       - \"KAFKA_SEEK_TO_BEGINNING=false\"\n       - \"CDXSERVER_ENDPOINT=http://cdxserver:8080/fc\"\n       - \"WEBRENDER_ENABLED=true\"\n       - \"WEBRENDER_ENDPOINT=http://webrender:8010/render\"\n       - \"CLAMD_ENABLED=true\"\n       - \"CLAMD_HOST=clamd\"\n       #- \"SURTS_SOURCE_FILE=domain-surts.txt\" # Use the domain SURT scope\n       - \"SURTS_SOURCE_FILE=/shared/surts.txt\"\n       # This can be used to test quota enforcement/resetting:\n       #- \"QUOTA_SERVER_MAX_SUCCESS_KB=1\"\n       - \"FRONTIER_JE_CLEANER_THREADS=2\"\n       # Needs to be false when using a Bloom filter.\n       - \"URI_FORGETTING_ENABLED=true\" \n       # Override the frontier implementation:\n       #- \"FRONTIER_BEANS_XML=frontier-redis.xml\"\n       #- \"REDIS_ENDPOINT=redis://redis:6666\"\n       # Override the uriUniqFilter implementation:\n       - \"URIUNIQFILTER_BEANS_XML=uriuniqfilter-rocksdb.xml\"\n    depends_on:\n      - clamd\n      - kafka\n      - webrender\n      - cdxserver\n      - redis\n      - acid.matkelly.com\n      - crawl-test-site.webarchive.org.uk\n    volumes:\n      - ./docker/jmx_prometheus_javaagent-0.3.1.jar:/jmx_prometheus_javaagent-0.3.1.jar\n      - ./docker/heritrix-jmx-config.yml:/jmx-config.yml\n      - ./docker/shared:/shared\n      - ./target/integration-test-volumes/output:/heritrix/output\n      - ./target/integration-test-volumes/scratch:/heritrix/scratch\n      - ./target/integration-test-volumes/state:/heritrix/state\n \n  # Clamd virus scanning Service\n  clamd:\n    image: ukwa/clamd:1.0.1\n    ports:\n      - \"3310:3310\"\n\n  # Kafka\n  kafka:\n    image: wurstmeister/kafka:1.1.0\n    ports:\n      - \"9092:9092\"\n    environment:\n      KAFKA_ADVERTISED_HOST_NAME: kafka\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n      KAFKA_LISTENERS: PLAINTEXT://:9092\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n      KAFKA_NUM_RECOVERY_THREADS_PER_DATA_DIR: 10\n      LOG_RETENTION_HOURS: -1\n      LOG_RETENTION_BYTES: -1\n      NUM_PARTITIONS: 16\n      KAFKA_CREATE_TOPICS: \"fc.candidates:16:1 --config=compression.type=snappy,fc.tocrawl:16:1 --config=compression.type=snappy,fc.crawled:16:1 --config=compression.type=snappy,fc.discarded:16:1 --config=compression.type=snappy,fc.inscope:16:1 --config=compression.type=snappy\"\n      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'\n      LOG4J_LOGGER_KAFKA: WARN\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    depends_on:\n      - zookeeper\n\n  # Needs a Zookeeper too\n  # ----\n  zookeeper:\n    image: wurstmeister/zookeeper\n    ports:\n     - \"2181:2181\"\n    #healthcheck:\n    #  test: [\"CMD-SHELL\", \"echo ruok | nc -w 2 zookeeper 4444\"]\n    #  interval: 5s\n    #  timeout: 10s\n    #  retries: 3\n\n  # Kafka UI\n  kafka-ui:\n    image: ukwa/docker-trifecta\n    ports:\n      - \"9000:9000\"\n    environment:\n      - \"ZK_HOST=zookeeper:2181\"\n    depends_on:\n      - zookeeper\n      - kafka\n\n  # Web page rendering service\n  webrender:\n    image: ukwa/webrender-puppeteer:2.1.0\n    environment:\n      - \"PORT=8010\"\n      - \"HTTP_PROXY=http://warcprox:8000/\"\n      - \"LC_ALL=en_US.utf8\"\n      - \"NODE_ENV=production\"\n      - \"WARCPROX_PROXY=true\"\n      - \"PUPPETEER_CLUSTER_SIZE=2\"\n      - \"WARC_OUTPUT_PATH=/heritrix/wren\"\n      - \"WARC_PREFIX=BL-WEBRENDERED\"\n      - \"USER_AGENT_ADDITIONAL=bl.uk_lddc_renderbot/@VERSION@ (+https://www.bl.uk/legal-deposit-web-archiving)\"\n    ports:\n      - \"8010:8010\"\n    depends_on:\n      - warcprox\n    volumes:\n      - ./target/integration-test-volumes/wren:/heritrix/wren\n\n  # WARC Proxy, with de-duplication disabled and a rapid rollover:\n  warcprox:\n    image: ukwa/warcprox:2.4.17.1\n    command: \"warcprox -b 0.0.0.0 -d /heritrix/wren --base32 --gzip --rollover-idle-time 600 --dedup-db-file /dev/null --stats-db-file /dev/null --cacert /heritrix/wren/warcprox-ca.pem --certs-dir /heritrix/wren/warcprox-ca-certs --quiet --plugin warcprox-plugins.listeners.KafkaCaptureFeed --plugin warcprox-plugins.listeners.UpdateOutbackCDX\"\n    environment:\n      - \"LC_ALL=en_US.utf8\"\n      - \"TMP=/tmp/warcprox\"\n      - \"KAFKA_BOOTSTRAP_SERVERS=kafka:9092\"\n      - \"KAFKA_CRAWLED_TOPIC=fc.crawled\"\n      - \"KAFKA_CRAWLED_ACKS=1\"\n      - \"CDXSERVER_ENDPOINT=http://cdxserver:8080/fc\"\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - kafka\n      - cdxserver\n      - acid.matkelly.com\n      - crawl-test-site.webarchive.org.uk\n    ulimits:\n      nproc: 2000 # See https://github.com/internetarchive/warcprox/blob/2.x/warcprox/warcproxy.py#L413\n    volumes:\n      - ./target/integration-test-volumes/wren:/heritrix/wren\n \n  # tinycdxserver\n  cdxserver:\n    image: nlagovau/outbackcdx:0.10.0\n    # Verbose form logs submissions:\n    command: \"java -Xmx2g -jar outbackcdx.jar -u -d /cdx-data -p 8080 -b 0.0.0.0 -t 1000\"\n    ports:\n      - \"9090:8080\"    \n    volumes:\n      - ./target/integration-test-volumes/cdx:/cdx-data\n\n  # Redis for the external frontier\n  redis:\n    # Redis compatible disk-backed store based on RocksBD:\n    image: kvrocks/kvrocks\n    ports:\n      - \"6379:6666\"\n    volumes:\n      - ./target/integration-test-volumes/kvrocks:/tmp/kvrocks\n    \n    #image: redis:6\n    #command: \"redis-server --appendonly yes\"\n    #ports:\n    #  - \"6379:6379\"\n    #volumes:\n    #  - ./target/integration-test-volumes/redis:/data\n\n  # Redis Browser      \n  redis-commander:\n    image: rediscommander/redis-commander:latest\n    restart: always\n    environment:\n    #- REDIS_HOSTS=redis:redis:6379\n    - REDIS_HOSTS=redis:redis:6666\n    ports:\n    - \"8081:8081\"\n    depends_on:\n    - redis\n\n\n  # ----------------------------------------------\n  # Wayback Access\n  # ----------------------------------------------\n  warc-server:\n    image: ukwa/warc-server\n    ports:\n      - 8001:8000\n    environment:\n      - \"WARC_PATHS=/heritrix/output,/heritrix/wren\"\n    volumes:\n      - ./target/integration-test-volumes/wren:/heritrix/wren\n      - ./target/integration-test-volumes/output:/heritrix/output\n\n\n  # ----------\n  # Test sites and test runner\n  # ----------\n\n  # Local version of the Archival Acid Test: http://acid.matkelly.com\n  acid.matkelly.com:\n    image: ukwa/archival-acid-test:master\n    ports:\n      - \"180:80\"  \n    networks:\n      default:\n        aliases:\n          - www.cs.odu.edu # Emulating the remote host via a simple alias.\n\n  # Local version of the UKWA test site: http://data.webarchive.org.uk/crawl-test-site/\n  crawl-test-site.webarchive.org.uk:\n    image: ukwa/crawl-test-site:with-robots-txt\n    ports:\n      - \"280:80\"\n\n  # This runs the integration tests\n  robot:\n    build:\n      context: integration-test/robot\n      args:\n        http_proxy: ${HTTP_PROXY}\n        https_proxy: ${HTTPS_PROXY}\n    command: --outputdir /out /tests\n    volumes:\n      - ./integration-test/robot/tests:/tests:ro\n      - ./integration-test/results:/out:rw\n    depends_on:\n      - kafka\n      - cdxserver\n      - heritrix\n\n      \n",
            "Dockerfile": "FROM maven:3-jdk-8\n\nMAINTAINER Andrew Jackson \"anj@anjackson.net\"\n\n# Install extra software and resources:\nRUN \\\n  curl -L -O https://download.elastic.co/beats/filebeat/filebeat_1.0.0-rc1_amd64.deb && \\\n  dpkg -i filebeat_1.0.0-rc1_amd64.deb\n\n# Copy GeoLite2 DB into place\nCOPY src/main/resources/GeoLite2-City_20200908/GeoLite2-City.mmdb .\n\n# Install config to modify Maven settings so HTTP repos don't fail:\nCOPY .mvn /bl-heritrix-modules/.mvn\n\n# Add in the UKWA modules.\n#\n# We process the dependencies and source separately, so the JARs can be cached and \n# we don't need to download everything when we make code changes (unless we change the pom).\n#\n# First copy the pom in and update dependencies:\nCOPY pom.xml /bl-heritrix-modules/pom.xml\nRUN mvn -B -f /bl-heritrix-modules/pom.xml -s /usr/share/maven/ref/settings-docker.xml dependency:resolve-plugins dependency:go-offline\n#\n# Then copy the code in and build it:\nCOPY src /bl-heritrix-modules/src\nRUN cd /bl-heritrix-modules && \\\n    mvn -B -s /usr/share/maven/ref/settings-docker.xml -DskipTests install && \\\n    cp -r /bl-heritrix-modules/target/dist/heritrix-* /h3-bin\n\n# Send in other required files:\nCOPY docker/filebeat.yml /etc/filebeat/filebeat.yml\nCOPY docker/logging.properties /h3-bin/conf/logging.properties\nCOPY docker/bin/* /h3-bin/bin/\nCOPY jobs /jobs\n\n# Configure Heritrix options:\nENV FOREGROUND=true \\\n    JAVA_OPTS=-Xmx2g\n    \n#ENV JAVA_OPTS -Xmx2g -Dhttps.protocols=TLSv1,TLSv1.1,TLSv1.2\n\n# Set up some defaults:\nENV MONITRIX_ENABLE=false \\\n    HERITRIX_USER=heritrix \\\n    HERITRIX_PASSWORD=heritrix \\\n    JOB_NAME=frequent\n\n#STOPSIGNAL TERM # Which is the default\n\n# Set the runtime user (with no password and no sudo)\nRUN addgroup --gid 1001 heritrix && adduser --uid 1001 --ingroup heritrix heritrix\nRUN mkdir -p /heritrix && mkdir -p /output && mkdir -p /home/heritrix && chown -R heritrix /h3-bin /jobs /output /heritrix /home/heritrix\nUSER heritrix\nWORKDIR /home/heritrix\n# Maven happiness (https://github.com/carlossg/docker-maven#running-as-non-root-not-supported-on-windows):\nENV MAVEN_CONFIG=/home/heritrix/.m2\n\n# Finish setup:\nEXPOSE 8443\nVOLUME /shared\nVOLUME /output\n\n# Hook in H3 runner script:\nCMD [ \"/h3-bin/bin/start\" ]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "requirements.txt"
        ],
        "folders": [
            "tests"
        ]
    }
}