{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "JavaScript",
        "dependencies": {
            "package.json": "{\n  \"name\": \"docker-ttrss-plugins\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"repository\": \"git@github.com:HenryQW/docker-ttrss-plugins.git\",\n  \"license\": \"MIT\",\n  \"author\": \"Henry <hi@henry.wang>\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"docker:build\": \"docker rm ttrss -f && docker compose -f docker-compose.dev.yml up -d --build && docker logs ttrss -f\",\n    \"docker:build:down\": \"docker compose -f docker-compose.dev.yml down\",\n    \"docker:dev\": \"docker rm ttrss -f && docker compose -f docker-compose.yml up -d && docker logs ttrss -f\",\n    \"docker:dev:down\": \"docker compose -f docker-compose.yml down\",\n    \"docs:build\": \"vitepress build docs\",\n    \"docs:dev\": \"vitepress dev docs\",\n    \"docs:preview\": \"vitepress preview docs\",\n    \"format\": \"prettier \\\"**/*.{js,json,md}\\\" --write\",\n    \"textlint\": \"textlint \\\"**/*.md\\\"\",\n    \"textlint:fix\": \"textlint \\\"**/*.md\\\" --fix\"\n  },\n  \"devDependencies\": {\n    \"textlint\": \"14.4.2\",\n    \"textlint-rule-en-capitalization\": \"2.0.3\",\n    \"textlint-rule-ja-space-between-half-and-full-width\": \"2.4.2\",\n    \"vitepress\": \"1.6.3\"\n  },\n  \"pnpm\": {\n    \"onlyBuiltDependencies\": [\n      \"esbuild\"\n    ],\n    \"overrides\": {\n      \"is-core-module\": \"npm:@nolyfill/is-core-module@^1\",\n      \"regexp.prototype.flags\": \"npm:@nolyfill/regexp.prototype.flags@^1\",\n      \"safe-buffer\": \"npm:@nolyfill/safe-buffer@^1\",\n      \"typedarray\": \"npm:@nolyfill/typedarray@^1\"\n    }\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "services:\n  service.ttrss:\n    image: wangqiru/ttrss:latest\n    container_name: ttrss\n    ports:\n      - 181:80\n    environment:\n      - SELF_URL_PATH=http://localhost:181 # please change to your own domain\n      - DB_PASS=ttrss # use the same password defined in `database.postgres`\n      - PUID=1000\n      - PGID=1000\n    volumes:\n      - feed-icons:/var/www/feed-icons/\n    networks:\n      - public_access\n      - service_only\n      - database_only\n    stdin_open: true\n    tty: true\n    depends_on:\n      - database.postgres\n    restart: always\n    healthcheck:\n      test: [\"CMD-SHELL\", \"curl -f http://localhost:80 || exit 1\"]\n      start_period: 30s\n      interval: 30s\n      timeout: 10s\n      retries: 5\n\n  service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page\n    image: wangqiru/mercury-parser-api:latest\n    container_name: mercury\n    networks:\n      - public_access\n      - service_only\n    restart: always\n\n  service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page\n    image: wangqiru/opencc-api-server:latest\n    container_name: opencc\n    environment:\n      - NODE_ENV=production\n    networks:\n      - service_only\n    restart: always\n\n  database.postgres:\n    image: postgres:16-alpine\n    environment:\n      - POSTGRES_PASSWORD=ttrss # feel free to change the password\n    volumes:\n      - ~/postgres/data/:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host\n    networks:\n      - database_only\n    restart: always\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U postgres\"]\n      start_period: 30s\n      interval: 30s\n      timeout: 10s\n      retries: 5\n\n  # utility.watchtower:\n  #   container_name: watchtower\n  #   image: containrrr/watchtower:latest\n  #   volumes:\n  #     - /var/run/docker.sock:/var/run/docker.sock\n  #   environment:\n  #     - WATCHTOWER_CLEANUP=true\n  #     - WATCHTOWER_POLL_INTERVAL=86400\n  #   restart: always\n\n  # service.rsshub:\n  #   container_name: rsshub\n  #   image: diygod/rsshub:latest\n  #   environment:\n  #     NODE_ENV: production\n  #     DEBUG_INFO: false\n  #     LOGGER_LEVEL: error\n  #     NO_LOGFILES: true    \n  #   networks:\n  #     - service_only\n  #   expose:\n  #     - 3000\n  #   restart: unless-stopped\n\nvolumes:\n  feed-icons:\n\nnetworks:\n  public_access: # Provide the access for ttrss UI\n  service_only: # Provide the communication network between services only\n    internal: true\n  database_only: # Provide the communication between ttrss and database only\n    internal: true\n",
            "Dockerfile": "FROM docker.io/alpine:3.21 AS builder\n\n# Download ttrss via git\nWORKDIR /var/www\n# https://stackoverflow.com/questions/36996046/how-to-prevent-dockerfile-caching-git-clone\nADD https://gitlab.tt-rss.org/api/v4/projects/20/repository/branches/master /var/www/ttrss-version\nRUN apk add --update tar curl git \\\n  && rm -rf /var/www/* \\\n  && git clone https://git.tt-rss.org/fox/tt-rss --depth=1 /var/www\n\n# Download plugins\nWORKDIR /var/www/plugins.local\n\nRUN mkdir /var/www/plugins/fever mercury_fulltext feediron opencc api_newsplus options_per_feed remove_iframe_sandbox wallabag_v2 auth_oidc freshapi && \\\n  ## Fever\n  curl -sL https://github.com/DigitalDJ/tinytinyrss-fever-plugin/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C /var/www/plugins/fever tinytinyrss-fever-plugin-master && \\\n  ## Mercury Fulltext\n  curl -sL https://github.com/HenryQW/mercury_fulltext/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C mercury_fulltext mercury_fulltext-master && \\\n  ## Feediron\n  curl -sL https://github.com/feediron/ttrss_plugin-feediron/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C feediron ttrss_plugin-feediron-master && \\\n  ## OpenCC\n  curl -sL https://github.com/HenryQW/ttrss_opencc/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C opencc ttrss_opencc-master && \\\n  ## News+ API\n  curl -sL https://github.com/voidstern/tt-rss-newsplus-plugin/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=2 -C api_newsplus tt-rss-newsplus-plugin-master/api_newsplus && \\\n  ## Options per feed\n  curl -sL https://github.com/sergey-dryabzhinsky/options_per_feed/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C options_per_feed options_per_feed-master && \\\n  ## Remove iframe sandbox\n  curl -sL https://github.com/DIYgod/ttrss-plugin-remove-iframe-sandbox/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C remove_iframe_sandbox ttrss-plugin-remove-iframe-sandbox-master && \\\n  ## Wallabag\n  curl -sL https://github.com/joshp23/ttrss-to-wallabag-v2/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=2 -C wallabag_v2 ttrss-to-wallabag-v2-master/wallabag_v2 && \\\n  ## Auth OIDC\n  curl -sL https://gitlab.tt-rss.org/tt-rss/plugins/ttrss-auth-oidc/-/archive/master/ttrss-auth-oidc-master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C auth_oidc ttrss-auth-oidc-master && \\\n  ## FreshAPI\n  curl -sL https://github.com/eric-pierce/freshapi/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 -C freshapi freshapi-master\n\n## FeedReader API\nADD https://raw.githubusercontent.com/jangernert/FeedReader/master/data/tt-rss-feedreader-plugin/api_feedreader/init.php api_feedreader/\n\n# Download themes\nWORKDIR /var/www/themes.local\n\n# Fix safari: TypeError: window.requestIdleCallback is not a function\n# https://community.tt-rss.org/t/typeerror-window-requestidlecallback-is-not-a-function/1755/26\n# https://github.com/pladaria/requestidlecallback-polyfill\n# COPY src/local-overrides.js local-overrides.js\n# this polyfill is added to tt-rss after 1 years 7 months\n# https://github.com/HenryQW/Awesome-TTRSS/commit/1b077f26f8c40ce7dd7b2a0cf2263a3537118e07\n# https://gitlab.tt-rss.org/tt-rss/tt-rss/-/commit/31ef788e02339452fa6241277e17f85067c33ba0\n\n## Feedly\nRUN curl -sL https://github.com/levito/tt-rss-feedly-theme/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 --wildcards -C . tt-rss-feedly-theme-master/feedly*.css tt-rss-feedly-theme-master/feedly/fonts && \\\n  ## RSSHub\n  curl -sL https://github.com/DIYgod/ttrss-theme-rsshub/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=2 -C . ttrss-theme-rsshub-master/dist/rsshub.css && \\\n  ## Feedlish\n  curl -sL https://github.com/Gravemind/tt-rss-feedlish-theme/archive/master.tar.gz | \\\n  tar xzvpf - --strip-components=1 --wildcards -C . tt-rss-feedlish-theme-master/feedlish*.css\n\nFROM docker.io/alpine:3.21\n\nLABEL maintainer=\"Henry<hi@henry.wang>\"\n\nWORKDIR /var/www\n\nCOPY ./docker-entrypoint.sh /docker-entrypoint.sh\nCOPY src/wait-for.sh /wait-for.sh\nCOPY src/ttrss.nginx.conf /etc/nginx/nginx.conf\nCOPY src/initialize.php /initialize.php\nCOPY src/s6/ /etc/s6/\n\n# Open up ports to bypass ttrss strict port checks, USE WITH CAUTION\nENV ALLOW_PORTS=\"80,443\"\nENV SELF_URL_PATH=http://localhost:181\nENV DB_NAME=ttrss\nENV DB_USER=ttrss\nENV DB_PASS=ttrss\n\n# Install dependencies\nRUN chmod -x /wait-for.sh && chmod -x /docker-entrypoint.sh && apk add --update --no-cache git nginx s6 curl sudo tzdata \\\n  php82 php82-fpm php82-ctype php82-curl php82-dom php82-exif php82-fileinfo php82-gd php82-iconv php82-intl php82-json php82-mbstring php82-opcache \\\n  php82-openssl php82-pcntl php82-pdo php82-pdo_pgsql php82-phar php82-pecl-apcu php82-posix php82-session php82-simplexml php82-sockets php82-tokenizer php82-xml php82-xmlwriter php82-zip \\\n  php82-gmp php82-pecl-imagick \\\n  ca-certificates && rm -rf /var/cache/apk/* \\\n  # Update libiconv as the default version is too low\n  # Do not bump this dependency https://gitlab.alpinelinux.org/alpine/aports/-/issues/12328\n  && apk add gnu-libiconv=1.15-r3 --update --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/v3.13/community/ \\\n  && rm -rf /var/www \\\n  && ln -s /usr/bin/php82 /usr/bin/php\n\nENV LD_PRELOAD=\"/usr/lib/preloadable_libiconv.so php\"\n\n# Copy TTRSS and plugins\nCOPY --from=builder /var/www /var/www\n\nRUN chown nobody:nginx -R /var/www \\\n  && git config --global --add safe.directory /var/www\n\nEXPOSE 80\n\n# Database default settings\nENV DB_HOST=database.postgres\nENV DB_PORT=5432\nENV DB_USER=postgres\nENV DB_PASS=ttrss\nENV DB_NAME=ttrss\n\n# Some default settings\nENV SELF_URL_PATH=http://localhost:181\nENV ENABLE_PLUGINS=auth_internal,fever\nENV SESSION_COOKIE_LIFETIME=24\nENV SINGLE_USER_MODE=false\nENV LOG_DESTINATION=sql\nENV FEED_LOG_QUIET=false\n\nENTRYPOINT [\"sh\", \"/docker-entrypoint.sh\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            ".editorconfig",
            ".gitignore",
            ".gitpod.yml",
            ".textlintrc",
            "Dockerfile",
            "LICENSE",
            "README.md",
            "docker-compose.dev.yml",
            "docker-compose.yml",
            "docker-entrypoint.sh",
            "package.json",
            "pnpm-lock.yaml"
        ],
        "folders": [
            ".devcontainer",
            ".github",
            ".vscode",
            "docs",
            "src"
        ]
    }
}