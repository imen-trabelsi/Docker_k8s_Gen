# Specified base image
FROM docker.io/alpine:3.21 as builder

# Specify the maintainer of the Dockerfile
LABEL maintainer="Henry<hi@henry.wang>"

# Fix the working directory
WORKDIR /var/www

# Add the necessary files
ADD https://gitlab.tt-rss.org/api/v4/projects/20/repository/branches/master /var/www/ttrss-version
WORKDIR /var/www/plugins.local
ADD https://raw.githubusercontent.com/jangernert/FeedReader/master/data/tt-rss-feedreader-plugin/api_feedreader/init.php api_feedreader/
WORKDIR /var/www/themes.local
ADD https://gitlab.tt-rss.org/fox/tt-rss /var/www
COPY src/wait-for.sh /wait-for.sh
COPY src/ttrss.nginx.conf /etc/nginx/nginx.conf
COPY src/initialize.php /initialize.php
COPY src/s6/ /etc/s6/
COPY ./docker-entrypoint.sh /docker-entrypoint.sh

# Copy the source code
COPY src /var/www

# Install system dependencies
RUN apk add --update \
  tar \
  curl \
  git \
  nginx \
  s6 \
  tzdata \
  sudo \ 
  ca-certificates \
  php82 \
  php82-fpm \
  php82-ctype \
  php82-curl \
  php82-dom \
  php82-exif \
  php82-fileinfo \
  php82-gd \
  php82-iconv \
  php82-intl \
  php82-json \
  php82-mbstring \
  php82-opcache \
  php82-openssl \
  php82-pcntl \
  php82-pdo \
  php82-pdo_pgsql \
  php82-phar \
  php82-pecl-apcu \
  php82-posix \
  php82-session \
  php82-simplexml \
  php82-sockets \
  php82-tokenizer \
  php82-xml \
  php82-xmlwriter \
  php82-zip \
  php82-gmp \
  
# Clean up 
RUN rm -rf /var/cache/apk/* && \
  chmod -x /wait-for.sh && \

# Set environment variables
ENV ALLOW_PORTS="80,443"
ENV SELF_URL_PATH=http://localhost:181
ENV DB_NAME=ttrss
ENV DB_USER=ttrss
ENV DB_PASS=ttrss
ENV LD_PRELOAD="/usr/lib/preloadable_libiconv.so php"
ENV DB_HOST=database.postgres
ENV DB_PORT=5432
ENV DB_USER=postgres
ENV DB_PASS=ttrss
ENV DB_NAME=ttrss
ENV SELF_URL_PATH=http://localhost:181
ENV ENABLE_PLUGINS=auth_internal,fever
ENV SESSION_COOKIE_LIFETIME=24
ENV SINGLE_USER_MODE=false
ENV LOG_DESTINATION=sql
ENV FEED_LOG_QUIET=false

# Expose port 80
EXPOSE 80

# Set the Docker entrypoint script
ENTRYPOINT ["sh", "/docker-entrypoint.sh"]
