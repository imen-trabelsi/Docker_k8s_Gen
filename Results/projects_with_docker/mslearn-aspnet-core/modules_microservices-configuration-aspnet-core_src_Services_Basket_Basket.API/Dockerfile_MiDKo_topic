# Start with Base image
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS builder

# Set work directory
WORKDIR /app

# Copy necessary files
COPY src/ApiGateways/Aggregators/Web.Shopping.HttpAggregator/Web.Shopping.HttpAggregator.csproj src/BuildingBlocks/EventBus/EventBus/EventBus.csproj src/BuildingBlocks/EventBus/EventBusRabbitMQ/EventBusRabbitMQ.csproj src/BuildingBlocks/EventBus/EventBusServiceBus/EventBusServiceBus.csproj src/BuildingBlocks/EventBus/IntegrationEventLogEF/IntegrationEventLogEF.csproj src/BuildingBlocks/WebHost/WebHost.Customization/WebHost.Customization.csproj src/Services/Basket/Basket.API/Basket.API.csproj src/Services/Catalog/Catalog.API/Catalog.API.csproj src/Services/Coupon/Coupon.API/Coupon.API.csproj src/Services/Identity/Identity.API/Identity.API.csproj src/Services/Ordering/Ordering.API/Ordering.API.csproj src/Services/Ordering/Ordering.BackgroundTasks/Ordering.BackgroundTasks.csproj src/Services/Ordering/Ordering.Domain/Ordering.Domain.csproj src/Services/Ordering/Ordering.Infrastructure/Ordering.Infrastructure.csproj src/Services/Ordering/Ordering.SignalrHub/Ordering.SignalrHub.csproj src/Services/Payment/Payment.API/Payment.API.csproj src/Web/WebSPA/WebSPA.csproj src/Web/WebStatus/WebStatus.csproj ./

# Copy project files and restore
COPY ./ ./
RUN dotnet restore "eShop-Learn.sln"

# Build
RUN dotnet publish --no-restore "Basket.API.csproj" -c Release -o /app/publish

FROM mcr.microsoft.com/dotnet/aspnet:6.0

# Set the working directory to /app
WORKDIR /app

# Copy output from build stage

# Expose port 80
EXPOSE 80

# Set the main command to run 
ENTRYPOINT ["dotnet", "Basket.API.dll"]
