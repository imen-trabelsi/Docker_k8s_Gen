{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            "requirements.txt": "setuptools==50.3.2\nnumpy==1.19.2\nplotly==4.12.0\nJinja2==2.11.2\npsutil==5.7.3\nPyYAML==5.3.1\njsonschema==3.2.0\npandas==1.1.3\nConfigSpace==0.4.16\npika==1.1.0\nsortedcontainers==2.2.2\npymongo==3.11.0\n"
        },
        "database": "MongoDB",
        "build_system": "pip",
        "config_files": {
            "docker-compose.yml": "# Launch & Build a bunch containers with workers and one service for them.\nversion: \"3.7\"\nservices: \n  main-node:\n    build: ./main_node/\n    tty: true\n    container_name: main-node\n    environment:\n      - EXP_DUMP_NAME=undefined\n    restart: on-failure\n\n  event_service:\n    build: ./event_service/\n    stdin_open: true\n    tty: true\n    container_name: event-service\n    ports:\n        - 49153:49153\n        - 49154:49154\n        - 49155:49155\n    restart: on-failure\n\n  mongo-db:\n    image: mongo:4.4.0\n    container_name: mongo-db\n    restart: on-failure\n    environment:\n        MONGO_INITDB_DATABASE: BRISE_db\n    ports:\n        - 27017:27017\n    volumes:\n      - ./mongo_db/init.js:/docker-entrypoint-initdb.d/init.js\n\n  worker_service:\n    build: ./worker_service/\n    stdin_open: true\n    tty: true\n    container_name: worker-service\n    restart: on-failure\n\n  front-end:\n    build: ./front_end/\n    container_name: front-end\n    tty: true\n    ports:\n        - 80:80\n    restart: on-failure\n\n  worker:\n    build: ./worker/\n    restart: on-failure\n",
            "worker/Dockerfile": "FROM brisedev/worker-dev:2.5.0\n\n# create worker user\nRUN useradd -ms /bin/bash w_user && echo \"w_user:w_user\" | chpasswd && adduser w_user sudo\nCOPY . /home/w_user\n\nRUN chown -R w_user:w_user /home/w_user\nUSER w_user\nWORKDIR /home/w_user\n\nARG BRISE_EVENT_SERVICE_HOST\nENV BRISE_EVENT_SERVICE_HOST ${BRISE_EVENT_SERVICE_HOST}\n\nARG BRISE_EVENT_SERVICE_AMQP_PORT\nENV BRISE_EVENT_SERVICE_AMQP_PORT ${BRISE_EVENT_SERVICE_AMQP_PORT}\n\nARG BRISE_EVENT_SERVICE_GUI_PORT\nENV BRISE_EVENT_SERVICE_GUI_PORT ${BRISE_EVENT_SERVICE_GUI_PORT}\n\nARG BRISE_DATABASE_HOST\nENV BRISE_DATABASE_HOST ${BRISE_DATABASE_HOST}\n\nARG BRISE_DATABASE_PORT\nENV BRISE_DATABASE_PORT ${BRISE_DATABASE_PORT}\n\nARG BRISE_DATABASE_NAME\nENV BRISE_DATABASE_NAME ${BRISE_DATABASE_NAME}\n\nARG BRISE_DATABASE_USER\nENV BRISE_DATABASE_USER ${BRISE_DATABASE_USER}\n\nARG BRISE_DATABASE_PASS\nENV BRISE_DATABASE_PASS ${BRISE_DATABASE_PASS}\n\nCMD dockerize -wait http://${BRISE_EVENT_SERVICE_HOST}:${BRISE_EVENT_SERVICE_GUI_PORT}  python3.7 -u ./w_intro.py\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "intro.py"
        ],
        "folders": []
    }
}