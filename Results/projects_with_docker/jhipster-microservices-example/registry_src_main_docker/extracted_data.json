{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <groupId>org.springframework.boot</groupId>\n        <version>1.5.4.RELEASE</version>\n        <relativePath/>\n    </parent>\n\n    <groupId>io.github.jhipster.registry</groupId>\n    <artifactId>jhipster-registry</artifactId>\n    <version>3.0.2</version>\n    <packaging>war</packaging>\n    <name>JHipster Registry</name>\n    <description>JHipster service registry, made with Netflix Eureka and Spring Cloud Config</description>\n\n    <properties>\n        <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>\n        <assertj.version>3.6.2</assertj.version>\n        <awaitility.version>2.0.0</awaitility.version>\n        <commons-codec.version>1.10</commons-codec.version>\n        <commons-io.version>2.7</commons-io.version>\n        <commons-lang.version>3.5</commons-lang.version>\n        <docker-maven-plugin.version>0.4.13</docker-maven-plugin.version>\n        <!-- Overridden to get metrics-jcache -->\n        <dropwizard-metrics.version>3.2.2</dropwizard-metrics.version>\n        <frontend-maven-plugin.version>1.3</frontend-maven-plugin.version>\n        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>\n        <java.version>1.8</java.version>\n        <jhipster.server.version>1.1.2</jhipster.server.version>\n        <jjwt.version>0.7.0</jjwt.version>\n        <logstash-logback-encoder.version>4.9</logstash-logback-encoder.version>\n        <lz4.version>1.3.0</lz4.version>\n        <m2e.apt.activation>jdt_apt</m2e.apt.activation>\n        <mapstruct.version>1.1.0.Final</mapstruct.version>\n        <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>\n        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>\n        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>\n        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n        <maven.version>3.0.0</maven.version>\n        <metrics-spring.version>3.1.3</metrics-spring.version>\n        <node.version>v6.10.0</node.version>\n\n        <prometheus-simpleclient.version>0.0.20</prometheus-simpleclient.version>\n        <!-- Sonar properties -->\n        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>\n        <run.addResources>false</run.addResources>\n        <scala-maven-plugin.version>3.2.2</scala-maven-plugin.version>\n        <scala.version>2.12.1</scala.version>\n        <sonar-maven-plugin.version>3.2</sonar-maven-plugin.version>\n\n        <sonar.exclusions>src/main/webapp/content/**/*.*, src/main/webapp/bower_components/**/*.*, src/main/webapp/i18n/*.js, target/www/**/*.*</sonar.exclusions>\n\n        <sonar.issue.ignore.multicriteria>S3437,UndocumentedApi,BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria>\n\n        <!-- Rule https://sonarqube.com/coding_rules#rule_key=Web%3ABoldAndItalicTagsCheck is ignored. Even if we agree that using the \"i\" tag is an awful practice, this is what is recommended by http://fontawesome.io/examples/ -->\n        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>src/main/webapp/app/**/*.*</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.resourceKey>\n        <sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>Web:BoldAndItalicTagsCheck</sonar.issue.ignore.multicriteria.BoldAndItalicTagsCheck.ruleKey>\n        <!-- Rule https://sonarqube.com/coding_rules#rule_key=squid%3AS3437 is ignored, as a JPA-managed field cannot be transient -->\n        <sonar.issue.ignore.multicriteria.S3437.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.S3437.resourceKey>\n        <sonar.issue.ignore.multicriteria.S3437.ruleKey>squid:S3437</sonar.issue.ignore.multicriteria.S3437.ruleKey>\n        <!-- Rule http://sonarqube.com/coding_rules#rule_key=squid%3AUndocumentedApi is ignored, as we want to follow \"clean code\" guidelines and classes, methods and arguments names should be self-explanatory -->\n        <sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>src/main/java/**/*</sonar.issue.ignore.multicriteria.UndocumentedApi.resourceKey>\n        <sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>squid:UndocumentedApi</sonar.issue.ignore.multicriteria.UndocumentedApi.ruleKey>\n\n        <sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>\n        <sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>\n        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>\n\n        <sonar.javascript.jstestdriver.reportsPath>${project.testresult.directory}/karma</sonar.javascript.jstestdriver.reportsPath>\n        <!-- For Sonar < 6.2 -->\n        <sonar.javascript.lcov.reportPath>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPath>\n        <!-- For Sonar >= 6.2 -->\n        <sonar.javascript.lcov.reportPaths>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPaths>\n\n        <sonar.sources>${project.basedir}/src/main/</sonar.sources>\n        <sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>\n        <sonar.tests>${project.basedir}/src/test/</sonar.tests>\n\n        <!-- Spring properties -->\n        <spring-cloud.version>Dalston.RELEASE</spring-cloud.version>\n        <springfox.version>2.6.1</springfox.version>\n        <undertow.version>1.4.10.Final</undertow.version>\n        <validation-api.version>1.1.0.Final</validation-api.version>\n        <yarn.version>v0.21.3</yarn.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.github.jhipster</groupId>\n            <artifactId>jhipster</artifactId>\n            <version>${jhipster.server.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-annotation</artifactId>\n            <version>${dropwizard-metrics.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-json</artifactId>\n            <version>${dropwizard-metrics.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-jvm</artifactId>\n            <version>${dropwizard-metrics.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-servlet</artifactId>\n            <version>${dropwizard-metrics.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-servlets</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-hppc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-jsr310</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-json-org</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.awaitility</groupId>\n            <artifactId>awaitility</artifactId>\n            <version>${awaitility.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.jayway.jsonpath</groupId>\n            <artifactId>json-path</artifactId>\n            <scope>test</scope>\n            <!-- parent POM declares this dependency in default (compile) scope -->\n        </dependency>\n        <dependency>\n            <groupId>com.ryantenney.metrics</groupId>\n            <artifactId>metrics-spring</artifactId>\n            <version>${metrics-spring.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n            <version>${commons-codec.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>${commons-io.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>${commons-lang.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>net.jpountz.lz4</groupId>\n            <artifactId>lz4</artifactId>\n            <version>${lz4.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct-jdk8</artifactId>\n            <version>${mapstruct.version}</version>\n        </dependency>\n\n        <!-- SPRING -->\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context-support</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-autoconfigure</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-loader-tools</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-logging</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-mail</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-tomcat</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt</artifactId>\n            <version>${jjwt.version}</version>\n        </dependency>\n        <!-- Spring Cloud -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-zuul</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-ribbon</artifactId>\n            <!-- netty's native is pulled, but is useless unless you explicitly add the native binary dependency.\n                 Having it in the classpath without the binary can cause warnings -->\n            <exclusions>\n                <exclusion>\n                    <groupId>io.netty</groupId>\n                    <artifactId>netty-transport-native-epoll</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-hystrix</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-spectator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.retry</groupId>\n            <artifactId>spring-retry</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-eureka-server</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-config-server</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-feign</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>net.logstash.logback</groupId>\n            <artifactId>logstash-logback-encoder</artifactId>\n            <version>${logstash-logback-encoder.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-core</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-classic</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>ch.qos.logback</groupId>\n                    <artifactId>logback-access</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-cloud-connectors</artifactId>\n        </dependency>\n        <!-- security -->\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-data</artifactId>\n        </dependency>\n        <!-- jhipster-needle-maven-add-dependency -->\n    </dependencies>\n    <build>\n        <defaultGoal>spring-boot:run</defaultGoal>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${maven-compiler-plugin.version}</version>\n                <configuration>\n                    <annotationProcessorPaths>\n                        <path>\n                            <groupId>org.mapstruct</groupId>\n                            <artifactId>mapstruct-processor</artifactId>\n                            <version>${mapstruct.version}</version>\n                        </path>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-eclipse-plugin</artifactId>\n                <configuration>\n                    <downloadSources>true</downloadSources>\n                    <downloadJavadocs>true</downloadJavadocs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>${maven-enforcer-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>enforce-versions</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <rules>\n                        <requireMavenVersion>\n                            <message>You are running an older version of Maven. JHipster requires at least Maven ${maven.version}</message>\n                            <version>[${maven.version},)</version>\n                        </requireMavenVersion>\n                        <requireJavaVersion>\n                            <message>You are running an older version of Java. JHipster requires at least JDK ${java.version}</message>\n                            <version>[${java.version}.0,)</version>\n                        </requireJavaVersion>\n                    </rules>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>${maven-resources-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>default-resources</id>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>copy-resources</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>target/classes</outputDirectory>\n                            <useDefaultDelimiters>false</useDefaultDelimiters>\n                            <delimiters>\n                                <delimiter>#</delimiter>\n                            </delimiters>\n                            <resources>\n                                <resource>\n                                    <directory>src/main/resources/</directory>\n                                    <filtering>true</filtering>\n                                    <includes>\n                                        <include>**/*.xml</include>\n                                        <include>**/*.yml</include>\n                                    </includes>\n                                </resource>\n                                <resource>\n                                    <directory>src/main/resources/</directory>\n                                    <filtering>false</filtering>\n                                    <excludes>\n                                        <exclude>**/*.xml</exclude>\n                                        <exclude>**/*.yml</exclude>\n                                    </excludes>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <!-- Force alphabetical order to have a reproducible build -->\n                    <runOrder>alphabetical</runOrder>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>${jacoco-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>pre-unit-tests</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                        <configuration>\n                            <!-- Sets the path to the file which contains the execution data. -->\n                            <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>\n                        </configuration>\n                    </execution>\n                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->\n                    <execution>\n                        <id>post-unit-test</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                        <configuration>\n                            <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>\n                            <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.sonarsource.scanner.maven</groupId>\n                <artifactId>sonar-maven-plugin</artifactId>\n                <version>${sonar-maven-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <executable>true</executable>\n                    <fork>true</fork>\n                    <!--\n                    Enable the line below to have remote debugging of your application on port 5005\n                    <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                    -->\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>com.spotify</groupId>\n                <artifactId>docker-maven-plugin</artifactId>\n                <version>${docker-maven-plugin.version}</version>\n                <configuration>\n                    <imageName>jhipsterregistry</imageName>\n                    <dockerDirectory>src/main/docker</dockerDirectory>\n                    <resources>\n                        <resource>\n                            <targetPath>/</targetPath>\n                            <directory>${project.build.directory}</directory>\n                            <include>${project.build.finalName}.war</include>\n                        </resource>\n                    </resources>\n                </configuration>\n            </plugin>\n            <!-- jhipster-needle-maven-add-plugin -->\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <!--\n                    This plugin's configuration is used to store Eclipse m2e settings only.\n                    It has no influence on the Maven build itself.\n                    Remove when the m2e plugin can correctly bind to Maven lifecycle\n                -->\n                <plugin>\n                    <groupId>org.eclipse.m2e</groupId>\n                    <artifactId>lifecycle-mapping</artifactId>\n                    <version>1.0.0</version>\n                    <configuration>\n                        <lifecycleMappingMetadata>\n                            <pluginExecutions>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.jacoco</groupId>\n                                        <artifactId>\n                                            jacoco-maven-plugin\n                                        </artifactId>\n                                        <versionRange>\n                                            ${jacoco-maven-plugin.version}\n                                        </versionRange>\n                                        <goals>\n                                            <goal>prepare-agent</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore/>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>com.github.eirslett</groupId>\n                                        <artifactId>frontend-maven-plugin</artifactId>\n                                        <versionRange>${frontend-maven-plugin.version}</versionRange>\n                                        <goals>\n                                            <goal>install-node-and-yarn</goal>\n                                            <goal>yarn</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore/>\n                                    </action>\n                                </pluginExecution>\n                            </pluginExecutions>\n                        </lifecycleMappingMetadata>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n    <profiles>\n        <profile>\n            <id>webpack</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.github.eirslett</groupId>\n                        <artifactId>frontend-maven-plugin</artifactId>\n                        <version>${frontend-maven-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <id>install node and yarn</id>\n                                <goals>\n                                    <goal>install-node-and-yarn</goal>\n                                </goals>\n                                <configuration>\n                                    <nodeVersion>${node.version}</nodeVersion>\n                                    <yarnVersion>${yarn.version}</yarnVersion>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>webpack build dev</id>\n                                <goals>\n                                    <goal>yarn</goal>\n                                </goals>\n                                <phase>generate-resources</phase>\n                                <configuration>\n                                    <arguments>run webpack:build:dev</arguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>dev</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-devtools</artifactId>\n                    <optional>true</optional>\n                </dependency>\n            </dependencies>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <configuration>\n                            <warSourceDirectory>src/main/webapp/</warSourceDirectory>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n            <properties>\n                <!-- log configuration -->\n                <logback.loglevel>DEBUG</logback.loglevel>\n                <!-- default Spring profiles -->\n                <spring.profiles.active>dev</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <id>prod</id>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>\n            </dependencies>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-clean-plugin</artifactId>\n                        <configuration>\n                            <filesets>\n                                <fileset>\n                                    <directory>target/www/</directory>\n                                </fileset>\n                            </filesets>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <configuration>\n                            <warSourceDirectory>target/www/</warSourceDirectory>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.springframework.boot</groupId>\n                        <artifactId>spring-boot-maven-plugin</artifactId>\n                        <configuration>\n                            <executable>true</executable>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>build-info</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>com.github.eirslett</groupId>\n                        <artifactId>frontend-maven-plugin</artifactId>\n                        <version>${frontend-maven-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <id>install node and yarn</id>\n                                <goals>\n                                    <goal>install-node-and-yarn</goal>\n                                </goals>\n                                <configuration>\n                                    <nodeVersion>${node.version}</nodeVersion>\n                                    <yarnVersion>${yarn.version}</yarnVersion>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>yarn install</id>\n                                <goals>\n                                    <goal>yarn</goal>\n                                </goals>\n                                <configuration>\n                                    <arguments>install --force</arguments>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>webpack build test</id>\n                                <goals>\n                                    <goal>yarn</goal>\n                                </goals>\n                                <phase>test</phase>\n                                <configuration>\n                                    <arguments>run webpack:test</arguments>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>webpack build prod</id>\n                                <goals>\n                                    <goal>yarn</goal>\n                                </goals>\n                                <phase>generate-resources</phase>\n                                <configuration>\n                                    <arguments>run webpack:prod</arguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n            <properties>\n                <!-- log configuration -->\n                <logback.loglevel>INFO</logback.loglevel>\n                <!-- default Spring profiles -->\n                <spring.profiles.active>prod</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <!--\n                Profile for doing \"continuous compilation\" with the Scala Maven plugin.\n                It allows automatic compilation of Java classes as soon as they are saved.\n                To use it, run in 3 terminals:\n                - './mvnw -Pcc scala:cc' for continous compilation of your classes\n                - './mvnw -Pcc' for hot reload of Spring boot\n                - 'gulp' for hot reload of the HTML/JavaScript assets\n                Everything should hot reload automatically!\n            -->\n            <id>cc</id>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-devtools</artifactId>\n                    <optional>true</optional>\n                </dependency>\n            </dependencies>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <configuration>\n                            <warSourceDirectory>src/main/webapp/</warSourceDirectory>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.springframework.boot</groupId>\n                        <artifactId>spring-boot-maven-plugin</artifactId>\n                        <configuration>\n                            <executable>true</executable>\n                            <fork>true</fork>\n                            <addResources>true</addResources>\n                            <!--\n                            Enable the line below to have remote debugging of your application on port 5005\n                            <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                            -->\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>default-compile</id>\n                                <phase>none</phase>\n                            </execution>\n                            <execution>\n                                <id>default-testCompile</id>\n                                <phase>none</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n            <properties>\n                <!-- log configuration -->\n                <logback.loglevel>DEBUG</logback.loglevel>\n                <!-- default Spring profiles -->\n                <spring.profiles.active>dev</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <!--\n                Profile for monitoring the application with Graphite.\n            -->\n            <id>graphite</id>\n            <dependencies>\n                <dependency>\n                    <groupId>io.dropwizard.metrics</groupId>\n                    <artifactId>metrics-graphite</artifactId>\n                </dependency>\n            </dependencies>\n        </profile>\n        <profile>\n            <!--\n                Profile for monitoring the application with Prometheus.\n            -->\n            <id>prometheus</id>\n            <dependencies>\n                <dependency>\n                    <groupId>io.prometheus</groupId>\n                    <artifactId>simpleclient</artifactId>\n                    <version>${prometheus-simpleclient.version}</version>\n                </dependency>\n                <dependency>\n                    <groupId>io.prometheus</groupId>\n                    <artifactId>simpleclient_servlet</artifactId>\n                    <version>${prometheus-simpleclient.version}</version>\n                </dependency>\n                <dependency>\n                    <groupId>io.prometheus</groupId>\n                    <artifactId>simpleclient_dropwizard</artifactId>\n                    <version>${prometheus-simpleclient.version}</version>\n                </dependency>\n            </dependencies>\n        </profile>\n        <profile>\n            <!--\n                Profile for applying IDE-specific configuration.\n                At the moment it only configures MapStruct, which you need when working\n                with DTOs.\n            -->\n            <id>IDE</id>\n            <dependencies>\n                <dependency>\n                    <groupId>org.mapstruct</groupId>\n                    <artifactId>mapstruct-processor</artifactId>\n                    <version>${mapstruct.version}</version>\n                </dependency>\n            </dependencies>\n        </profile>\n        <profile>\n            <!--\n                Profile for deploying to Heroku, which cleans up node_modules\n                and other artifacts to reduce slug size.\n            -->\n            <id>heroku</id>\n            <build>\n              <plugins>\n                <plugin>\n                  <artifactId>maven-clean-plugin</artifactId>\n                  <executions>\n                    <execution>\n                      <id>clean-build-artifacts</id>\n                      <phase>install</phase>\n                      <goals>\n                          <goal>clean</goal>\n                      </goals>\n                      <configuration>\n                          <excludeDefaultDirectories>true</excludeDefaultDirectories>\n                          <filesets>\n                              <fileset>\n                                  <directory>node_modules</directory>\n                              </fileset>\n                              <fileset>\n                                  <directory>.heroku/node</directory>\n                              </fileset>\n                              <fileset>\n                                  <directory>target</directory>\n                                  <excludes>\n                                      <exclude>*.war</exclude>\n                                  </excludes>\n                              </fileset>\n                          </filesets>\n                      </configuration>\n                    </execution>\n                  </executions>\n                </plugin>\n              </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "registry/src/main/docker/Dockerfile": "FROM openjdk:8-jre-alpine\n\nENV SPRING_OUTPUT_ANSI_ENABLED=ALWAYS \\\n    JHIPSTER_SLEEP=0\n\n# add directly the war\nADD *.war /app.war\n\nVOLUME /tmp\nEXPOSE 8761\nCMD echo \"The application will start in ${JHIPSTER_SLEEP}s...\" && \\\n    sleep ${JHIPSTER_SLEEP} && \\\n    java -Djava.security.egd=file:/dev/./urandom -jar /app.war\n"
        },
        "static_files": {
            "registry/src/main/resources/logback-spring.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<configuration scan=\"true\">\n    <include resource=\"org/springframework/boot/logging/logback/base.xml\"/>\n\n<!-- The FILE and ASYNC appenders are here as examples for a production configuration -->\n<!--\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <maxHistory>90</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>utf-8</charset>\n            <Pattern>%d %-5level [%thread] %logger{0}: %msg%n</Pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"ASYNC\" class=\"ch.qos.logback.classic.AsyncAppender\">\n        <queueSize>512</queueSize>\n        <appender-ref ref=\"FILE\"/>\n    </appender>\n-->\n\n    <logger name=\"io.github.jhipster.registry\" level=\"#logback.loglevel#\"/>\n\n    <logger name=\"io.github.jhipster\" level=\"DEBUG\"/>\n\n    <logger name=\"javax.activation\" level=\"WARN\"/>\n    <logger name=\"javax.mail\" level=\"WARN\"/>\n    <logger name=\"javax.xml.bind\" level=\"WARN\"/>\n    <logger name=\"ch.qos.logback\" level=\"WARN\"/>\n    <logger name=\"com.codahale.metrics\" level=\"WARN\"/>\n    <logger name=\"com.netflix\" level=\"WARN\"/>\n    <logger name=\"com.netflix.discovery\" level=\"INFO\"/>\n    <logger name=\"com.ryantenney\" level=\"WARN\"/>\n    <logger name=\"com.sun\" level=\"WARN\"/>\n    <logger name=\"com.zaxxer\" level=\"WARN\"/>\n    <logger name=\"io.undertow\" level=\"WARN\"/>\n    <logger name=\"io.undertow.websockets.jsr\" level=\"ERROR\"/>\n    <logger name=\"org.apache\" level=\"WARN\"/>\n    <logger name=\"org.apache.catalina.startup.DigesterFactory\" level=\"OFF\"/>\n    <logger name=\"org.bson\" level=\"WARN\"/>\n    <logger name=\"org.hibernate.validator\" level=\"WARN\"/>\n    <logger name=\"org.springframework\" level=\"WARN\"/>\n    <logger name=\"org.springframework.web\" level=\"WARN\"/>\n    <logger name=\"org.springframework.security\" level=\"WARN\"/>\n    <logger name=\"org.springframework.cache\" level=\"WARN\"/>\n    <logger name=\"org.xnio\" level=\"WARN\"/>\n    <logger name=\"springfox\" level=\"WARN\"/>\n    <logger name=\"sun.rmi\" level=\"WARN\"/>\n    <logger name=\"sun.net.www\" level=\"INFO\"/>\n    <logger name=\"sun.rmi.transport\" level=\"WARN\"/>\n\n    <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n        <resetJUL>true</resetJUL>\n    </contextListener>\n\n    <root level=\"#logback.loglevel#\">\n        <appender-ref ref=\"CONSOLE\"/>\n    </root>\n\n</configuration>\n"
        }
    },
    "project_structure": {
        "files": [
            "MongoDB.Dockerfile"
        ],
        "folders": [
            "scripts"
        ]
    }
}