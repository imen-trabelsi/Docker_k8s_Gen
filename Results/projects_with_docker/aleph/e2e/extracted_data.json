{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            "requirements.txt": "playwright==1.43.0\npytest-playwright==0.5.2\n"
        },
        "database": null,
        "build_system": "pip",
        "config_files": {
            "docker-compose.yml": "version: \"3.2\"\n\nservices:\n  postgres:\n    image: postgres:10.0\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n    environment:\n      POSTGRES_USER: aleph\n      POSTGRES_PASSWORD: aleph\n      POSTGRES_DATABASE: aleph\n\n  elasticsearch:\n    image: ghcr.io/alephdata/aleph-elasticsearch:3bb5dbed97cfdb9955324d11e5c623a5c5bbc410\n    hostname: elasticsearch\n    environment:\n      - discovery.type=single-node\n    volumes:\n      - elasticsearch-data:/usr/share/elasticsearch/data\n\n  redis:\n    image: redis:alpine\n    command: [ \"redis-server\", \"--save\", \"3600\", \"10\" ]\n    volumes:\n      - redis-data:/data\n\n  rabbitmq:\n    image: rabbitmq:3.9-management-alpine\n    ports:\n      - '127.0.0.1:5672:5672'\n      - '127.0.0.1:15672:15672'\n    volumes:\n      - rabbitmq-data:/var/lib/rabbitmq/\n      \n  ingest-file:\n    image: ghcr.io/alephdata/ingest-file:4.0.1\n    tmpfs:\n      - /tmp:mode=777\n    volumes:\n      - archive-data:/data\n    depends_on:\n      - postgres\n      - redis\n    restart: on-failure\n    env_file:\n      - aleph.env\n\n  worker:\n    image: ghcr.io/alephdata/aleph:${ALEPH_TAG:-4.0.2}\n    command: aleph worker\n    restart: on-failure\n    depends_on:\n      - postgres\n      - elasticsearch\n      - redis\n      - ingest-file\n    tmpfs:\n      - /tmp\n    volumes:\n      - archive-data:/data\n    env_file:\n      - aleph.env\n\n  shell:\n    image: ghcr.io/alephdata/aleph:${ALEPH_TAG:-4.0.2}\n    command: /bin/bash\n    depends_on:\n      - postgres\n      - elasticsearch\n      - redis\n      - ingest-file\n      - worker\n    tmpfs:\n      - /tmp\n    volumes:\n      - archive-data:/data\n      - \"./mappings:/aleph/mappings\"\n      - \"~:/host\"\n    env_file:\n      - aleph.env\n\n  api:\n    image: ghcr.io/alephdata/aleph:${ALEPH_TAG:-4.0.2}\n    expose:\n      - 8000\n    depends_on:\n      - postgres\n      - elasticsearch\n      - redis\n      - worker\n      - ingest-file\n    tmpfs:\n      - /tmp\n    volumes:\n      - archive-data:/data\n    env_file:\n      - aleph.env\n\n  ui:\n    image: ghcr.io/alephdata/aleph-ui-production:${ALEPH_TAG:-4.0.2}\n    depends_on:\n      - api\n    ports:\n      - \"8080:8080\"\n\nvolumes:\n  archive-data: {}\n  postgres-data: {}\n  redis-data: {}\n  elasticsearch-data: {}\n  rabbitmq-data: {}\n",
            "Dockerfile": "FROM python:3.9\nENV DEBIAN_FRONTEND noninteractive\n\n# build-essential\nRUN apt-get -qq -y update \\\n  && apt-get -qq --no-install-recommends -y install locales \\\n  postgresql-client jq python3-dev \\\n  && apt-get -qq -y autoremove \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\nENV LANG='en_US.UTF-8'\n\nRUN groupadd -g 1000 -r app \\\n  && useradd -m -u 1000 -s /bin/false -g app app\n\n# Install Python dependencies\nRUN pip3 install --no-cache-dir -q -U pip setuptools six\n\nCOPY requirements.txt /tmp/\nRUN pip3 install --no-cache-dir -q -r /tmp/requirements.txt\n\n# Install aleph\nCOPY . /aleph\nWORKDIR /aleph\nENV PYTHONPATH /aleph\nRUN pip install --no-cache-dir -q -e /aleph\n\nENV ALEPH_WORD_FREQUENCY_URI=https://public.data.occrp.org/develop/models/word-frequencies/word_frequencies-v0.4.1.zip\nENV ALEPH_FTM_COMPARE_MODEL_URI=https://public.data.occrp.org/develop/models/xref/glm_bernoulli_2e_wf-v0.4.1.pkl\nRUN mkdir -p /opt/ftm-compare/word-frequencies/ && \\\n  curl -L -o \"/opt/ftm-compare/word-frequencies/word-frequencies.zip\" \"$ALEPH_WORD_FREQUENCY_URI\" && \\\n  python3 -m zipfile --extract /opt/ftm-compare/word-frequencies/word-frequencies.zip /opt/ftm-compare/word-frequencies/ && \\\n  curl -L -o \"/opt/ftm-compare/model.pkl\" \"$ALEPH_FTM_COMPARE_MODEL_URI\"\n\n# Configure some docker defaults:\nENV ALEPH_ELASTICSEARCH_URI=http://elasticsearch:9200/ \\\n  ALEPH_DATABASE_URI=postgresql://aleph:aleph@postgres/aleph \\\n  FTM_STORE_URI=postgresql://aleph:aleph@postgres/aleph \\\n  REDIS_URL=redis://redis:6379/0 \\\n  ARCHIVE_TYPE=file \\\n  ARCHIVE_PATH=/data \\\n  FTM_COMPARE_FREQUENCIES_DIR=/opt/ftm-compare/word-frequencies/ \\\n  FTM_COMPARE_MODEL=/opt/ftm-compare/model.pkl\n\nRUN mkdir /run/prometheus\n\n# Run the green unicorn\nCMD gunicorn --config /aleph/gunicorn.conf.py --workers 6 --log-level debug --log-file -\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            ".prettierrc",
            "Dockerfile",
            "Dockerfile.production",
            "README.md",
            "craco.config.js",
            "nginx.conf",
            "package-lock.json",
            "package.json",
            "tsconfig.json"
        ],
        "folders": [
            "i18n",
            "public",
            "src"
        ]
    }
}