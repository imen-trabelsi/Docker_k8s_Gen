# Using Smaller Base Image with alpine and jdk 11
FROM eclipse-temurin:17-jammy

# Setting up Environment
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH "${JAVA_HOME}/bin:${PATH}"
ENV ENV_SIMULATOR_VERSION="7.5.0.11"
ENV MAX_JAVA_MEM_MB=0
ENV DEBIAN_FRONTEND noninteractive
ENV ALGORITHM_SUBSTITUTION_POLICY=SIMILAR_VARIABLES

WORKDIR /usr/local/app/vcell/

# Copying the application
COPY ./vcell-cli/target/vcell-cli-0.0.1-SNAPSHOT.jar ./

# Copy necessary files
COPY ./vcell-cli-utils/ ./installDir/python/vcell_cli_utils/
COPY ./localsolvers ./installDir/localsolvers
COPY ./nativelibs ./installDir/nativelibs
COPY ./docker_run.sh ./installDir/
COPY ./bionetgen/BNG2.pl ./bionetgen/*.txt ./bionetgen/VERSION ./installDir/bionetgen/
COPY ./bionetgen/Perl2 ./installDir/bionetgen/Perl2
COPY ./biosimulations_log4j2.xml ./installDir/

# Setting up the system
RUN mkdir -p lib && \

# Updating and installing required packages
USER root
RUN apt -y update && apt install -y software-properties-common
RUN apt install -y --no-install-recommends curl python3.10 python3-pip build-essential dnsutils apt-utils libfreetype6 fontconfig fonts-dejavu

# Setting up poetry
RUN python3 -m pip install poetry &&  poetry config cache-dir "/poetry/.cache"
ENV PATH="/root/.poetry/bin:/root/.local/bin:$PATH"
RUN cd /usr/local/app/vcell/installDir/python/vcell_cli_utils/ && \
poetry config cache-dir "/poetry/.cache" --local && \
chmod 755 poetry.toml && \

EXPOSE 1433

# Run the application
ENTRYPOINT ["/usr/local/app/vcell/installDir/docker_run.sh"]
CMD []
