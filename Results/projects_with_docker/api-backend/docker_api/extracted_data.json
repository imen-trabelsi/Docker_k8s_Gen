{
    "source_code_info": {
        "language": "PHP",
        "framework": "Symfony",
        "dependencies": {
            "composer.json": "{\n    \"type\": \"project\",\n    \"name\": \"reconmap/rest-api\",\n    \"description\": \"Reconmap REST API\",\n    \"license\": \"Apache-2.0\",\n    \"minimum-stability\": \"stable\",\n    \"prefer-stable\": true,\n    \"require\": {\n        \"ext-curl\": \"*\",\n        \"ext-dom\": \"*\",\n        \"ext-gd\": \"*\",\n        \"ext-intl\": \"*\",\n        \"ext-json\": \"*\",\n        \"ext-mbstring\": \"*\",\n        \"ext-mysqli\": \"*\",\n        \"ext-mysqlnd\": \"*\",\n        \"ext-redis\": \"*\",\n        \"ext-simplexml\": \"*\",\n        \"ext-zip\": \"*\",\n        \"firebase/php-jwt\": \"^v6.0\",\n        \"geoip2/geoip2\": \"~3.0\",\n        \"graylog2/gelf-php\": \"dev-master\",\n        \"guzzlehttp/guzzle\": \"^7.2\",\n        \"guzzlehttp/psr7\": \"^2.1\",\n        \"league/commonmark\": \"^2.0\",\n        \"league/html-to-markdown\": \"^5.0\",\n        \"league/route\": \"^6.0\",\n        \"monolog/monolog\": \"^3.0\",\n        \"netresearch/jsonmapper\": \"^5.0\",\n        \"php\": \"^8.4\",\n        \"phpoffice/phpword\": \"^1.0\",\n        \"ponup/sql-builders\": \"^1.0\",\n        \"reconmap/command-parsers\": \"^2.0\",\n        \"reconmap/shared-models\": \"^1.0\",\n        \"symfony/config\": \"^7.1\",\n        \"symfony/console\": \"^7\",\n        \"symfony/dependency-injection\": \"^7.1\",\n        \"symfony/filesystem\": \"^7\",\n        \"symfony/http-foundation\": \"^7.1\",\n        \"symfony/mailer\": \"^7\",\n        \"symfony/psr-http-message-bridge\": \"^7.1\",\n        \"twig/twig\": \"^3.0\",\n        \"zircote/swagger-php\": \"^5\",\n        \"symfony/routing\": \"^7.1\",\n        \"doctrine/annotations\": \"^2.0\"\n    },\n    \"autoload\": {\n        \"psr-4\": {\n            \"Reconmap\\\\\": \"src/\"\n        }\n    },\n    \"require-dev\": {\n        \"phpunit/phpunit\": \"^12\"\n    },\n    \"autoload-dev\": {\n        \"psr-4\": {\n            \"Reconmap\\\\\": \"tests/\"\n        }\n    },\n    \"repositories\": [\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/shared-models-lib\"\n        },\n        {\n            \"type\": \"path\",\n            \"url\": \"packages/command-parsers-lib\"\n        }\n    ]\n}\n"
        },
        "database": "MySQL",
        "build_system": "Composer",
        "config_files": {
            "docker-compose.yml": "services:\n\n  waiter:\n    container_name: rmap-waiter\n    build:\n      context: ./\n      dockerfile: docker/Dockerfile.waiter\n\n  redis:\n    container_name: rmap-redis\n    image: redis:7.4\n    command: redis-server --requirepass REconDIS\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - ./data-redis:/data\n\n  mysql:\n    container_name: rmap-mysql\n    image: quay.io/reconmap/rest-api-db:latest\n    build:\n      context: ./\n      dockerfile: docker/mysql/Dockerfile\n    volumes:\n      - ./data-mysql:/var/lib/mysql\n      - ./database:/docker-entrypoint-initdb.d:ro\n      - ./docker/mysql/overrides.cnf:/etc/mysql/conf.d/overrides.cnf:ro\n    ports:\n      - \"3306:3306\"\n    environment:\n      MYSQL_ROOT_PASSWORD: reconmuppet\n    healthcheck:\n      test: [ \"CMD\", \"mysqladmin\" ,\"ping\", \"-h\", \"localhost\" ]\n      timeout: 20s\n      retries: 10\n\n  keycloak:\n    image: quay.io/reconmap/keycloak-custom:latest\n    command: \"start --hostname=http://localhost:8080 --proxy-headers xforwarded --http-enabled true --import-realm\"\n    environment:\n      KEYCLOAK_ADMIN: admin\n      KEYCLOAK_ADMIN_PASSWORD: admin\n      KEYCLOAK_WELCOME_THEME: \"reconmap-theme\"\n      KEYCLOAK_DEFAULT_THEME: \"reconmap-theme\"\n      JAVA_OPTS_APPEND: \"\"\n      KC_DB_VENDOR: MYSQL\n      KC_DB: mysql\n      KC_DB_URL: 'jdbc:mysql://rmap-mysql/keycloak'\n      KC_DB_DATABASE: keycloak\n      KC_DB_USERNAME: keycloaker\n      KC_DB_PASSWORD: keycloaked\n      KC_LOG_LEVEL: INFO\n      VAR_ADMIN_CLI_SECRET: \"xxxxxxxxxxxxxxxxxxyyyyyyyyyyyyyy\"\n      VAR_WEB_CLIENT_URL: \"http://localhost:5500\"\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      mysql:\n        condition: service_healthy\n\n  api:\n    container_name: rmap-api\n    image: quay.io/reconmap/rest-api:latest\n    build:\n      context: ./\n      dockerfile: docker/api/Dockerfile\n    volumes:\n      - \"./config.json:/var/www/webapp/config.json\"\n      - \"./logs:/var/www/webapp/logs\"\n      - \"./data:/var/www/webapp/data\"\n      - \"./composer.json:/var/www/webapp/composer.json\"\n      - \"./composer.lock:/var/www/webapp/composer.lock\"\n      - \"./vendor:/var/www/webapp/vendor\"\n      - \"./public:/var/www/webapp/public\"\n      - \"./docs/openapi.yaml:/var/www/webapp/public/docs/openapi.yaml\"\n      - \"./docs/schemas/:/var/www/webapp/public/docs/schemas/\"\n      - \"./src:/var/www/webapp/src\"\n      - \"./packages:/var/www/webapp/packages\"\n      - \"./resources:/var/www/webapp/resources\"\n      - \"./tests:/var/www/webapp/tests\"\n      - \"./phpunit.xml.dist:/var/www/webapp/phpunit.xml.dist\"\n      - \"./run-tests.sh:/var/www/webapp/run-tests.sh\"\n      - \"./database:/var/www/webapp/database\"\n    ports:\n      - \"5510:5510\"\n    environment:\n      REDIS_HOST: redis\n      REDIS_PORT: 6379\n      REDIS_USER: default\n      REDIS_PASSWORD: REconDIS\n\n  agent:\n    container_name: rmap-agent\n    image: quay.io/reconmap/agent:latest\n    ports:\n      - \"5520:5520\"\n    environment:\n      RMAP_KEYCLOAK_HOSTNAME: \"http://keycloak:8080\"\n      RMAP_AGENT_CLIENT_ID: \"admin-cli\"\n      RMAP_AGENT_CLIENT_SECRET: \"xxxxxxxxxxxxxxxxxxyyyyyyyyyyyyyy\"\n      RMAP_REST_API_URL: \"http://api:5510\"\n      VALID_ORIGINS: http://localhost:5510\n      REDIS_HOST: redis\n      REDIS_PORT: 6379\n      REDIS_PASSWORD: REconDIS\n\n",
            "docker/api/Dockerfile": "FROM debian:bookworm-slim\n\nARG PHP_VERSION=8.4\nARG DEBIAN_FRONTEND=noninteractive\n\nARG HOST_UID\nARG HOST_GID\n\nRUN groupadd -g ${HOST_GID} reconmappers && \\\n    useradd -u ${HOST_UID} -g ${HOST_GID} -m -s /bin/bash reconmapper\n\nRUN apt-get update && apt-get upgrade -y --fix-missing\nRUN apt-get install -y wget unzip lsb-release\nRUN wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\nRUN echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" | tee /etc/apt/sources.list.d/php.list\nRUN apt-get update\nRUN apt-get install -y php${PHP_VERSION} php${PHP_VERSION}-cli php${PHP_VERSION}-fpm php${PHP_VERSION}-mysqlnd php${PHP_VERSION}-dom php${PHP_VERSION}-mbstring php${PHP_VERSION}-intl php${PHP_VERSION}-curl php${PHP_VERSION}-gd php${PHP_VERSION}-zip\nRUN apt-get install -y nginx\n\nRUN apt-get update && apt-get install -y php${PHP_VERSION}-dev php-pear && \\\n    pecl channel-update pecl.php.net && \\\n    pecl install redis && \\\n    bash -c \"echo extension=redis.so | tee /etc/php/${PHP_VERSION}/{fpm,cli}/conf.d/30-redis.ini > /dev/null\"\n\nRUN wget --no-verbose https://getcomposer.org/installer -O - -q | php -- --install-dir=/usr/local/bin/ --filename=composer --quiet\n\nRUN apt-get install -y cron\nCOPY docker/api/crontab.txt /tmp/crontab\nRUN crontab -u reconmapper /tmp/crontab && rm /tmp/crontab\n\nRUN sed -i \"s/;clear_env = no/clear_env = no/\" /etc/php/${PHP_VERSION}/fpm/pool.d/www.conf\nRUN rm /etc/nginx/sites-enabled/default\nCOPY docker/api/nginx/sites-enabled/* /etc/nginx/sites-enabled/\n\nRUN sed -i 's/upload_max_filesize = [[:digit:]]\\+M/upload_max_filesize = 20M/' /etc/php/${PHP_VERSION}/fpm/php.ini\nRUN sed -i 's/post_max_size = [[:digit:]]\\+M/post_max_size = 28M/' /etc/php/${PHP_VERSION}/fpm/php.ini\n\nRUN mkdir -p /var/www/webapp /var/www/webapp/data/vendor /var/www/webapp/data/attachments /var/www/webapp/data/cache /var/www/webapp/logs && \\\n    chown -R reconmapper:reconmappers /var/www/webapp\n\nRUN chmod -R a+w /var/www/webapp/logs\n\nWORKDIR /var/www/webapp\n\nCOPY composer.json composer.lock /var/www/webapp/\nCOPY packages/ /var/www/webapp/packages/\nCOPY src/ /var/www/webapp/src/\n\nRUN composer install --no-ansi --no-dev --no-interaction --no-plugins --no-progress --no-scripts --optimize-autoloader\n\nCOPY public /var/www/webapp/public\nCOPY database/ /var/www/webapp/database/\nCOPY docs/openapi.yaml /var/www/webapp/public/docs/openapi.yaml\nCOPY docs/schemas/ /var/www/webapp/public/docs/schemas/\nCOPY resources/ /var/www/webapp/resources/\n\nVOLUME /var/www/webapp\n\nCOPY docker/api/entrypoint.sh /entrypoint\n\nENTRYPOINT [\"/entrypoint\"]\nCMD nginx -g 'daemon off;' && bash\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "LICENSE",
            "Makefile",
            "composer.json",
            "composer.lock"
        ],
        "folders": [
            "src"
        ]
    }
}