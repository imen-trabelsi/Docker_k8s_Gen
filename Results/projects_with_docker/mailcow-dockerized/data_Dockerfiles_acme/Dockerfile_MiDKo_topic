# Base image
FROM alpine:3.20

# Maintainer Info
LABEL maintainer="maintainer@example.com"

# Install PHP and necessary packages
RUN apk upgrade --no-cache \
    && apk add --update --no-cache \
    bash \
    curl \
    openssl \
    bind-tools \
    jq \
    mariadb-client \
    redis \
    tini \
    tzdata \
    python3 \
    php7 \
    php7-fpm \
    php7-opcache \
    php7-gd \
    php7-mysqli \
    php7-zlib \

# Install acme-tiny from alpine edge community repository
RUN echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories \
    && apk add --no-cache acme-tiny@edge \

# Update the permissions of scripts
COPY acme.sh /srv/acme.sh
COPY functions.sh /srv/functions.sh
COPY obtain-certificate.sh /srv/obtain-certificate.sh
COPY reload-configurations.sh /srv/reload-configurations.sh
COPY expand6.sh /srv/expand6.sh
RUN chmod +x /srv/*.sh

# PHP config
RUN rm /etc/nginx/conf.d/default.conf
COPY docker/nginx/conf.d/ /etc/nginx/conf.d/

# Switch to non-root user
RUN addgroup -g 1000 www
RUN adduser -D -H -u 1000 -G www www

# Install composer
COPY --from=composer /usr/bin/composer /usr/bin/composer

# Create application directory
WORKDIR /var/www
COPY . /var/www

# Set ownership to the non-root user
RUN chown -R www:www /var/www

# Set working directory permissions
RUN chmod 755 /var/www

# Expose ports
EXPOSE 80 443

# Set the entrypoint with tini
ENTRYPOINT ["/sbin/tini", "-g", "--"]

# Set the execution command
CMD ["/srv/acme.sh"]
