# Define the base image
FROM node:16

# set working directory
WORKDIR /opt/streamer-ui-client

# add `/node_modules/.bin` to $PATH
ENV PATH /opt/streamer-ui-client/node_modules/.bin:$PATH
ENV NODE_ENV production

# install and cache node packages
COPY $pwd/packages/client/package.json ./
COPY $pwd/packages/client/yarn.lock ./
RUN yarn install
COPY $pwd/packages/client/.eslintrc.json ./
COPY $pwd/packages/client/*.less ./
COPY $pwd/packages/client/*.js ./
COPY $pwd/packages/client/src ./src
COPY $pwd/packages/client/public ./public
COPY $pwd/packages/client/tsconfig.json ./
RUN yarn build

# copy server files and set permissions for scripts
WORKDIR /opt/streamer-ui-server
COPY $pwd/packages/server/package.json ./
COPY $pwd/packages/server/yarn.lock ./
RUN yarn install
COPY $pwd/packages/server/purge-db.sh ./
COPY $pwd/packages/server/purge-all-db.sh ./
COPY $pwd/packages/server/start-server.sh ./
COPY $pwd/packages/server/start-cron.sh ./
RUN chmod +x purge-db.sh purge-all-db.sh start-server.sh start-cron.sh
COPY $pwd/packages/server/*.js ./
COPY $pwd/packages/server/bin ./bin
COPY $pwd/packages/server/routes ./routes
COPY $pwd/packages/server/config ./config
COPY $pwd/packages/server/cron/crontab /etc/cron.d/purge-db
RUN chmod +x /etc/cron.d/purge-db && crontab /etc/cron.d/purge-db

# install system dependencies
RUN ulimit -n 1024 && apt-get update && apt-get install -y cron curl supervisor

# copy supervisord configuration
COPY $pwd/packages/server/supervisord.conf ./

# copy frontend build
COPY --from=build /opt/streamer-ui-client/build /opt/streamer-ui-server/frontend

# initialize container
CMD ["/usr/bin/supervisord", "-c", "/opt/streamer-ui-server/supervisord.conf"]
