{
    "source_code_info": {
        "language": "Java",
        "framework": "Micronaut",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>pl.altkom.asc.lab.micronaut.poc</groupId>\n    <artifactId>pricing-service</artifactId>\n    <version>1.0</version>\n\n    <parent>\n        <groupId>io.micronaut</groupId>\n        <artifactId>micronaut-parent</artifactId>\n        <version>2.4.0</version>\n    </parent>\n\n    <properties>\n        <jdk.version>14</jdk.version>\n        <maven.compiler.target>${jdk.version}</maven.compiler.target>\n        <maven.compiler.source>${jdk.version}</maven.compiler.source>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <micronaut.version>2.4.0</micronaut.version>\n        <exec.mainClass>pl.altkom.asc.lab.micronaut.poc.pricing.PricingApplication</exec.mainClass>\n        <micronaut.data.version>2.3.1</micronaut.data.version>\n        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>\n        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>\n    </properties>\n\n    <repositories>\n        <repository>\n            <id>jcenter.bintray.com</id>\n            <url>https://jcenter.bintray.com</url>\n        </repository>\n    </repositories>\n\n    <dependencies>\n        <!-- LOMBOK -->\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <version>1.18.16</version>\n            <scope>provided</scope>\n        </dependency>\n        <!-- LOMBOK -->\n\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-inject</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-validation</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-http-server-netty</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-http-client</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-runtime</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-discovery-client</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut.sql</groupId>\n            <artifactId>micronaut-jdbc-hikari</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut.data</groupId>\n            <artifactId>micronaut-data-hibernate-jpa</artifactId>\n            <scope>compile</scope>\n        </dependency>\n\n\n        <!-- TRACING WITH ZIPKIN -->\n        <dependency>\n            <groupId>io.micronaut</groupId>\n            <artifactId>micronaut-tracing</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.zipkin.brave</groupId>\n            <artifactId>brave-instrumentation-http</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.zipkin.reporter2</groupId>\n            <artifactId>zipkin-reporter</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.opentracing.brave</groupId>\n            <artifactId>brave-opentracing</artifactId>\n            <scope>compile</scope>\n        </dependency>\n        <!-- TRACING WITH ZIPKIN -->\n\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <version>1.4.197</version>\n            <scope>runtime</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n            <version>1.2.3</version>\n            <scope>runtime</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mvel</groupId>\n            <artifactId>mvel2</artifactId>\n            <version>2.4.0.Final</version>\n        </dependency>\n\n        <dependency>\n            <groupId>pl.altkom.asc.lab.micronaut.poc</groupId>\n            <artifactId>pricing-service-api</artifactId>\n            <version>1.0</version>\n            <scope>compile</scope>\n        </dependency>\n\n        <!-- TEST -->\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-api</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.micronaut.test</groupId>\n            <artifactId>micronaut-test-junit5</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <!-- TEST -->\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>io.micronaut.build</groupId>\n                <artifactId>micronaut-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n                <configuration>\n                    <detail>true</detail>\n                    <includes>\n                        <include>%regex[.*]</include>\n                    </includes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n                <version>${maven-failsafe-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>integration-test</goal>\n                            <goal>verify</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <!-- Uncomment to enable incremental compilation -->\n                    <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->\n                    <annotationProcessorPaths>\n                        <path>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                            <version>1.18.16</version>\n                        </path>\n                        <path>\n                            <groupId>io.micronaut</groupId>\n                            <artifactId>micronaut-inject-java</artifactId>\n                            <version>${micronaut.version}</version>\n                        </path>\n                        <path>\n                            <groupId>io.micronaut</groupId>\n                            <artifactId>micronaut-validation</artifactId>\n                            <version>${micronaut.version}</version>\n                        </path>\n                        <path>\n                            <groupId>io.micronaut.data</groupId>\n                            <artifactId>micronaut-data-processor</artifactId>\n                            <version>${micronaut.data.version}</version>\n                        </path>\n                    </annotationProcessorPaths>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>test-compile</id>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                        <configuration>\n                            <annotationProcessorPaths>\n                                <path>\n                                    <groupId>org.projectlombok</groupId>\n                                    <artifactId>lombok</artifactId>\n                                    <version>1.18.16</version>\n                                </path>\n                                <path>\n                                    <groupId>io.micronaut</groupId>\n                                    <artifactId>micronaut-inject-java</artifactId>\n                                    <version>${micronaut.version}</version>\n                                </path>\n                                <path>\n                                    <groupId>io.micronaut</groupId>\n                                    <artifactId>micronaut-validation</artifactId>\n                                    <version>${micronaut.version}</version>\n                                </path>\n                                <path>\n                                    <groupId>io.micronaut.data</groupId>\n                                    <artifactId>micronaut-data-processor</artifactId>\n                                    <version>${micronaut.data.version}</version>\n                                </path>\n                            </annotationProcessorPaths>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '2'\n\nservices:\n  jsreport:\n    image: jsreport/jsreport\n    container_name: jsreport\n    hostname: jsreport\n    ports:\n      - 5488:5488\n  consul:\n    image: consul\n    container_name: consul\n    network_mode: host\n  zipkin:\n    image: openzipkin/zipkin\n    container_name: zipkin\n    network_mode: host\n  mongo:\n    image: mongo\n    container_name: mongo\n    network_mode: host\n  kafkaserver:\n    image: \"spotify/kafka:latest\"\n    container_name: kafka\n    hostname: localhost\n    network_mode: host\n    ports:\n      - 2181:2181\n      - 9092:9092\n    environment:\n      ADVERTISED_HOST: localhost\n      ADVERTISED_PORT: 9092\n  kafka_manager:\n    image: \"mzagar/kafka-manager-docker:1.3.3.4\"\n    container_name: kafkamanager\n    network_mode: host\n    ports:\n      - 9000:9000\n    environment:\n      ZK_HOSTS: \"localhost:2181\"\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2\n    container_name: elasticsearch\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n        - 9200:9200\n  mn-documents-service:\n    build: ./documents-service\n    image: mn-documents-service\n    container_name: mn-documents-service\n    network_mode: host\n  mn-policy-service:\n    build: ./policy-service\n    image: mn-policy-service\n    container_name: mn-policy-service\n    network_mode: host\n  mn-policy-search-service:\n    build: ./policy-search-service\n    image: mn-policy-search-service\n    container_name: mn-policy-search-service\n    network_mode: host\n  mn-pricing-service:\n    build: ./pricing-service\n    image: mn-pricing-service\n    container_name: mn-pricing-service\n    network_mode: host\n  mn-payment-service:\n    build: ./payment-service\n    image: mn-payment-service\n    container_name: mn-payment-service\n    network_mode: host\n  mn-product-service:\n    build: ./product-service\n    image: mn-product-service\n    container_name: mn-product-service\n    network_mode: host\n  mn-auth-service:\n    build: ./auth-service\n    image: mn-auth-service\n    container_name: mn-auth-service\n    network_mode: host\n  mn-chat-service:\n    build: ./chat-service\n    image: mn-chat-service\n    container_name: mn-chat-service\n    network_mode: host\n  mn-dashboard-service:\n    build: ./dashboard-service\n    image: mn-dashboard-service\n    container_name: mn-dashboard-service\n    network_mode: host\n  mn-agent-portal-gateway:\n    build: ./agent-portal-gateway\n    image: mn-agent-portal-gateway\n    container_name: mn-agent-portal-gateway\n    network_mode: host\n  mn-web-vue:\n    build: ./web-vue\n    image: mn-web-vue\n    container_name: mn-web-vue\n    network_mode: host\n",
            "pricing-service/Dockerfile": "FROM adoptopenjdk/openjdk14:jre-14.0.2_12-alpine\n#jre-14.0.2_12-alpine doesn't have curl in our packages\n#RUN apk --no-cache add curl\nCOPY target/pricing-service*.jar pricing-service.jar\nCMD java ${JAVA_OPTS} -jar pricing-service.jar\n",
            "azure-pipelines.yml": "pool:\n  vmImage: 'macos-10.15'\n\nvariables:\n  tag: '$(build.buildId)'\n\nsteps:\n- script: docker login -u $(dockerId) -p $(dockerPass)\n  displayName: \"docker login\"\n- script: |\n    echo \"##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_14_X64)\"\n    echo \"##vso[task.setvariable variable=PATH]$(JAVA_HOME_14_X64)/bin:$(PATH)\"\n  displayName: \"Set java version\"\n- task: NodeTool@0\n  inputs:\n    versionSpec: 10.16.3\n# Maven build\n- task: ShellScript@2\n  inputs:\n    scriptPath: 'build-without-tests.sh'\n# agent-portal-gateway\n- script: docker build -t $(dockerNamespace)/agent-portal-gateway agent-portal-gateway\n  displayName: 'docker build agent-portal-gateway'\n- script: docker tag $(dockerNamespace)/agent-portal-gateway $(dockerNamespace)/agent-portal-gateway:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/agent-portal-gateway:$(tag)'\n- script: docker push $(dockerNamespace)/agent-portal-gateway:$(tag)\n  displayName: 'docker push $(dockerNamespace)/agent-portal-gateway:$(tag)'\n- script: docker push $(dockerNamespace)/agent-portal-gateway:latest\n  displayName: 'docker push $(dockerNamespace)/agent-portal-gateway:latest'\n# auth-service\n- script: docker build -t $(dockerNamespace)/auth-service auth-service\n  displayName: 'docker build auth-service'\n- script: docker tag $(dockerNamespace)/auth-service $(dockerNamespace)/auth-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/auth-service:$(tag)'\n- script: docker push $(dockerNamespace)/auth-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/auth-service:$(tag)'\n- script: docker push $(dockerNamespace)/auth-service:latest\n  displayName: 'docker push $(dockerNamespace)/auth-service:latest'\n# chat-service\n- script: docker build -t $(dockerNamespace)/chat-service chat-service\n  displayName: 'docker build chat-service'\n- script: docker tag $(dockerNamespace)/chat-service $(dockerNamespace)/chat-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/chat-service:$(tag)'\n- script: docker push $(dockerNamespace)/chat-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/chat-service:$(tag)'\n- script: docker push $(dockerNamespace)/chat-service:latest\n  displayName: 'docker push $(dockerNamespace)/chat-service:latest'\n# documents-service\n- script: docker build -t $(dockerNamespace)/documents-service documents-service\n  displayName: 'docker build documents-service'\n- script: docker tag $(dockerNamespace)/documents-service $(dockerNamespace)/documents-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/documents-service:$(tag)'\n- script: docker push $(dockerNamespace)/documents-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/documents-service:$(tag)'\n- script: docker push $(dockerNamespace)/documents-service:latest\n  displayName: 'docker push $(dockerNamespace)/documents-service:latest'\n  # dashboard-service\n- script: docker build -t $(dockerNamespace)/dashboard-service dashboard-service\n  displayName: 'docker build dashboard-service'\n- script: docker tag $(dockerNamespace)/dashboard-service $(dockerNamespace)/dashboard-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/dashboard-service:$(tag)'\n- script: docker push $(dockerNamespace)/dashboard-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/dashboard-service:$(tag)'\n- script: docker push $(dockerNamespace)/dashboard-service:latest\n  displayName: 'docker push $(dockerNamespace)/dashboard-service:latest'\n# payment-service\n- script: docker build -t $(dockerNamespace)/payment-service payment-service\n  displayName: 'docker build payment-service'\n- script: docker tag $(dockerNamespace)/payment-service $(dockerNamespace)/payment-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/payment-service:$(tag)'\n- script: docker push $(dockerNamespace)/payment-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/payment-service:$(tag)'\n- script: docker push $(dockerNamespace)/payment-service:latest\n  displayName: 'docker push $(dockerNamespace)/payment-service:latest'\n# policy-search-service\n- script: docker build -t $(dockerNamespace)/policy-search-service policy-search-service\n  displayName: 'docker build policy-search-service'\n- script: docker tag $(dockerNamespace)/policy-search-service $(dockerNamespace)/policy-search-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/policy-search-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-search-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/policy-search-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-search-service:latest\n  displayName: 'docker push $(dockerNamespace)/policy-search-service:latest'\n# policy-service\n- script: docker build -t $(dockerNamespace)/policy-service policy-service\n  displayName: 'docker build policy-service'\n- script: docker tag $(dockerNamespace)/policy-service $(dockerNamespace)/policy-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/policy-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/policy-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-service:latest\n  displayName: 'docker push $(dockerNamespace)/policy-service:latest'\n# pricing-service\n- script: docker build -t $(dockerNamespace)/pricing-service pricing-service\n  displayName: 'docker build pricing-service'\n- script: docker tag $(dockerNamespace)/pricing-service $(dockerNamespace)/pricing-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/pricing-service:$(tag)'\n- script: docker push $(dockerNamespace)/pricing-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/pricing-service:$(tag)'\n- script: docker push $(dockerNamespace)/pricing-service:latest\n  displayName: 'docker push $(dockerNamespace)/pricing-service:latest'\n# product-service\n- script: docker build -t $(dockerNamespace)/product-service product-service\n  displayName: 'docker build product-service'\n- script: docker tag $(dockerNamespace)/product-service $(dockerNamespace)/product-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/product-service:$(tag)'\n- script: docker push $(dockerNamespace)/product-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/product-service:$(tag)'\n- script: docker push $(dockerNamespace)/product-service:latest\n  displayName: 'docker push $(dockerNamespace)/product-service:latest'\n# web-vue\n- script: docker build -t $(dockerNamespace)/web-vue web-vue\n  displayName: 'docker build web-vue'\n- script: docker tag $(dockerNamespace)/web-vue $(dockerNamespace)/web-vue:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/web-vue:$(tag)'\n- script: docker push $(dockerNamespace)/web-vue:$(tag)\n  displayName: 'docker push $(dockerNamespace)/web-vue:$(tag)'\n- script: docker push $(dockerNamespace)/web-vue:latest\n  displayName: 'docker push $(dockerNamespace)/web-vue:latest'\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "micronaut-cli.yml",
            "mvnw",
            "mvnw.cmd",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}