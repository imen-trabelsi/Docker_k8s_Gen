{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"asclab-micronaut-poc\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\",\n    \"lint\": \"vue-cli-service lint\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.18.1\",\n    \"bootstrap-vue\": \"^2.0.2\",\n    \"chart.js\": \"^2.8.0\",\n    \"dotenv\": \"^6.0.0\",\n    \"font-awesome\": \"~4.7.0\",\n    \"moment\": \"^2.24.0\",\n    \"underscore\": \"^1.9.1\",\n    \"vue\": \"^2.5.16\",\n    \"vue-chartjs\": \"^3.4.2\",\n    \"vue-resource\": \"^1.5.1\",\n    \"vue-router\": \"^3.0.1\",\n    \"vue-underscore\": \"^0.1.4\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"^3.11.0\",\n    \"@vue/cli-plugin-eslint\": \"^3.0.0-rc.10\",\n    \"@vue/cli-service\": \"^3.11.0\",\n    \"node-sass\": \"^4.9.2\",\n    \"sass-loader\": \"^7.0.3\",\n    \"vue-template-compiler\": \"^2.5.16\"\n  },\n  \"eslintConfig\": {\n    \"root\": true,\n    \"env\": {\n      \"node\": true\n    },\n    \"extends\": [\n      \"plugin:vue/essential\",\n      \"eslint:recommended\"\n    ],\n    \"rules\": {\n      \"no-console\": \"off\"\n    },\n    \"parserOptions\": {\n      \"parser\": \"babel-eslint\"\n    }\n  },\n  \"postcss\": {\n    \"plugins\": {\n      \"autoprefixer\": {}\n    }\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"last 2 versions\",\n    \"not ie <= 8\"\n  ]\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '2'\n\nservices:\n  jsreport:\n    image: jsreport/jsreport\n    container_name: jsreport\n    hostname: jsreport\n    ports:\n      - 5488:5488\n  consul:\n    image: consul\n    container_name: consul\n    network_mode: host\n  zipkin:\n    image: openzipkin/zipkin\n    container_name: zipkin\n    network_mode: host\n  mongo:\n    image: mongo\n    container_name: mongo\n    network_mode: host\n  kafkaserver:\n    image: \"spotify/kafka:latest\"\n    container_name: kafka\n    hostname: localhost\n    network_mode: host\n    ports:\n      - 2181:2181\n      - 9092:9092\n    environment:\n      ADVERTISED_HOST: localhost\n      ADVERTISED_PORT: 9092\n  kafka_manager:\n    image: \"mzagar/kafka-manager-docker:1.3.3.4\"\n    container_name: kafkamanager\n    network_mode: host\n    ports:\n      - 9000:9000\n    environment:\n      ZK_HOSTS: \"localhost:2181\"\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2\n    container_name: elasticsearch\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    ports:\n        - 9200:9200\n  mn-documents-service:\n    build: ./documents-service\n    image: mn-documents-service\n    container_name: mn-documents-service\n    network_mode: host\n  mn-policy-service:\n    build: ./policy-service\n    image: mn-policy-service\n    container_name: mn-policy-service\n    network_mode: host\n  mn-policy-search-service:\n    build: ./policy-search-service\n    image: mn-policy-search-service\n    container_name: mn-policy-search-service\n    network_mode: host\n  mn-pricing-service:\n    build: ./pricing-service\n    image: mn-pricing-service\n    container_name: mn-pricing-service\n    network_mode: host\n  mn-payment-service:\n    build: ./payment-service\n    image: mn-payment-service\n    container_name: mn-payment-service\n    network_mode: host\n  mn-product-service:\n    build: ./product-service\n    image: mn-product-service\n    container_name: mn-product-service\n    network_mode: host\n  mn-auth-service:\n    build: ./auth-service\n    image: mn-auth-service\n    container_name: mn-auth-service\n    network_mode: host\n  mn-chat-service:\n    build: ./chat-service\n    image: mn-chat-service\n    container_name: mn-chat-service\n    network_mode: host\n  mn-dashboard-service:\n    build: ./dashboard-service\n    image: mn-dashboard-service\n    container_name: mn-dashboard-service\n    network_mode: host\n  mn-agent-portal-gateway:\n    build: ./agent-portal-gateway\n    image: mn-agent-portal-gateway\n    container_name: mn-agent-portal-gateway\n    network_mode: host\n  mn-web-vue:\n    build: ./web-vue\n    image: mn-web-vue\n    container_name: mn-web-vue\n    network_mode: host\n",
            "web-vue/Dockerfile": "FROM nginx\nMAINTAINER ASC-LAB\n\nENV \\\n    GATEWAY_URL=${GATEWAY_URL:-http://localhost:8081} \\\n    AUTH_URL=${AUTH_URL:-http://localhost:8090}\n\nCOPY ./dist /usr/share/nginx/html\n\nCOPY ./nginx-app.conf /etc/nginx/conf.d/default.tmpl\n\nCOPY entrypoint.sh /\n\nENTRYPOINT [\"/entrypoint.sh\"]\n",
            "azure-pipelines.yml": "pool:\n  vmImage: 'macos-10.15'\n\nvariables:\n  tag: '$(build.buildId)'\n\nsteps:\n- script: docker login -u $(dockerId) -p $(dockerPass)\n  displayName: \"docker login\"\n- script: |\n    echo \"##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_14_X64)\"\n    echo \"##vso[task.setvariable variable=PATH]$(JAVA_HOME_14_X64)/bin:$(PATH)\"\n  displayName: \"Set java version\"\n- task: NodeTool@0\n  inputs:\n    versionSpec: 10.16.3\n# Maven build\n- task: ShellScript@2\n  inputs:\n    scriptPath: 'build-without-tests.sh'\n# agent-portal-gateway\n- script: docker build -t $(dockerNamespace)/agent-portal-gateway agent-portal-gateway\n  displayName: 'docker build agent-portal-gateway'\n- script: docker tag $(dockerNamespace)/agent-portal-gateway $(dockerNamespace)/agent-portal-gateway:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/agent-portal-gateway:$(tag)'\n- script: docker push $(dockerNamespace)/agent-portal-gateway:$(tag)\n  displayName: 'docker push $(dockerNamespace)/agent-portal-gateway:$(tag)'\n- script: docker push $(dockerNamespace)/agent-portal-gateway:latest\n  displayName: 'docker push $(dockerNamespace)/agent-portal-gateway:latest'\n# auth-service\n- script: docker build -t $(dockerNamespace)/auth-service auth-service\n  displayName: 'docker build auth-service'\n- script: docker tag $(dockerNamespace)/auth-service $(dockerNamespace)/auth-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/auth-service:$(tag)'\n- script: docker push $(dockerNamespace)/auth-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/auth-service:$(tag)'\n- script: docker push $(dockerNamespace)/auth-service:latest\n  displayName: 'docker push $(dockerNamespace)/auth-service:latest'\n# chat-service\n- script: docker build -t $(dockerNamespace)/chat-service chat-service\n  displayName: 'docker build chat-service'\n- script: docker tag $(dockerNamespace)/chat-service $(dockerNamespace)/chat-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/chat-service:$(tag)'\n- script: docker push $(dockerNamespace)/chat-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/chat-service:$(tag)'\n- script: docker push $(dockerNamespace)/chat-service:latest\n  displayName: 'docker push $(dockerNamespace)/chat-service:latest'\n# documents-service\n- script: docker build -t $(dockerNamespace)/documents-service documents-service\n  displayName: 'docker build documents-service'\n- script: docker tag $(dockerNamespace)/documents-service $(dockerNamespace)/documents-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/documents-service:$(tag)'\n- script: docker push $(dockerNamespace)/documents-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/documents-service:$(tag)'\n- script: docker push $(dockerNamespace)/documents-service:latest\n  displayName: 'docker push $(dockerNamespace)/documents-service:latest'\n  # dashboard-service\n- script: docker build -t $(dockerNamespace)/dashboard-service dashboard-service\n  displayName: 'docker build dashboard-service'\n- script: docker tag $(dockerNamespace)/dashboard-service $(dockerNamespace)/dashboard-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/dashboard-service:$(tag)'\n- script: docker push $(dockerNamespace)/dashboard-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/dashboard-service:$(tag)'\n- script: docker push $(dockerNamespace)/dashboard-service:latest\n  displayName: 'docker push $(dockerNamespace)/dashboard-service:latest'\n# payment-service\n- script: docker build -t $(dockerNamespace)/payment-service payment-service\n  displayName: 'docker build payment-service'\n- script: docker tag $(dockerNamespace)/payment-service $(dockerNamespace)/payment-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/payment-service:$(tag)'\n- script: docker push $(dockerNamespace)/payment-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/payment-service:$(tag)'\n- script: docker push $(dockerNamespace)/payment-service:latest\n  displayName: 'docker push $(dockerNamespace)/payment-service:latest'\n# policy-search-service\n- script: docker build -t $(dockerNamespace)/policy-search-service policy-search-service\n  displayName: 'docker build policy-search-service'\n- script: docker tag $(dockerNamespace)/policy-search-service $(dockerNamespace)/policy-search-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/policy-search-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-search-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/policy-search-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-search-service:latest\n  displayName: 'docker push $(dockerNamespace)/policy-search-service:latest'\n# policy-service\n- script: docker build -t $(dockerNamespace)/policy-service policy-service\n  displayName: 'docker build policy-service'\n- script: docker tag $(dockerNamespace)/policy-service $(dockerNamespace)/policy-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/policy-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/policy-service:$(tag)'\n- script: docker push $(dockerNamespace)/policy-service:latest\n  displayName: 'docker push $(dockerNamespace)/policy-service:latest'\n# pricing-service\n- script: docker build -t $(dockerNamespace)/pricing-service pricing-service\n  displayName: 'docker build pricing-service'\n- script: docker tag $(dockerNamespace)/pricing-service $(dockerNamespace)/pricing-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/pricing-service:$(tag)'\n- script: docker push $(dockerNamespace)/pricing-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/pricing-service:$(tag)'\n- script: docker push $(dockerNamespace)/pricing-service:latest\n  displayName: 'docker push $(dockerNamespace)/pricing-service:latest'\n# product-service\n- script: docker build -t $(dockerNamespace)/product-service product-service\n  displayName: 'docker build product-service'\n- script: docker tag $(dockerNamespace)/product-service $(dockerNamespace)/product-service:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/product-service:$(tag)'\n- script: docker push $(dockerNamespace)/product-service:$(tag)\n  displayName: 'docker push $(dockerNamespace)/product-service:$(tag)'\n- script: docker push $(dockerNamespace)/product-service:latest\n  displayName: 'docker push $(dockerNamespace)/product-service:latest'\n# web-vue\n- script: docker build -t $(dockerNamespace)/web-vue web-vue\n  displayName: 'docker build web-vue'\n- script: docker tag $(dockerNamespace)/web-vue $(dockerNamespace)/web-vue:$(tag)\n  displayName: 'docker tag $(dockerNamespace)/web-vue:$(tag)'\n- script: docker push $(dockerNamespace)/web-vue:$(tag)\n  displayName: 'docker push $(dockerNamespace)/web-vue:$(tag)'\n- script: docker push $(dockerNamespace)/web-vue:latest\n  displayName: 'docker push $(dockerNamespace)/web-vue:latest'\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "micronaut-cli.yml",
            "mvnw",
            "mvnw.cmd",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}