{
    "source_code_info": {
        "language": "Go",
        "framework": "Gin",
        "dependencies": {
            "go.mod": "module github.com/CovenantSQL/CovenantSQL\n\ngo 1.13\n\nrequire (\n\tbazil.org/fuse v0.0.0-20180421153158-65cc252bf669\n\tcloud.google.com/go v0.40.0 // indirect\n\tgithub.com/CovenantSQL/HashStablePack v2.0.1-0.20190327095521-90c11134d028+incompatible\n\tgithub.com/CovenantSQL/beacon v0.0.0-20190521023351-8402bfe07ece\n\tgithub.com/CovenantSQL/go-sqlite3-encrypt v1.9.1-0.20190621093938-dc98560308ab\n\tgithub.com/CovenantSQL/sqlparser v0.0.0-20190618091803-c4a6cf6cebb6\n\tgithub.com/allegro/bigcache v1.2.1 // indirect\n\tgithub.com/apoydence/onpar v0.0.0-20190519213022-ee068f8ea4d1 // indirect\n\tgithub.com/aristanetworks/goarista v0.0.0-20190607111240-52c2a7864a08 // indirect\n\tgithub.com/btcsuite/btcd v0.0.0-20190614013741-962a206e94e9\n\tgithub.com/btcsuite/btcutil v0.0.0-20190425235716-9e5f4b9a998d\n\tgithub.com/cenkalti/backoff v2.2.1+incompatible // indirect\n\tgithub.com/cyberdelia/go-metrics-graphite v0.0.0-20161219230853-39f87cc3b432\n\tgithub.com/davecgh/go-spew v1.1.1\n\tgithub.com/deckarep/golang-set v1.7.1 // indirect\n\tgithub.com/derekstavis/go-qs v0.0.0-20180720192143-9eef69e6c4e7\n\tgithub.com/dghubble/go-twitter v0.0.0-20190512073027-53f972dc4b06 // indirect\n\tgithub.com/dghubble/gologin v2.1.0+incompatible\n\tgithub.com/dghubble/oauth1 v0.5.0\n\tgithub.com/dghubble/sling v1.2.0\n\tgithub.com/ethereum/go-ethereum v1.8.27\n\tgithub.com/fortytw2/leaktest v1.3.0\n\tgithub.com/gin-contrib/cors v1.3.0\n\tgithub.com/gin-contrib/sse v0.1.0 // indirect\n\tgithub.com/gin-gonic/gin v1.4.0\n\tgithub.com/go-gorp/gorp v2.0.1-0.20180226155812-4df78490a9aa+incompatible\n\tgithub.com/go-playground/locales v0.12.1 // indirect\n\tgithub.com/go-playground/universal-translator v0.16.0 // indirect\n\tgithub.com/google/go-github v17.0.0+incompatible\n\tgithub.com/google/go-querystring v1.0.0 // indirect\n\tgithub.com/gopherjs/gopherjs v0.0.0-20190430165422-3e4dfb77656c // indirect\n\tgithub.com/gorilla/handlers v1.4.0\n\tgithub.com/gorilla/mux v1.7.2\n\tgithub.com/gorilla/websocket v1.4.0\n\tgithub.com/hashicorp/golang-lru v0.5.1\n\tgithub.com/ivpusic/grpool v1.0.0\n\tgithub.com/jmoiron/jsonq v0.0.0-20150511023944-e874b168d07e\n\tgithub.com/jordwest/mock-conn v0.0.0-20180617021051-4896c6bd1641\n\tgithub.com/jtolds/gls v4.20.0+incompatible // indirect\n\tgithub.com/juju/errors v0.0.0-20190207033735-e65537c515d7 // indirect\n\tgithub.com/juju/loggo v0.0.0-20190526231331-6e530bcce5d8 // indirect\n\tgithub.com/juju/testing v0.0.0-20190723135506-ce30eb24acd2 // indirect\n\tgithub.com/konsorten/go-windows-terminal-sequences v1.0.2 // indirect\n\tgithub.com/leodido/go-urn v1.1.0 // indirect\n\tgithub.com/lufia/iostat v0.0.0-20170605150913-9f7362b77ad3\n\tgithub.com/mattn/go-isatty v0.0.8 // indirect\n\tgithub.com/minio/blake2b-simd v0.0.0-20160723061019-3f5f724cb5b1\n\tgithub.com/mohae/deepcopy v0.0.0-20170929034955-c48cc78d4826\n\tgithub.com/philhofer/fwd v1.0.0 // indirect\n\tgithub.com/pingcap/check v0.0.0-20190102082844-67f458068fc8 // indirect\n\tgithub.com/pkg/errors v0.8.1\n\tgithub.com/poy/onpar v0.0.0-20190519213022-ee068f8ea4d1 // indirect\n\tgithub.com/prometheus/client_golang v1.0.1-0.20190623115659-7c68e7286a5c\n\tgithub.com/prometheus/client_model v0.0.0-20190129233127-fd36f4220a90\n\tgithub.com/prometheus/common v0.6.0\n\tgithub.com/prometheus/procfs v0.0.2\n\tgithub.com/rakyll/statik v0.1.6\n\tgithub.com/rcrowley/go-metrics v0.0.0-20181016184325-3113b8401b8a\n\tgithub.com/rs/cors v1.6.0 // indirect\n\tgithub.com/satori/go.uuid v1.2.1-0.20181028125025-b2ce2384e17b\n\tgithub.com/siddontang/go v0.0.0-20180604090527-bdc77568d726 // indirect\n\tgithub.com/siddontang/go-log v0.0.0-20190221022429-1e957dd83bed // indirect\n\tgithub.com/siddontang/go-mysql v0.0.0-20181028041111-76c059e36c62\n\tgithub.com/sirupsen/logrus v1.4.2\n\tgithub.com/smartystreets/assertions v0.0.0-20190401211740-f487f9de1cd3 // indirect\n\tgithub.com/smartystreets/goconvey v0.0.0-20170602164621-9e8dc3f972df\n\tgithub.com/sourcegraph/jsonrpc2 v0.0.0-20190106185902-35a74f039c6a\n\tgithub.com/syndtr/goleveldb v1.0.0\n\tgithub.com/tchap/go-patricia v2.3.0+incompatible\n\tgithub.com/ugorji/go v1.1.4\n\tgithub.com/xo/dburl v0.0.0-20190203050942-98997a05b24f\n\tgithub.com/xo/tblfmt v0.0.0-20190609041254-28c54ec42ce8 // indirect\n\tgithub.com/xo/usql v0.7.4\n\tgithub.com/xtaci/smux v1.3.4-0.20190522035559-79b3c96b84d1\n\tgithub.com/zserge/metric v0.1.1-0.20190429132510-b0b64cb7bfea\n\tgo.opencensus.io v0.22.0 // indirect\n\tgolang.org/x/crypto v0.0.0-20190621222207-cc06ce4a13d4\n\tgolang.org/x/net v0.0.0-20190620200207-3b0461eec859 // indirect\n\tgolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45\n\tgolang.org/x/sys v0.0.0-20210820121016-41cdb8703e55\n\tgoogle.golang.org/appengine v1.6.1 // indirect\n\tgoogle.golang.org/genproto v0.0.0-20190620144150-6af8c5fc6601 // indirect\n\tgoogle.golang.org/grpc v1.21.1 // indirect\n\tgopkg.in/go-playground/validator.v9 v9.29.0\n\tgopkg.in/gorp.v2 v2.0.1-0.20180226155812-4df78490a9aa\n\tgopkg.in/mgo.v2 v2.0.0-20190816093944-a6b53ec6cb22 // indirect\n\tgopkg.in/natefinch/npipe.v2 v2.0.0-20160621034901-c1b8fa8bdcce // indirect\n\tgopkg.in/yaml.v2 v2.2.2\n)\n\nreplace github.com/siddontang/go-mysql v0.0.0-20181028041111-76c059e36c62 => github.com/CovenantSQL/go-mysql v0.0.0-20181119032421-d8fba0f23b9b\n"
        },
        "database": "MySQL",
        "build_system": "go mod",
        "config_files": {
            "docker-compose.yml": "version: '3'\n\nservices:\n  covenantsql_bp_0:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_bp_0\n    restart: always\n    ports:\n      - '11099:4661'\n      - '12099:4665'\n    environment:\n      COVENANT_ROLE: blockproducer\n      COVENANT_CONF: ./node_0/config.yaml\n      METRIC_WEB_ADDR: '0.0.0.0:4665'\n    volumes:\n      - ./test/service/node_0/:/app/node_0/\n    networks:\n      default:\n        ipv4_address: 172.254.1.2\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_bp_1:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_bp_1\n    restart: always\n    ports:\n      - '11100:4661'\n      - '12100:4665'\n    environment:\n      COVENANT_ROLE: blockproducer\n      COVENANT_CONF: ./node_1/config.yaml\n      METRIC_WEB_ADDR: '0.0.0.0:4665'\n    volumes:\n      - ./test/service/node_1/:/app/node_1/\n    networks:\n      default:\n        ipv4_address: 172.254.1.3\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_bp_2:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_bp_2\n    restart: always\n    ports:\n      - '11101:4661'\n      - '12101:4665'\n    environment:\n      COVENANT_ROLE: blockproducer\n      COVENANT_CONF: ./node_2/config.yaml\n      METRIC_WEB_ADDR: '0.0.0.0:4665'\n    volumes:\n      - ./test/service/node_2/:/app/node_2/\n    networks:\n      default:\n        ipv4_address: 172.254.1.4\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_miner_0:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_miner_0\n    restart: always\n    ports:\n      - '11102:4661'\n      - '12102:4665'\n    environment:\n      COVENANT_ROLE: miner\n      COVENANT_CONF: ./node_miner_0/config.yaml\n      METRIC_WEB_ADDR: '0.0.0.0:4665'\n    volumes:\n      - ./test/service/node_miner_0/:/app/node_miner_0/\n    networks:\n      default:\n        ipv4_address: 172.254.1.5\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_miner_1:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_miner_1\n    restart: always\n    ports:\n      - '11103:4661'\n      - '12103:4665'\n    environment:\n      COVENANT_ROLE: miner\n      COVENANT_CONF: ./node_miner_1/config.yaml\n      METRIC_WEB_ADDR: '0.0.0.0:4665'\n    volumes:\n      - ./test/service/node_miner_1/:/app/node_miner_1/\n    networks:\n      default:\n        ipv4_address: 172.254.1.6\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_miner_2:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_miner_2\n    restart: always\n    ports:\n      - '11104:4661'\n      - '12104:4665'\n    environment:\n      COVENANT_ROLE: miner\n      COVENANT_CONF: ./node_miner_2/config.yaml\n      METRIC_WEB_ADDR: '0.0.0.0:4665'\n    volumes:\n      - ./test/service/node_miner_2/:/app/node_miner_2/\n    networks:\n      default:\n        ipv4_address: 172.254.1.7\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_adapter:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_adapter\n    restart: always\n    ports:\n      - '11105:4661'\n    environment:\n      COVENANT_ROLE: adapter\n      COVENANT_CONF: ./node_adapter/config.yaml\n      COVENANTSQL_ADAPTER_ADDR: 0.0.0.0:4661\n    volumes:\n      - ./test/service/node_adapter/:/app/node_adapter/\n    networks:\n      default:\n        ipv4_address: 172.254.1.8\n  covenantsql_mysql_adapter:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_mysql_adapter\n    restart: always\n    ports:\n      - '11107:4664'\n    command: ['-listen', '0.0.0.0:4664']\n    environment:\n      COVENANT_ROLE: mysql-adapter\n      COVENANT_CONF: ./node_mysql_adapter/config.yaml\n    volumes:\n      - ./test/service/node_mysql_adapter/:/app/node_mysql_adapter/\n    networks:\n      default:\n        ipv4_address: 172.254.1.10\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '1m'\n        max-file: '10'\n  covenantsql_explorer:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_explorer\n    restart: always\n    ports:\n      - '11108:4663'\n    environment:\n      COVENANT_ROLE: explorer\n      COVENANT_CONF: ./node_explorer/config.yaml\n      COVENANTSQL_OBSERVER_ADDR: 0.0.0.0:4663\n    volumes:\n      - ./test/service/node_explorer/:/app/node_explorer/\n    networks:\n      default:\n        ipv4_address: 172.254.1.9\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '10m'\n  covenantsql_fn_0:\n    image: covenantsql/covenantsql:latest\n    container_name: covenantsql_fn_0\n    restart: always\n    ports:\n      - '11110:8546'\n    command: ['-wsapi', ':8546']\n    # entrypoint: [\"sh\"]\n    environment:\n      COVENANT_ROLE: blockproducer\n      COVENANT_CONF: ./fullnode_0/config.yaml\n    volumes:\n      - ./test/service/fullnode_0/:/app/fullnode_0/\n    networks:\n      default:\n        ipv4_address: 172.254.1.11\n    logging:\n      driver: 'json-file'\n      options:\n        max-size: '10m'\n\nnetworks:\n  default:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.254.1.0/24\n",
            "docker/Dockerfile": "# Stage: all runner\nFROM alpine:3.9\n\nARG COMMIT\nARG VERSION\n\nLABEL \\\n    name=\"covenantsql\" \\\n    homepage=\"https://github.com/CovenantSQL/CovenantSQL.git\" \\\n    maintainer=\"qi.xiao@covenantsql.io\" \\\n    authors=\"CovenantSQL Team\" \\\n    commit=\"${COMMIT}\" \\\n    version=\"${VERSION}\"\n\nENV VERSION=${VERSION}\nENV COVENANT_ROLE=miner\nENV COVENANT_CONF=config.yaml\n\nRUN apk --no-cache add ca-certificates icu-libs musl\n\nWORKDIR /app\nCOPY --from=covenantsql/covenantsql-builder /go/src/github.com/CovenantSQL/CovenantSQL/bin/* /app/\nENTRYPOINT [ \"./docker-entry.sh\" ]\nEXPOSE 4661\n",
            ".gitlab-ci.yml": "image: covenantsql/build\n\nstages:\n  - build\n  - test\n  - cleanup\n\nvariables:\n  REVIEWDOG_VERSION: 0.9.11\n  REVIEWDOG_GITLAB_API_TOKEN: $REVIEWDOG_TOKEN\n  CODECOV_TOKEN: $CODECOV_TOKEN\n  UNITTESTTAGS: linux sqlite_omit_load_extension\n  CACHE_DIR: /CovenantSQL_bins\n  PIPELINE_CACHE: $CACHE_DIR/$CI_PIPELINE_IID\n  BIN_CACHE: $CACHE_DIR/$CI_PIPELINE_IID/bin\n  PREV_VERSION: v0.8.0\n  # gitlabci bins: 192.168.2.100:/data/CovenantSQL_bins\n\nbefore_script:\n  # Setup dependency management tool\n  #  - curl -L -s https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 -o $GOPATH/bin/dep\n  #  - chmod +x $GOPATH/bin/dep\n  #  - go get github.com/mattn/goveralls\n  #  - go get github.com/haya14busa/goverage\n  #  - go get github.com/golang/lint/golint\n  #  - go get github.com/haya14busa/reviewdog/cmd/reviewdog\n  #  - go get github.com/wadey/gocovmerge\n  - mkdir -p $GOPATH/src/github.com/CovenantSQL\n  - cp -r /builds/thunderdb/CovenantSQL $GOPATH/src/github.com/CovenantSQL/\n  - cd $GOPATH/src/github.com/CovenantSQL/CovenantSQL\n  #  - dep ensure\n  - mkdir -p ~/bin/ && export PATH=\"~/bin/:$PATH\"\n  - ulimit -n 8192\n#  - curl -fSL https://github.com/haya14busa/reviewdog/releases/download/$REVIEWDOG_VERSION/reviewdog_linux_amd64 -o ~/bin/reviewdog && chmod +x ~/bin/reviewdog\n\nbuild:\n  stage: build\n  script:\n    - set -x\n    - make clean\n    - make use_all_cores\n    - mkdir -p ${BIN_CACHE}\n    - cp -r bin/* ${BIN_CACHE}/\n\nunit-test:\n  stage: test\n  script: \n    - make clean\n    - cp -r ${BIN_CACHE}/* bin/\n    - ./alltest.sh\n\ntestnet-compatibility:\n  stage: test\n  script:\n    - set -o errexit\n    - set -o pipefail\n    - commit=$(git rev-parse --short HEAD)\n    - branch=$(git branch -rv |grep $commit | awk '{print $1}')\n    - if [[ $branch =~ \"/beta_\" ]]; then exit 0; fi\n    - make clean\n    - cp -r ${BIN_CACHE}/* bin/\n    - go test -tags \"$UNITTESTTAGS\" -bench=^BenchmarkTestnetMiner2$ -benchtime=5s -run ^$ ./cmd/cql-minerd/\n    - set -x\n    - ./test/testnet_client/run.sh\n\nold-client-compatibility:\n  stage: test\n  script:\n    - set -o errexit\n    - set -o pipefail\n    - set -x\n    - commit=$(git rev-parse --short HEAD)\n    - branch=$(git branch -rv |grep $commit | awk '{print $1}')\n    - if [[ $branch =~ \"/beta_\" ]]; then exit 0; fi\n    - make clean\n    - cp -r ${BIN_CACHE}/* bin/\n    - ./test/compatibility/specific_old.sh client\n\nold-bp-compatibility:\n  stage: test\n  script:\n    - set -o errexit\n    - set -o pipefail\n    - set -x\n    - commit=$(git rev-parse --short HEAD)\n    - branch=$(git branch -rv |grep $commit | awk '{print $1}')\n    - if [[ $branch =~ \"/beta_\" ]]; then exit 0; fi\n    - make clean\n    - cp -r ${BIN_CACHE}/* bin/\n    - ./test/compatibility/specific_old.sh bp\n\nold-miner-compatibility:\n  stage: test\n  script:\n    - set -o errexit\n    - set -o pipefail\n    - set -x\n    - commit=$(git rev-parse --short HEAD)\n    - branch=$(git branch -rv |grep $commit | awk '{print $1}')\n    - if [[ $branch =~ \"/beta_\" ]]; then exit 0; fi\n    - make clean\n    - cp -r ${BIN_CACHE}/* bin/\n    - ./test/compatibility/specific_old.sh miner\n\ncleanup_cache:\n  stage: cleanup\n  script:\n    - rm -r ${PIPELINE_CACHE}\n  when: on_success\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "build.sh"
        ],
        "folders": []
    }
}