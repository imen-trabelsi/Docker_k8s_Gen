{
    "docker_info": {
        "base_image": "\"$LINUX_IMAGE_NAME:$LINUX_IMAGE_TAG\"",
        "multi_stage_build": false,
        "exposed_ports": [],
        "user": [],
        "labels": [
            "maintainer=\"daos@daos.groups.io\""
        ],
        "health_checks": [],
        "build_args": [
            "LINUX_IMAGE_NAME=\"\"",
            "LINUX_IMAGE_TAG=\"\"",
            "BUST_CACHE=\"\"",
            "DAOS_REPOS=\"\"",
            "DAOS_GPG_KEYS=\"\"",
            "DAOS_REPOS_NOAUTH=\"\"",
            "DAOS_VERSION=\"\"",
            "DAOS_CLIENT_UNAME=\"\"",
            "DAOS_CLIENT_UID=\"\"",
            "DAOS_CLIENT_GNAME=\"\"",
            "DAOS_CLIENT_GID=\"\""
        ],
        "envs": [],
        "copy_instructions": [],
        "execution": [
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/usr/bin/bash\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"-i\"]"
                ]
            }
        ],
        "run": [
            [
                "dnf clean all &&                                                                           \\",
                "dnf makecache &&",
                "dnf --assumeyes install dnf-plugins-core &&",
                "dnf config-manager --save --setopt=assumeyes=True &&",
                "dnf config-manager --save --setopt=fastestmirror=True &&",
                "dnf config-manager --set-enabled powertools &&",
                "dnf install epel-release &&",
                "dnf update &&",
                "dnf clean all"
            ],
            [
                "for it in DAOS_REPOS DAOS_GPG_KEYS DAOS_VERSION ; do                                       \\",
                "if eval \"[[ -z \\$$it ]]\" ; then",
                "echo \"[ERROR] Docker build argument $it is not defined\" ;",
                "exit 1 ;",
                "fi ;",
                "done &&",
                "if [ -n \"$BUST_CACHE\" ] ; then",
                "echo \"[INFO] Busting cache\" ;",
                "dnf update ;",
                "fi &&",
                "for repo in ${DAOS_REPOS} ; do",
                "echo \"[INFO] Adding rpm repository: $repo\" ;",
                "dnf config-manager --add-repo \"$repo\" ;",
                "done &&",
                "for gpg_key in ${DAOS_GPG_KEYS} ; do",
                "echo \"[INFO] Adding repositories gpg key: $gpg_key\" ;",
                "rpmkeys --import \"$gpg_key\" ;",
                "done &&",
                "for repo in ${DAOS_REPOS_NOAUTH} ; do",
                "echo \"[INFO] Disabling authentication for repository: $repo\" ;",
                "dnf config-manager --save --setopt=\"${repo}.gpgcheck=0\" ;",
                "done &&",
                "echo \"[INFO] Installing DAOS\" ;",
                "dnf install",
                "daos-${DAOS_VERSION} &&",
                "dnf clean all"
            ],
            [
                "for it in DAOS_CLIENT_UNAME DAOS_CLIENT_UID DAOS_CLIENT_GNAME DAOS_CLIENT_GID ; do         \\",
                "if eval \"[[ -z \\$$it ]]\" ; then",
                "echo \"[ERROR] Docker build argument $it is not defined\" ;",
                "exit 1 ;",
                "fi ;",
                "done &&",
                "if ! getent group ${DAOS_CLIENT_GNAME} > /dev/null 2>&1; then",
                "echo \"[INFO] Adding DAOS client group ${DAOS_CLIENT_GNAME}\" ;",
                "groupadd -g ${DAOS_CLIENT_GID} ${DAOS_CLIENT_GNAME} ;",
                "fi &&",
                "if ! getent passwd ${DAOS_CLIENT_UNAME} > /dev/null 2>&1; then",
                "echo \"[INFO] Adding DAOS client user ${DAOS_CLIENT_UNAME}\" ;",
                "useradd -g ${DAOS_CLIENT_GID} -u ${DAOS_CLIENT_UID} ${DAOS_CLIENT_UNAME} ;",
                "fi"
            ]
        ]
    }
}