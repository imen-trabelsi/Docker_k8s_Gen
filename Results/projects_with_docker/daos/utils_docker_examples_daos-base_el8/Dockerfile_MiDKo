# Start with the Linux base image
ARG LINUX_IMAGE_NAME=""
ARG LINUX_IMAGE_TAG=""
FROM "$LINUX_IMAGE_NAME:$LINUX_IMAGE_TAG"

# Defining build arguments
ARG BUST_CACHE=""
ARG DAOS_REPOS=""
ARG DAOS_GPG_KEYS=""
ARG DAOS_REPOS_NOAUTH=""
ARG DAOS_VERSION=""
ARG DAOS_CLIENT_UNAME=""
ARG DAOS_CLIENT_UID=""
ARG DAOS_CLIENT_GNAME=""
ARG DAOS_CLIENT_GID=""

# Label
LABEL maintainer="daos@daos.groups.io"

# Install software and dependencies
RUN dnf clean all && \
    dnf makecache && \
    dnf --assumeyes install dnf-plugins-core && \
    dnf config-manager --save --setopt=assumeyes=True && \
    dnf config-manager --save --setopt=fastestmirror=True && \
    dnf config-manager --set-enabled powertools && \
    dnf install epel-release && \
    dnf update && \

# Check if arguments are defined
RUN for it in DAOS_REPOS DAOS_GPG_KEYS DAOS_VERSION ; do \
    if eval "[[ -z \$$it ]]";then \
        echo "[ERROR] Docker build argument $it is not defined";exit 1;\
    fi;\

# Bust cache if the argument is defined
RUN if [ -n "$BUST_CACHE" ];then \

# Add RPM repositories and their keys
RUN for repo in ${DAOS_REPOS};do \
RUN for gpg_key in ${DAOS_GPG_KEYS};do \

# Disable auth for certain repositories
RUN for repo in ${DAOS_REPOS_NOAUTH};do \

# Install DAOS
RUN dnf install daos-${DAOS_VERSION} && dnf clean all

# Check if client arguments are defined
RUN for it in DAOS_CLIENT_UNAME DAOS_CLIENT_UID DAOS_CLIENT_GNAME DAOS_CLIENT_GID ; do \
    if eval "[[ -z \$$it ]]"; then \
        echo "[ERROR] Docker build argument $it is not defined";exit 1;\
    fi;\

# Add a new client group and user
RUN if ! getent group ${DAOS_CLIENT_GNAME} > /dev/null 2>&1;then \
RUN if ! getent passwd ${DAOS_CLIENT_UNAME} > /dev/null 2>&1;then \

# Copy the necessary files
COPY . .

# Set the working directory
WORKDIR .

# Set entrypoint and CMD instructions
ENTRYPOINT ["/usr/bin/bash"]
CMD ["-i"]
