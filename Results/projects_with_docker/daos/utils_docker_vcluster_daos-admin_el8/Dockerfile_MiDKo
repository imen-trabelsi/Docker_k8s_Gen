# Set the base image
FROM "${DAOS_DOCKER_IMAGE_NSP}/daos-base-${LINUX_DISTRO}:$DAOS_DOCKER_IMAGE_TAG"

# Set the maintainer attribute
LABEL maintainer="daos@daos.groups.io"

# Set working directory
WORKDIR /app

# Copy necessary files
COPY requirements.txt utils/docker/vcluster/.env utils/docker/vcluster/docker-compose.yml utils/docker/vcluster/daos-admin/el8/Dockerfile Jenkinsfile ./

# Copy instructions
COPY daos_control.yml.in /tmp/daos_control.yml.in

# Build dependencies
RUN pip install --no-cache-dir -r requirements.txt 

# Security and version validation
RUN for it in DAOS_VERSION ; do\
 if eval "[[ -z \$$it ]]" ; then\
 echo "[ERROR] Docker build argument $it is not defined" ;\
 exit 1 ;\
 fi ;\
 done &&\
 dnf install daos-admin-${DAOS_VERSION} &&\
 dnf clean all\
 for it in DAOS_AUTH ; do\
 if eval "[[ -z \$$it ]]" ; then\
 echo "[ERROR] Docker build argument $it is not defined" ;\
 exit 1 ;\
 fi ;\

RUN if [ "$DAOS_AUTH" == "yes" ] ; then\
 sed --regexp-extended\
 --expression '/^@DAOS_NOAUTH_BEGIN@$/,/^@DAOS_NOAUTH_END@/d'\
 --expression '/(^@DAOS_AUTH_BEGIN@$)|(^@DAOS_AUTH_END@$)/d'\
 /tmp/daos_control.yml.in > /etc/daos/daos_control.yml &&\
 chmod 644 /root/daosCA/certs/daosCA.crt &&\
 chmod 644 /root/daosCA/certs/admin.crt &&\
 chmod 400 /root/daosCA/certs/admin.key &&\
 chown root:root /root/daosCA/certs/daosCA.crt &&\
 chown root:root /root/daosCA/certs/admin.crt &&\
 chown root:root /root/daosCA/certs/admin.key &&\
 mv /root/daosCA/certs/daosCA.crt /etc/daos/certs/. &&\
 mv /root/daosCA/certs/admin.crt /etc/daos/certs/. &&\
 mv /root/daosCA/certs/admin.key /etc/daos/certs/. &&\
 rm -fr /root/daosCA ;\
 else\
 sed --regexp-extended\
 --expression '/^@DAOS_AUTH_BEGIN@$/,/^@DAOS_AUTH_END@/d'\
 --expression '/(^@DAOS_NOAUTH_BEGIN@$)|(^@DAOS_NOAUTH_END@$)/d'\
 /tmp/daos_control.yml.in > /etc/daos/daos_control.yml ; fi &&\

# Command to run the application
CMD ["python", "-m", "flask", "run", "--host=0.0.0.0"]
