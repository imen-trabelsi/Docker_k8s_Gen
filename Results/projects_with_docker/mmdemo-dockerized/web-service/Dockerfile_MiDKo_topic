# Use ubuntu:xenial base image
FROM ubuntu:xenial

# Update all system packages
RUN apt-get update && apt-get -y upgrade

# Install dependencies mentioned in the Run Commands
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install apache2 php7.0-dev libapache2-mod-php7.0 php7.0-mcrypt php7.0-gd libxml2 php-pear php-apcu php7.0-curl curl lynx-cur memcached php-memcached libcurl4-openssl-dev pkg-config libssl-dev apt-utils python python-dev python-pip php-zip

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Enable necessary Apache2 and PHP modules, install Python dependencies
RUN a2enmod php7.0
RUN a2enmod rewrite
RUN phpenmod mcrypt
RUN a2enmod headers
RUN pip install requests
RUN pecl install mongodb

# Set Error Reporting and Variable Order in PHP.ini file
RUN sed -i "s/error_reporting = .*$/error_reporting = E_ERROR | E_WARNING | E_PARSE/" /etc/php/7.0/apache2/php.ini
RUN sed -i "s/variables_order.*/variables_order = \"EGPCS\"/g" /etc/php/7.0/apache2/php.ini
RUN echo "extension=mongodb.so" >> /etc/php/7.0/apache2/php.ini && echo "extension=mongodb.so" >> /etc/php/7.0/cli/php.ini

# Copy necessary files to the specified directories
COPY site /var/www/site
COPY apache-config.conf /etc/apache2/sites-enabled/000-default.conf
COPY auto_cache.py /
COPY run.sh /
RUN chmod +x /run.sh

# Set the corresponding environment variables
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2.pid

# Expose port 80
EXPOSE 80

# Set the command to run
CMD ["sh", "/run.sh"]
