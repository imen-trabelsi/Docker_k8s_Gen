{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>distributed-session-greetings</artifactId>\n    <packaging>jar</packaging>\n\n    <parent>\n        <groupId>org.tsdes.advanced.security.distributedsession</groupId>\n        <artifactId>distributed-session</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n\n\n\n    <dependencies>\n\n        <dependency>\n            <groupId>org.tsdes.advanced.security.distributedsession</groupId>\n            <artifactId>distributed-session-user-service-dto</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-security</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.session</groupId>\n            <artifactId>spring-session-data-redis</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-redis</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jcl-over-slf4j</artifactId>\n        </dependency>\n\n\n\n        <!-- test -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.rest-assured</groupId>\n            <artifactId>rest-assured</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.github.tomakehurst</groupId>\n            <artifactId>wiremock-standalone</artifactId>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <finalName>greetings</finalName>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n\n\n</project>"
        },
        "database": "Redis",
        "build_system": "Maven",
        "config_files": {
            "advanced/security/distributed-session/docker-compose.yml": "version: '3.3'\n\nservices:\n\n  # \"Redis is an open-source in-memory database project implementing a distributed,\n  # in-memory key-value store with optional durability.\"\n  # We use it here to store session tokens, in a way in which all services can\n  # quickly access it for authentication purposes.\n  # Think about it like a hash-map that you can access remotely.\n  redis:\n    image: \"redis:latest\"\n\n\n  # Having 2 different services (\"auth\" and \"user-service\") accessing a SQL database.\n  # Those must be different running instances.\n  # Different services should not access the same database (apart from Redis dealing\n  # with distributed session tokens).\n  auth-db:\n    image: \"postgres:10\"\n\n  user-service-db:\n    image: \"postgres:10\"\n\n\n  scg:\n    build:\n      context: ./ds-scg\n      dockerfile: Dockerfile\n    ports:\n      - \"80:8080\"\n    depends_on:\n      - redis\n\n\n  user-service:\n    build:\n      context: ./ds-user-service\n      dockerfile: Dockerfile\n    depends_on:\n      - redis\n      - user-service-db\n\n  greetings:\n    build:\n      context: ./ds-greetings\n      dockerfile: Dockerfile\n    depends_on:\n      - redis\n      - user-service\n\n  auth:\n    build:\n      context: ./ds-auth\n      dockerfile: Dockerfile\n    depends_on:\n    - redis\n    - auth-db",
            "advanced/security/distributed-session/ds-greetings/Dockerfile": "FROM adoptopenjdk/openjdk11:alpine\n\nCOPY target/greetings.jar .\n\nCMD java -jar greetings.jar"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}