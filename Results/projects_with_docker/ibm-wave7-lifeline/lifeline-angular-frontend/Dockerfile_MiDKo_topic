# Use the NodeJS 12.2.0 LTS image as the base image
FROM node:12.2.0 as builder

# Install Maven
RUN apt-get update && apt-get install -y maven

# Set the working directory to /app
WORKDIR /app

# Copy the package.json file to the /app directory
COPY package.json /app/package.json

# Install any dependencies
RUN npm install
RUN npm install -g @angular/cli@8.2.2
RUN npm install jspdf --save

# Add the node_modules folder to the $PATH variable
ENV PATH /app/node_modules/.bin:$PATH

# Copy the rest of the application to the /app directory
COPY . /app

# Build the Spring Boot application
RUN mvn clean install

# --- start of production image ---
# From the builder image, copy the compiled Java app to the production image
FROM java:8-jdk-alpine as production

# Maven command to start the application
ENTRYPOINT ["java", "-jar", "target/myapp.jar"]

# Expose port 8080 to the host machine
EXPOSE 8080

# The command that starts the Spring Boot application
CMD ng serve --host 0.0.0.0 --publicHost lifeline.stackroute.io

# Handle Chrome dependencies
RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
RUN sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
RUN apt-get update && apt-get install -yq google-chrome-stable

# Copy the jar file into the image
