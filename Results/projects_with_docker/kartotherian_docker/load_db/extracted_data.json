{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            "pyproject.toml": "[tool.black]\nline-length = 100\ntarget-version = ['py36']\ninclude = '''\n    exec.py\n  | /import_data/tasks/\n'''\n"
        },
        "database": null,
        "build_system": "poetry",
        "config_files": {
            "load_db/config.yml": "generated_files_dir: /data/generated\ndata_dir: /data/input\nupdate_tiles_dir: /data/update_tiles_data\n",
            "docker-compose.yml": "version: '3'\n\nservices:\n  postgres:\n    # Custom image maintained by openmaptiles in https://github.com/openmaptiles/openmaptiles-tools\n    # Based on postgres:9.6 and includes PostGIS and osml10n extensions\n    image: openmaptiles/postgis:latest@sha256:dc9eb0a534366197b5f187771846aab3dae1368d44d77378cdd5f4412007f31c\n    volumes:\n      - \"pgdata:/var/lib/postgresql/data\"\n    ports:\n      - \"5632:5432\"\n    environment:\n     - POSTGRES_DB=gis\n     - POSTGRES_USER=gis\n     - POSTGRES_PASSWORD=gis\n\n  cassandra:\n    image: cassandra:3\n    volumes:\n     - \"cassandra_data:/var/lib/cassandra\"\n\n  tilerator:\n    build:\n      context: .\n      dockerfile: tilerator/Dockerfile\n    depends_on:\n      - cassandra\n      - postgres\n      - redis\n    environment:\n      - TILERATOR_MODE=api # This service will not process tiles\n    volumes:\n      - update_tiles_data:/data/update_tiles_data\n\n  tilerator-worker:\n    build:\n      context: .\n      dockerfile: tilerator/Dockerfile\n    environment:\n      - TILERATOR_NUM_WORKERS=ncpu # Number of workers (or ncpu by default)\n    depends_on:\n      - cassandra\n      - postgres\n      - redis\n\n  redis:\n    image: redis:latest\n    command: redis-server --appendonly yes # to enable persistence\n    volumes:\n      - \"redisdata:/data\"\n\n  load_db:\n    build:\n      context: .\n      dockerfile: load_db/Dockerfile\n    read_only: true\n    environment:\n      - INVOKE_GENERATED_FILES_DIR=/data/generated\n      - INVOKE_DATA_DIR=/data/input\n      - INVOKE_UPDATE_TILES_DIR=/data/update_tiles_data\n    tmpfs:\n      - /tmp\n    volumes:\n      - input_data:/data/input\n      - imposm_generated_data:/data/generated\n      - update_tiles_data:/data/update_tiles_data\n    depends_on:\n      - postgres\n\n  kartotherian:\n    build:\n      context: .\n      dockerfile: kartotherian/Dockerfile\n\n  telegraf:\n    build:\n      context: .\n      dockerfile: telegraf/Dockerfile\n\nvolumes:\n  pgdata:\n  cassandra_data:\n  redisdata:\n  input_data:\n  imposm_generated_data:\n  update_tiles_data:\n",
            "load_db/Dockerfile": "FROM python:3.8-bullseye\n\nENV MAIN_DIR=/srv\n\nRUN apt-get update && \\\n    apt-get upgrade -y openssl && \\\n    apt-get install -y --no-install-recommends \\\n        git \\\n        unzip \\\n        curl \\\n        osmctools \\\n        gdal-bin \\\n        postgis \\\n        postgresql-client \\\n        jq \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget https://github.com/omniscale/imposm3/releases/download/v0.11.1/imposm-0.11.1-linux-x86-64.tar.gz \\\n    && tar xvfz imposm-0.11.1-linux-x86-64.tar.gz \\\n    && ln -sf /imposm-0.11.1-linux-x86-64/imposm /usr/local/bin/imposm3 \\\n    && wget -O /usr/local/bin/pgfutter https://github.com/lukasmartinelli/pgfutter/releases/download/v1.2/pgfutter_linux_amd64 \\\n    && chmod +x /usr/local/bin/pgfutter \\\n    && pip install pipenv\n\n# install openmaptiles\nCOPY openmaptiles /opt/openmaptiles\nCOPY import_data ${MAIN_DIR}/import_data\n\nRUN mkdir -p ${MAIN_DIR}/imposm \\\n    && mkdir -p ${MAIN_DIR}/import_data/imposm/\n\n# needed for sql script, else the BOM in the file makes the query impossible\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN cd ${MAIN_DIR}/import_data \\\n    && pipenv install --system --deploy\n\nRUN python3 -m pip install git+https://github.com/openmaptiles/openmaptiles-tools\n\n# generate imposm files \\\nRUN mkdir -p ${MAIN_DIR}/tilerator \\\n    && ln -s ${MAIN_DIR}/import_data/* ${MAIN_DIR}/imposm/ \\\n    && cd /opt/openmaptiles \\\n    && rm -f /usr/bin/python3 \\\n    && ln -s `which python3.8` /usr/bin/python3 \\\n    && CONFIG_DIR=${MAIN_DIR} make qwant\n\nWORKDIR ${MAIN_DIR}/import_data\n\nCOPY load_db/import_data.sh ./import_data.sh\nCOPY load_db/config.yml ./config.yml\nRUN chmod +x ./import_data.sh\n\nENTRYPOINT [\"./import_data.sh\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "config.api.yaml",
            "config.worker.yaml",
            "gen_tiles.sh",
            "runserver.sh",
            "sources.yaml"
        ],
        "folders": []
    }
}