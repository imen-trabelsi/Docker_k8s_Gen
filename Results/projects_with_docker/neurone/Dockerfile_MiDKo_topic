# Set the base image
FROM phusion/passenger-customizable:2.0.0

# Set environment variables
ENV NVM_DIR /nvm
ENV NODE_VERSION 8.17.0
ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
ENV LOCAL_USER_NAME user
ENV LOCAL_USER_ID 9001
ENV HOME /home/user
ENV PATH $PATH:$HOME/.meteor
ENV TOOL_NODE_FLAGS --optimize_for_size --max_old_space_size=1536 --gc_interval=100
ENV NODE_TLS_REJECT_UNAUTHORIZED 0
ENV NEURONE_ASSET_PATH /assets
ENV HTTP_FORWARDED_COUNT 1

# Update system and install dependencies
RUN rm /bin/sh && ln -s /bin/bash /bin/sh \
    && apt-get -qq update \
    && apt-get -qq --no-install-recommends install wget curl ca-certificates libarchive-tools unzip make gcc python python-dev \
    && mkdir -p $NVM_DIR \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default \

# Add necessary files
COPY ./.deploy/docker/createUser.sh /tmp/createUser.sh
COPY . ./src

# Run createUser script
RUN chmod +x /tmp/createUser.sh && ./tmp/createUser.sh

# Set user privileges
RUN mkdir -p /app && chown -R $LOCAL_USER_NAME:$LOCAL_USER_NAME /app
WORKDIR /app
RUN chown -R $LOCAL_USER_NAME:$LOCAL_USER_NAME ./src

# Copy necessary files
RUN cp ./src/.deploy/docker/neurone.conf /etc/nginx/sites-enabled/neurone.conf \
    && cp ./src/.deploy/docker/meteor-env.conf /etc/nginx/main.d/meteor-env.conf \
    && cp ./src/.deploy/docker/meteorBuild.sh ./meteorBuild.sh \
    && cp ./src/.deploy/docker/fixPermissions.sh ./fixPermissions.sh \
    && chmod +x ./meteorBuild.sh \
    && chmod +x ./fixPermissions.sh \

# Set up assets and permissions
RUN mkdir -p /assets
RUN ./fixPermissions.sh /assets $LOCAL_USER_NAME

# Clean up
RUN rm -f /etc/nginx/sites-enabled/default \
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Set up exposed ports
EXPOSE 80

# Set the default command to execute when creating a new container
CMD ["/sbin/my_init"]
