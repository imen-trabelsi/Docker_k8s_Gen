{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"porta\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/3scale/porta\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"scripts\": {\n    \"dev\": \"webpack serve --config ./config/webpack/development.config.js --progress\",\n    \"build\": \"webpack --config ./config/webpack/production.config.js --progress\",\n    \"install:safe\": \"yarn install --frozen-lockfile --check-files --prefer-offline\",\n    \"clean\": \"rm -rf node_modules/ && yarn cache clean\",\n    \"lint\": \"eslint --ext .js,.jsx,.ts,.tsx .\",\n    \"ci:lint\": \"eslint --ext .js,.jsx,.ts,.tsx . --quiet\"\n  },\n  \"engines\": {\n    \"node\": \"18\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"7.21.8\",\n    \"@babel/preset-env\": \"^7.24.8\",\n    \"@babel/preset-react\": \"^7.24.7\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.56.0\",\n    \"@typescript-eslint/parser\": \"^5.56.0\",\n    \"@webpack-cli/serve\": \"2.0.5\",\n    \"@wojtekmaj/enzyme-adapter-react-17\": \"^0.8.0\",\n    \"empty\": \"^0.10.1\",\n    \"enzyme\": \"^3.11.0\",\n    \"enzyme-to-json\": \"^3.4.2\",\n    \"eslint\": \"7.32.0\",\n    \"eslint-import-resolver-typescript\": \"2.7.1\",\n    \"eslint-loader\": \"^4.0.2\",\n    \"eslint-plugin-import\": \"^2.26.0\",\n    \"eslint-plugin-jest\": \"^27.2.1\",\n    \"eslint-plugin-react\": \"^7.21.0\",\n    \"hosted-git-info\": \"^2.7.1\",\n    \"jest\": \"^29.5.0\",\n    \"jest-environment-jsdom\": \"^29.5.0\",\n    \"jest-transform-stub\": \"^2.0.0\",\n    \"mockdate\": \"^3.0.5\",\n    \"raf\": \"^3.4.1\",\n    \"regenerator-runtime\": \"^0.13.1\",\n    \"swagger-tools\": \"^0.10.4\",\n    \"ts-jest\": \"^29.2.2\",\n    \"typescript\": \"5.0.4\",\n    \"webpack\": \"5.92.1\",\n    \"webpack-dev-server\": \"4.15.2\"\n  },\n  \"dependencies\": {\n    \"@patternfly/patternfly\": \"4.224.2\",\n    \"@patternfly/quickstarts\": \"2.4.3\",\n    \"@patternfly/react-core\": \"4.278.1\",\n    \"@patternfly/react-table\": \"4.113.0\",\n    \"@rjsf/core\": \"^5.24.1\",\n    \"@rjsf/utils\": \"^5.24.1\",\n    \"@rjsf/validator-ajv6\": \"^5.24.1\",\n    \"@stripe/react-stripe-js\": \"1.16.5\",\n    \"@stripe/stripe-js\": \"1.50.0\",\n    \"@types/braintree-web\": \"3.96.11\",\n    \"@types/c3\": \"^0.7.8\",\n    \"@types/codemirror\": \"^5.60.15\",\n    \"@types/enzyme\": \"^3.10.13\",\n    \"@types/jest\": \"^29.5.14\",\n    \"@types/jquery\": \"^3.5.14\",\n    \"@types/lodash.escaperegexp\": \"^4.1.7\",\n    \"@types/numeral\": \"^2.0.2\",\n    \"@types/pluralize\": \"^0.0.29\",\n    \"@types/react\": \"18.0.28\",\n    \"@types/react-dom\": \"18.3.5\",\n    \"@types/react-jsonschema-form\": \"^1.7.8\",\n    \"@types/react-redux\": \"^7.1.34\",\n    \"@types/redux-api-middleware\": \"^3.2.3\",\n    \"@types/redux-immutable-state-invariant\": \"^2.1.2\",\n    \"@types/swagger-ui\": \"^3.52.0\",\n    \"@types/virtual-dom\": \"^2.1.1\",\n    \"bootstrap-sass\": \"3.4.3\",\n    \"braintree-web\": \"3.102.0\",\n    \"c3\": \"^0.4.11\",\n    \"classnames\": \"^2.2.6\",\n    \"codemirror\": \"5.65.18\",\n    \"compression-webpack-plugin\": \"10.0.0\",\n    \"css-loader\": \"6.11.0\",\n    \"esbuild-loader\": \"4.2.0\",\n    \"highlight.js\": \"11.11.1\",\n    \"jquery\": \"3.7.0\",\n    \"jquery-pjax\": \"2.0.1\",\n    \"jquery-ui\": \"1.12.1\",\n    \"js-cookie\": \"3.0.5\",\n    \"lodash.escaperegexp\": \"^4.1.2\",\n    \"mini-css-extract-plugin\": \"2.9.0\",\n    \"moment\": \"^2.29.2\",\n    \"moment-range\": \"^4.0.2\",\n    \"moment-timezone\": \"^0.5.35\",\n    \"numeral\": \"^2.0.6\",\n    \"pluralize\": \"^7.0.0\",\n    \"prop-types\": \"15.8.1\",\n    \"react\": \"17.0.2\",\n    \"react-dom\": \"17.0.2\",\n    \"react-redux\": \"7.2.9\",\n    \"redux\": \"^4.0.1\",\n    \"redux-api-middleware\": \"^3.0.1\",\n    \"redux-immutable-state-invariant\": \"^2.1.0\",\n    \"redux-thunk\": \"^2.3.0\",\n    \"sass\": \"1.83.0\",\n    \"sass-loader\": \"13.3.3\",\n    \"showdown\": \"2.1.0\",\n    \"swagger-client\": \"^3.32.4\",\n    \"swagger-ui\": \"~5.12.3\",\n    \"validate.js\": \"^0.13.1\",\n    \"virtual-dom\": \"^2.1.1\",\n    \"webpack-assets-manifest\": \"5.2.1\",\n    \"webpack-cli\": \"5.1.4\",\n    \"yaml-loader\": \"^0.6.0\"\n  },\n  \"resolutions\": {\n    \"body-parser\": \"1.20.3\",\n    \"express\": \"4.21.2\",\n    \"http-proxy-middleware\": \"2.0.7\",\n    \"jquery-ui/jquery\": \"3.7.0\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "openshift/system/.env": "# S3 access\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_ROLE_ARN=\nAWS_WEB_IDENTITY_TOKEN_FILE=\nAWS_ROLE_SESSION_NAME=\nAWS_BUCKET=\nAWS_REGION=\nAWS_HOSTNAME=\nAWS_PROTOCOL=\nAWS_PATH_STYLE=\n\n# 3scale client (reporting to backend) and Core (backend sync)\nBACKEND_URL=http://backend-listener:3000\n\n# Redis (for backend stats)\nREDIS_BACKEND_HOST=backend-redis\n# REDIS_BACKEND_PORT=6379\n# REDIS_BACKEND_TIMEOUT=1\n\n# Redis (for jobs)\nREDIS_HOST=redis\n# REDIS_DB=2\n\n# Database\nDATABASE_URL=mysql2://root@mysql/system\n\n# Memcached\nMEMCACHED_SERVER=memcached:11211\n\n# GitHub (OAuth2 Developer Portal SSO)\nGITHUB_CLIENT_ID=\nGITHUB_CLIENT_SECRET=\n\n# Sandbox Proxy\nTHREESCALE_SANDBOX_PROXY_HOSTS=sandbox-proxy:8080\n# Takes the same value as Ruby's OpenSSL::SSL constants mode\nTHREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE=VERIFY_NONE\n\n# SSL\nFORCE_SSL=0\n\n# Domain & Seed Data\nTHREESCALE_SUPERDOMAIN=3scale.net.dev\nTHREESCALE_DEV_DOMAIN=0\nMASTER_DOMAIN=master\n# forced access code for everyone\nACCESS_CODE=\n\n# Rails\nRAILS_LOG_TO_STDOUT=1\nRAILS_ASSET_HOST=\nRAILS_ENV=preview\nDEBUG=1\n\n# Finance and Billing\nENABLE_FINANCE=1\n\n# Multitenant related pages and links\nTENANT_MODE=\n\n# Custom production URL with APIcast\nENABLE_APICAST_CUSTOM_URL=1\n\n# Configuration driven APIcast\nENABLE_APICAST_CONFIGURATION_DRIVEN=1\n\n# No daily or weekly reports so no prefs for those either\nENABLE_DAILY_WEEKLY_REPORTS_PREF=0\n\n# 3scale branded oauth for dev portal\nENABLE_THREE_SCALE_BRANDED_OAUTH_PROVIDER=0\n\n# ui for custom dev portal and email domain settings\nENABLE_CUSTOM_DOMAINS_SETTINGS_UI=0\n\n# Rolling updates\n# setting it to 0 will enable everything for everyone, default is 0\nTHREESCALE_ROLLING_UPDATES=1\n\n# 3scale Active Docs\nACTIVE_DOCS_URL=https://support.3scale.net\n\n# Paperclip storage (s3, filesystem)\n# FILE_UPLOAD_STORAGE=filesystem\n\n# Create Access Token with full RW permissions\n# ADMIN_ACCESS_TOKEN=sometokenvalue\n\n# Rails secret key base\n# http://edgeguides.rubyonrails.org/4_1_release_notes.html#config-secrets-yml\nSECRET_KEY_BASE=really-long-string-that-has-more-than-128-characters-but-is-insecure-and-just-for-testing\n",
            "docker-compose.yml": "version: '3.8'\n\nx-system_environment:\n  &system_environment\n  links:\n    - apisonator\n    - mailhog\n    - memcached\n    - mysql\n    - redis\n  environment:\n    - DB_HOST=mysql\n    - REDIS_URL=redis://redis/1\n    - MEMCACHE_SERVERS=memcached:11211\n    - BACKEND_URL=http://apisonator:3001\n    - BACKEND_REDIS_URL=redis://redis/3\n    - SECRET_KEY_BASE=secret\n    - CONFIG_INTERNAL_API_USER=system_app\n    - CONFIG_INTERNAL_API_PASSWORD=password\n    - SMTP_ADDRESS=mailhog\n    - SMTP_PORT=1025\n    - UNICORN_WORKERS=2\n    - FORCE_SSL=false\n    - DATABASE_CLEANER_ALLOW_REMOTE_DATABASE_URL=true\n\nservices:\n  system:\n    <<: *system_environment\n    build:\n      context: .\n      args:\n        CUSTOM_DB: ${DB}\n    command: bash -c \"rm -f tmp/pids/server.pid && UNICORN_WORKERS=2 bin/rails server -b 0.0.0.0\"\n    container_name: system-compose\n    depends_on:\n      - apisonator\n      - mailhog\n      - memcached\n      - redis\n      - mysql\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - system-assets:/opt/system/public/assets\n      - system-node-modules:/opt/system/node_modules\n\n  sidekiq:\n    <<: *system_environment\n    image: porta_system\n    command: bash -c \"rake sidekiq\"\n    container_name: sidekiq-compose\n    depends_on:\n      - system\n\n  mysql:\n    image: mysql:8.0\n    container_name: mysql-compose\n    ports:\n      - \"3306:3306\"\n    environment:\n      - MYSQL_ALLOW_EMPTY_PASSWORD=true\n    healthcheck:\n        test: \"mysql --user=root --execute 'SHOW DATABASES;'\"\n        timeout: 20s\n        retries: 10\n    volumes:\n      - mysql-data:/var/lib/mysql\n\n  memcached:\n    image: memcached\n    container_name: memcached-compose\n    ports:\n      - \"11211:11211\"\n\n  apisonator:\n    image: quay.io/3scale/apisonator:latest\n    container_name: apisonator-compose\n    ports:\n      - \"3001:3001\"\n    command: \"3scale_backend start -p 3001\"\n    depends_on:\n      - redis\n    environment:\n      - CONFIG_REDIS_PROXY=redis:6379/3\n      - CONFIG_QUEUES_MASTER_NAME=redis:6379/3\n      - CONFIG_WORKERS_LOG_FILE=/dev/stdout\n      - CONFIG_INTERNAL_API_USER=system_app\n      - CONFIG_INTERNAL_API_PASSWORD=password\n      - RACK_ENV=production\n\n  redis:\n    image: redis:6.2-alpine\n    container_name: redis-compose\n    ports:\n      - \"6379:6379\"\n\n  mailhog:\n    image: mailhog/mailhog\n    container_name: mailhog-compose\n    ports:\n      - \"1025:1025\"\n      - \"8025:8025\"\n\nvolumes:\n  mysql-data:\n  system-assets:\n  system-node-modules:\n",
            "openshift/system/Dockerfile": "FROM quay.io/centos/centos:stream9 as builder\nWORKDIR /opt/system\nENV RUBY_MAJOR_VERSION=3 \\\n    RUBY_MINOR_VERSION=1 \\\n    RAILS_ENV=production \\\n    NODE_ENV=production\nENV RUBY_VERSION=\"${RUBY_MAJOR_VERSION}.${RUBY_MINOR_VERSION}\"\n\nADD . ./\nRUN cp config/examples/*.yml config/ \\\n    && cp openshift/system/config/* config/\n\nRUN dnf -y --enablerepo=crb --setopt=module_stream_switch=True module enable ruby:${RUBY_VERSION} nodejs:18 \\\n    && dnf install -y --enablerepo=crb --setopt=skip_missing_names_on_install=False,tsflags=nodocs shared-mime-info make automake gcc gcc-c++ postgresql rubygem-irb rubygem-rdoc ruby-devel nodejs libpq-devel mysql-devel gd-devel libxml2-devel libxslt-devel git 'dnf-command(download)' cpio \\\n    && BUNDLER_VERSION=$(awk '/BUNDLED WITH/ { getline; print $1 }' Gemfile.lock) \\\n    && gem install --no-document bundler:$BUNDLER_VERSION \\\n    && bundle config build.nokogiri --use-system-libraries \\\n    && bundle config set --local without development:test:licenses \\\n    && bundle config set --local deployment true \\\n    && bundle install --jobs $(grep -c processor /proc/cpuinfo) --retry=5 \\\n    && npm install -g yarn \\\n    && yarn install:safe --no-progress \\\n    # TODO: update to SECRET_KEY_BASE_DUMMY=1 when we upgrade to Rails 7.1\n    && SECRET_KEY_BASE=rails/32947 bundle exec rake assets:precompile tmp:clear \\\n    && rm -rf node_modules /usr/local/share/gems/cache /usr/local/share/gems/doc\n\n# can just install memkind once it is fixed, see\n# https://issues.redhat.com/browse/RHEL-14497\nRUN cd /tmp \\\n    && dnf download --source memkind \\\n    && rpm2cpio memkind-*.src.rpm | cpio -idmv \"memkind-*.tar.gz\" \\\n    && tar xvfz memkind-*.tar.gz \\\n    && cd memkind-*/jemalloc/ \\\n    && ./autogen.sh && ./configure --libdir=/usr/local/lib64/ && make\n\n\nFROM quay.io/centos/centos:stream9 AS base\n\nUSER root\n\nENV RUBY_MAJOR_VERSION=3 \\\n    RUBY_MINOR_VERSION=1 \\\n    RAILS_ENV=production \\\n    SAFETY_ASSURED=1 \\\n    TZ=:/etc/localtime \\\n    HOME=/opt/system \\\n    prometheus_multiproc_dir=/opt/system/tmp/prometheus-client-mmap-dir\n\nENV RUBY_VERSION=\"${RUBY_MAJOR_VERSION}.${RUBY_MINOR_VERSION}\"\n\nWORKDIR $HOME\n\nRUN dnf -y --enablerepo=crb module enable ruby:${RUBY_VERSION} nodejs:18 \\\n    && dnf install -y --enablerepo=crb --setopt=skip_missing_names_on_install=False,tsflags=nodocs shared-mime-info postgresql rubygem-irb rubygem-rdoc ruby libpq mysql mysql-libs gd git liberation-sans-fonts file libxml2 libxslt catatonit \\\n    && dnf -y clean all\n\nCOPY --from=builder /opt/system/ .\nCOPY --from=builder /tmp/memkind-*/jemalloc/lib/libjemalloc.so* /usr/local/lib64\nCOPY --from=builder /usr/local/share/gems /usr/local/share/\nCOPY --from=builder /usr/local/bin/bundle* /usr/local/bin\n\nRUN echo /usr/local/lib64 > /etc/ld.so.conf.d/jemalloc.conf \\\n    && ldconfig && ldconfig -p | grep jemalloc\n\nRUN bundle config set --local without development:test:licenses:assets \\\n    && bundle exec rake tmp:create \\\n    && umask 0002 \\\n    && mkdir -p db/sphinx tmp/prometheus-client-mmap-dir \\\n    && chmod g+w -vfR log tmp public/assets db/sphinx \\\n    && rm -f log/*.log \\\n    && chmod g+w /opt/system /opt/system/config\n\n# Bundler runs git commands on git dependencies\n# https://bundler.io/guides/git.html#local-git-repos\n# git will check if the current user is the owner of the git repository folder\n# This was included in git v2.35.2 or newer.\n# https://github.com/git/git/commit/8959555cee7ec045958f9b6dd62e541affb7e7d9\n# Openshift changes the effective UID, so this git check needs to be bypassed.\nRUN git config --global --add safe.directory '*'\n\n# container-entrypoint is expected by the operator so keeping it for compatibility\nRUN ln -s openshift/system/entrypoint.sh . \\\n    && ln -s /opt/system/openshift/system/contrib/container-entrypoint /usr/local/bin/\n\nRUN rm -rf vendor/oracle/ test/ spec/ features/ lib/proxy \\\n    && cp config/oracle/*.ini /etc/\n\nUSER 1001\nEXPOSE 3000 9306\nENTRYPOINT [\"/usr/libexec/catatonit/catatonit\", \"--\", \"/opt/system/entrypoint.sh\"]\nCMD [\"unicorn\", \"-c\", \"config/unicorn.rb\", \"-E\", \"${RAILS_ENV}\", \"config.ru\"]\n\n\nFROM base AS sphinx-config\nENV THINKING_SPHINX_ADDRESS=0.0.0.0 \\\n    THINKING_SPHINX_PID_FILE=/var/run/sphinx/searchd.pid \\\n    THINKING_SPHINX_INDICES_LOCATION=/var/lib/searchd \\\n    THINKING_SPHINX_CONFIGURATION_FILE=/opt/system/config/standalone.sphinx.conf \\\n    THINKING_SPHINX_QUERY_LOG=/dev/stdout \\\n    THINKING_SPHINX_LOG=/dev/stdout \\\n    RAILS_ENV=production \\\n    # TODO: update to SECRET_KEY_BASE_DUMMY=1 when we upgrade to Rails 7.1\n    SECRET_KEY_BASE=dummy \\\n    DATABASE_URL='mysql2://root:@localhost/porta'\nUSER 0\nRUN dnf install --enablerepo=crb -y mysql-server mysql-test \\\n    && setcap -r /usr/libexec/mysqld \\\n    && setpriv --reuid 27 --regid 27 --clear-groups mysqld --initialize-insecure \\\n    && (mysqld_safe &) \\\n    && bundle exec rake db:create db:schema:load openshift:thinking_sphinx:configure \\\n    && grep -q \"rt_field = account_id\" \"$THINKING_SPHINX_CONFIGURATION_FILE\" \\\n    && kill $(</run/mysqld/mysqld.pid)\n\nFROM base AS porta-prod\nCOPY --from=sphinx-config /opt/system/config/standalone.sphinx.conf /opt/system/config/\n",
            ".circleci/config.yml": "version: 2.1\norbs:\n  codecov: codecov/codecov@3.3.0\n\n##################################### YAML ANCHORS  ############################################\n\npersist-vendored-dependencies-to-workspace: &persist-vendored-dependencies-to-workspace\n  persist_to_workspace:\n    root: .\n    paths:\n      - ./vendor/bundle\n      - ./.bundle/\n\nstore-junit-results: &store-junit-test-results\n  store_test_results:\n    path: tmp/junit\n\nstore-test-artifacts: &store-test-artifacts\n  store_artifacts:\n    path: tmp/junit\n    destination: junit\n\nstore-log-artifacts: &store-log-artifacts\n  store_artifacts:\n    path: log\n    destination: log\n\nnpm-cache-key: &npm-cache-key stream9-{{ .Environment.CACHE_VERSION }}-node-modules-{{ checksum \"yarn.lock\" }}\nbundle-cache-key: &bundle-cache-key stream9-{{ .Environment.CACHE_VERSION }}-bundler-gems-{{ arch }}-{{ checksum \"Gemfile.lock\" }}-{{ checksum \"/tmp/db\" }}\nassets-cache-key: &assets-cache-key stream9-{{ .Environment.CACHE_VERSION }}-asset-cache-{{ checksum \"tmp/assets_related_checksums\" }}\noracle-libs-cache-key: &oracle-libs-cache-key ora1-{{ .Environment.CACHE_VERSION }}-oracle-libs-cache-{{ checksum \"script/oracle/install-instantclient-packages.sh\" }}\n\nrestore-npm-cache: &restore-npm-cache\n  restore_cache:\n    key: *npm-cache-key\n\nsave-npm-cache: &save-npm-cache\n  save_cache:\n    key: *npm-cache-key\n    paths:\n      - ./node_modules\n\nrestore-oracle-libs-cache: &restore-oracle-libs-cache\n  restore_cache:\n    key: *oracle-libs-cache-key\n\nsave-oracle-libs-cache: &save-oracle-libs-cache\n  save_cache:\n    key: *oracle-libs-cache-key\n    paths:\n      - vendor/oracle\n\nsave-assets-cache: &save-assets-cache\n  save_cache:\n    key: *assets-cache-key\n    paths:\n      - public/assets\n      - public/packs\n      - tmp/cache/assets\n\nrestore-assets-cache: &restore-assets-cache\n  restore_cache:\n    key: *assets-cache-key\n\ngenerate-assets-checksums: &generate-assets-checksums\n  run:\n    name: Generate assets precompilation checksum data\n    command: git ls-tree -r HEAD $(<.circleci/asset_paths) > tmp/assets_related_checksums\n\nuse-example-config-files: &use-example-config-files\n  run:\n    name: Copy example config files into place to be used by tests\n    command: cp config/examples/*.yml config/\n\ndisable-internet-access: &disable-internet-access\n  run:\n    name: Disable internet access\n    command: sudo sed -c -i\".bak\" 's/127\\.0\\.0\\.11$/127.0.0.1/' /etc/resolv.conf\n\nenable-internet-access: &enable-internet-access\n  run:\n    name: Enabled internet access\n    command: sudo sed -c -i\".bak\" 's/127\\.0\\.0\\.1$/127.0.0.11/' /etc/resolv.conf\n    when: always\n\nattach-to-workspace: &attach-to-workspace\n  attach_workspace:\n    at: .\n\nsystem-builder-ruby31: &system-builder-ruby31\n  image: quay.io/3scale/system-builder:ps\n  environment:\n    BUNDLE_FROZEN: true\n    BUNDLE_PATH: 'vendor/bundle'\n    DISABLE_SPRING: \"true\"\n    ORACLE_SYSTEM_PASSWORD: threescalepass\n    NLS_LANG: AMERICAN_AMERICA.UTF8\n    TZ: UTC\n    MASTER_PASSWORD: p\n    USER_PASSWORD: p\n    LC_ALL: C.utf8\n    RAILS_ENV: test\n\nmysql-container: &mysql-container\n  image: cimg/mysql:8.0\n  command: mysqld --performance_schema=0 --table_definition_cache=400 --innodb_buffer_pool_size=16M --innodb_log_buffer_size=4M --tmp_table_size=1M --key_buffer_size=4M --sort_buffer_size=128K --skip-log-bin\n  environment:\n    MYSQL_ALLOW_EMPTY_PASSWORD: yes\n    MYSQL_ROOT_PASSWORD: ''\n    MYSQL_DATABASE: circleci\n\npostgres-container: &postgres-container\n  image: cimg/postgres:14.12\n  environment:\n    POSTGRES_USER: postgres\n\noracle-db-container: &oracle-db-container\n  image: quay.io/3scale/oracle:19.3.0-ee-ci-prebuilt\n  auth:\n    username: $DOCKER_USERNAME\n    password: $DOCKER_PASSWORD\n  environment:\n    ORACLE_CHARACTERSET: 'AL32UTF8'\n    ORACLE_SID: 'threescale'\n    ORACLE_PDB: 'systempdbtest'\n    ORACLE_PWD: 'threescalepass'\n  command: bash -c \"sed -i.bak 's|2048|6144|g' /opt/oracle/dbca.rsp.tmpl && exec /opt/oracle/runOracle.sh\"\n\nmemcached-container: &memcached-container\n  image: memcached:1.5-alpine\n\nredis-container: &redis-container\n  image: redis:6.2-alpine\n\ndnsmasq-container: &dnsmasq-container\n  image: quay.io/3scale/dnsmasq\n  command:\n    - --user=root\n    - --keep-in-foreground\n    - --log-facility=-\n    - --log-queries\n    - --no-poll\n    - --server=/circleci-internal-outer-build-agent/circleci-internal-outer-build-agent.ec2.internal/circleci.com/circleci-binary-releases.s3.amazonaws.com/127.0.0.11\n    - --address=/#/127.0.0.1\n\nonly-master-filter: &only-master-filter\n  filters:\n    branches:\n      only: master\n\nnightly-trigger: &nightly-trigger\n  triggers:\n    - schedule:\n        cron: \"0 0 * * *\"\n        <<: *only-master-filter\n\nbuild-envs:\n  mysql: &build-envs-mysql\n    environment:\n      DB: mysql\n      DATABASE_URL: mysql2://root:@127.0.0.1:3306/3scale_system_test\n\n  postgresql: &build-envs-postgresql\n    environment:\n      DB: postgresql\n      DATABASE_URL: postgresql://postgres:@127.0.0.1:5432/systemdb\n\n  oracle: &build-envs-oracle\n    environment:\n      DB: oracle\n      DATABASE_URL: oracle-enhanced://rails:railspass@127.0.0.1:1521/systempdb\n      CAPYBARA_MAX_WAIT_TIME: 30\n\n##################################### CIRCLECI COMMANDS ############################################\n\ncommands: # reusable commands with parameters\n\n  notify_failure:\n    steps:\n      - when:\n          condition:\n            equal: [ master, << pipeline.git.branch >> ] # &only-master-filter won't work at step level\n          steps:\n            - run:\n                name: Notify Slack about tests failure\n                command: |\n                  curl -X POST -H 'Content-type: application/json' \\\n                  --data \\\n                  \"{ \\\n                    \\\"attachments\\\": [ \\\n                    { \\\n                      \\\"fallback\\\": \\\"Build failed on $CIRCLE_BRANCH, for $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.\\\", \\\n                      \\\"color\\\": \\\"#CD0000\\\", \\\n                      \\\"pretext\\\": \\\"Don't panic. Build failed on $CIRCLE_BRANCH !! \\\", \\\n                      \\\"author_name\\\": \\\"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\\\", \\\n                      \\\"title\\\": \\\"Job: $CIRCLE_JOB \\\", \\\n                      \\\"title_link\\\": \\\"$CIRCLE_BUILD_URL\\\", \\\n                      \\\"text\\\": \\\"$CIRCLE_BUILD_URL\\\", \\\n                      \\\"fields\\\": [ \\\n                      { \\\n                        \\\"title\\\": \\\"Commit\\\", \\\n                        \\\"value\\\": \\\"$CIRCLE_SHA1\\\", \\\n                        \\\"short\\\": false \\\n                      } \\\n                      ] \\\n                    } \\\n                    ] \\\n                  }\" $SLACK_WEBHOOK_SYSTEM\n                when: on_fail\n\n  install-gem-dependencies:\n    parameters:\n      extra-deps:\n        description: \"Steps that will be executed in case extra dependencies.\"\n        type: steps\n        default: []\n    steps:\n      - checkout\n      - run:\n          name: Make $DB Available for cache keys\n          command: echo $DB > /tmp/db\n      - restore-gem-cache\n      - steps: << parameters.extra-deps >>\n      - run:\n          name: Install gems with bundler\n          command: |\n            echo \"Running gems install for database: $DB\"\n            echo \"$(bundle version)\"\n            bundle config set --local deployment 'true'\n            bundle config build.nokogiri --use-system-libraries\n            bundle check || bundle install\n            bundle clean\n            # remove capybara-webkit source, save more than 400 MB\n            rm -rf \"$BUNDLE_PATH/$(ruby -e 'puts Gem.ruby_engine')/$(ruby -e 'puts Gem.ruby_api_version')\"/gems/capybara-webkit-*/src\n          environment:\n            BUNDLE_RETRY: 3\n            BUNDLE_JOBS: 3\n      - save-gem-cache\n      - *persist-vendored-dependencies-to-workspace\n\n  clone-oracle-libraries:\n    steps:\n      - *restore-oracle-libs-cache\n      - run:\n          name: \"Fetch oracle libraries\"\n          command: |\n            set +o pipefail\n            ls vendor/oracle\n            sudo ORACLE_KEEP_DOWNLOADS=1 ./script/oracle/install-instantclient-packages.sh\n      - *save-oracle-libs-cache\n\n  prepare-db-for-tests:\n    steps:\n      - run:\n          name: Prepare database for tests\n          command: |\n            set +o pipefail\n            echo \"Running for database: $(echo $DATABASE_URL | sed -e 's/\\(oracle\\|mysql\\|postgresql\\).*/\\1/g')\"\n            set -o pipefail\n            bundle exec rake ci:db:ready db:create db:test:prepare\n\n  rspec-tests:\n    parameters:\n      extra-deps:\n        description: \"Steps that will be executed in case extra dependencies are required, e.g. to connect to db.\"\n        type: steps\n        default: []\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - *use-example-config-files\n      - steps: << parameters.extra-deps >>\n      - prepare-db-for-tests\n      - run:\n          name: jemalloc availability\n          command: ldd /bin/bash | grep \"$LD_PRELOAD\" || ( ldconfig -p && exit 1 )\n          environment: &malloc_preload\n            LD_PRELOAD: libjemalloc.so.2\n      - run:\n          name: Rspec tests\n          command: |\n            circleci tests glob \"spec/**/*_spec.rb\" | circleci tests run --command=\"xargs bundle exec rspec --format progress\" --verbose --split-by=timings\n          environment: *malloc_preload\n      - upload-artifacts\n\n  cucumber-tests:\n    parameters:\n      extra-deps:\n        description: \"Steps that will be executed in case extra dependencies are required, e.g. to connect to db.\"\n        type: steps\n        default: []\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - steps: << parameters.extra-deps >>\n      - prepare-db-for-tests\n      - *disable-internet-access\n      - run:\n          name: Check internet access is disabled\n          command: |\n            echo \"bundle exec cucumber --profile ci .circleci/no_internet.feature\"\n            bundle exec cucumber --profile ci .circleci/no_internet.feature\n          environment: *malloc_preload\n      - log-memory-usage-periodic\n      - run:\n          name: Run cucumber tests\n          command: |\n            # saved test cases metadata can be read here:\n            # ${CIRCLE_INTERNAL_TASK_DATA}/circle-test-results/results.json\n            bundle exec ruby .circleci/features.rb | circleci tests run --command=\"xargs bundle exec cucumber --profile ci\" --verbose --split-by=timings\n      - *enable-internet-access\n      - print-oom-process-count\n      - upload-artifacts\n      - store_artifacts:\n          path: tmp/capybara\n          destination: capybara\n\n  rails-tests:\n    parameters:\n      extra-deps:\n        description: \"Steps that will be executed in case extra dependencies are required, e.g. to connect to db.\"\n        type: steps\n        default: []\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - *use-example-config-files\n      - steps: << parameters.extra-deps >>\n      - prepare-db-for-tests\n      - run:\n          name: Run Rails tests\n          command: |\n            list=/tmp/test-list-$$\n            taskname=$(echo $CIRCLE_JOB | sed -e 's/-\\(postgres\\|oracle\\|[0-9]\\).*//')\n            bundle exec rake \"test:files:${taskname}\" | circleci tests run --command=\"cat > $list\" --verbose --split-by=timings\n            if [ -s $list ]; then\n              bundle exec rails test $(awk 'ORS=\" \"' < $list) --verbose --backtrace\n            fi\n          environment: *malloc_preload\n      - upload-artifacts\n\n  save-gem-cache:\n    steps:\n      - save_cache:\n          key: *bundle-cache-key\n          paths:\n            - ./vendor/bundle\n            - ./.bundle/\n\n  restore-gem-cache:\n    steps:\n      - restore_cache:\n          keys:\n            - *bundle-cache-key\n\n  upload-artifacts:\n    steps:\n      - *store-junit-test-results\n      - *store-test-artifacts\n      - *store-log-artifacts\n      - codecov/upload\n\n  log-memory-usage-periodic:\n    steps:\n      - run:\n          name: Log process memory usage\n          command: |\n            while sleep 2; do\n              date\n              ps -eo pid,user,%mem,rss,command ww --sort rss\n              echo\n            done\n          background: true\n\n  print-oom-process-count:\n    steps:\n      - run:\n          name: Number of OOM killed processes\n          command: |\n            # see https://support.circleci.com/hc/en-us/articles/19306469418139-How-to-detect-when-a-process-is-killed-by-the-OOM-killer\n            printf \"OOM Control: \"\n            cat /sys/fs/cgroup/memory/memory.oom_control | sed -n 3p | tee tmp/oom_num\n            [ \"oom_kill 0\" = \"$(<tmp/oom_num)\" ] # fails when a proc was killed by OOM\n          when: always\n\n##################################### CIRCLECI EXECUTORS ############################################\n\nexecutors:\n  builder-ruby31: &builder-ruby31\n    parameters:\n      database:\n        type: string\n        default: mysql\n    docker:\n      - *system-builder-ruby31\n    environment:\n      DB: << parameters.database >>\n    working_directory: /opt/ci/workdir\n\n  builder-with-mysql-ruby31: &builder-with-mysql-ruby31\n    resource_class: small\n    docker:\n      - *system-builder-ruby31\n      - *mysql-container\n      - *memcached-container\n      - *redis-container\n    working_directory: /opt/ci/workdir\n    <<: *build-envs-mysql\n\n  builder-with-postgres-ruby31: &builder-with-postgres-ruby31\n    resource_class: small\n    docker:\n      - *system-builder-ruby31\n      - *postgres-container\n      - *memcached-container\n      - *redis-container\n    working_directory: /opt/ci/workdir\n    <<: *build-envs-postgresql\n\n  builder-with-oracle-ruby31: &builder-with-oracle-ruby31\n    resource_class: large\n    docker:\n      - *system-builder-ruby31\n      - *oracle-db-container\n      - *memcached-container\n      - *redis-container\n    working_directory: /opt/ci/workdir\n    <<: *build-envs-oracle\n\n  cucumber-with-mysql-ruby31: &cucumber-with-mysql-ruby31\n    resource_class: small\n    docker:\n      - *system-builder-ruby31\n      - *dnsmasq-container\n      - *mysql-container\n      - *memcached-container\n      - *redis-container\n\n  cucumber-with-postgres-ruby31: &cucumber-with-postgres-ruby31\n    resource_class: small\n    docker:\n      - *system-builder-ruby31\n      - *dnsmasq-container\n      - *postgres-container\n      - *memcached-container\n      - *redis-container\n\n  cucumber-with-oracle-ruby31: &cucumber-with-oracle-ruby31\n    resource_class: large\n    docker:\n      - *system-builder-ruby31\n      - *dnsmasq-container\n      - *oracle-db-container\n      - *memcached-container\n      - *redis-container\n\n##################################### CIRCLECI JOBS ############################################\n\njobs:\n  dependencies_bundler:\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n      database: mysql\n    steps:\n      - install-gem-dependencies\n      - notify_failure\n\n  deps_bundler_postgres:\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n      database: postgresql\n    steps:\n      - install-gem-dependencies\n      - notify_failure\n\n  deps_bundler_oracle:\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n      database: oracle\n    steps:\n      - install-gem-dependencies:\n          extra-deps:\n            - clone-oracle-libraries\n      - notify_failure\n\n  dependencies_npm:\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - checkout\n      - *restore-npm-cache\n      - run:\n          name: Install Node dependencies\n          command: |\n            yarn --version\n            yarn install:safe\n      - *save-npm-cache\n      - persist_to_workspace:\n          root: .\n          paths:\n            - ./node_modules\n      - notify_failure\n\n  assets_precompile:\n    resource_class: large\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - *generate-assets-checksums\n      - *restore-assets-cache\n      - *use-example-config-files\n      - run:\n          name: Precompile assets\n          command: bundle exec rake assets:precompile\n          environment:\n            RAILS_GROUPS: assets\n      - *save-assets-cache\n      - persist_to_workspace:\n          root: .\n          paths:\n            - ./public/packs\n            - ./public/assets\n            - ./config/*.yml\n      - notify_failure\n\n  lint:\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - run:\n          name: Eslint\n          command: yarn ci:lint\n      - notify_failure\n\n  licenses:\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - *use-example-config-files\n      - run:\n          name: Licenses check\n          command: bundle exec rake licenses:compliance\n      - store_artifacts:\n          path: doc/licenses\n          destination: licenses\n      - notify_failure\n\n  jest:\n    resource_class: medium+\n    parameters:\n      executor:\n        type: string\n        default: builder-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - checkout\n      - *attach-to-workspace\n      - run:\n          name: Jest specs\n          command: yarn jest --maxWorkers=3 --coverage\n      - codecov/upload\n      - notify_failure\n\n  unit:\n    parallelism: 8\n    parameters:\n      executor:\n        type: string\n        default: builder-with-mysql-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests\n      - notify_failure\n\n  unit-postgres:\n    parallelism: 8\n    parameters:\n      executor:\n        type: string\n        default: builder-with-postgres-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests\n      - notify_failure\n\n  unit-oracle:\n    parallelism: 6\n    parameters:\n      executor:\n        type: string\n        default: builder-with-oracle-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests:\n          extra-deps:\n            - clone-oracle-libraries\n      - notify_failure\n\n  functional:\n    parallelism: 2\n    parameters:\n      executor:\n        type: string\n        default: builder-with-mysql-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests\n      - notify_failure\n\n  functional-postgres:\n    parallelism: 2\n    parameters:\n      executor:\n        type: string\n        default: builder-with-postgres-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests\n      - notify_failure\n\n  functional-oracle:\n    parallelism: 2\n    parameters:\n      executor:\n        type: string\n        default: builder-with-oracle-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests:\n          extra-deps:\n            - clone-oracle-libraries\n      - notify_failure\n\n  integration:\n    parallelism: 8\n    parameters:\n      executor:\n        type: string\n        default: builder-with-mysql-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests\n      - notify_failure\n\n  integration-postgres:\n    parallelism: 8\n    parameters:\n      executor:\n        type: string\n        default: builder-with-postgres-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests\n      - notify_failure\n\n  integration-oracle:\n    parallelism: 6\n    parameters:\n      executor:\n        type: string\n        default: builder-with-oracle-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rails-tests:\n          extra-deps:\n            - clone-oracle-libraries\n      - notify_failure\n\n  rspec:\n    parallelism: 3\n    parameters:\n      executor:\n        type: string\n        default: builder-with-mysql-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rspec-tests\n      - notify_failure\n\n  rspec-postgres:\n    parallelism: 3\n    parameters:\n      executor:\n        type: string\n        default: builder-with-postgres-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rspec-tests\n      - notify_failure\n\n  rspec-oracle:\n    parallelism: 4\n    parameters:\n      executor:\n        type: string\n        default: builder-with-oracle-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - rspec-tests:\n          extra-deps:\n            - clone-oracle-libraries\n      - notify_failure\n\n  cucumber:\n    <<: *build-envs-mysql\n    parallelism: 40\n    parameters:\n      executor:\n        type: string\n        default: cucumber-with-mysql-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - cucumber-tests\n      - notify_failure\n\n  cucumber-postgres:\n    <<: *build-envs-postgresql\n    parallelism: 40\n    parameters:\n      executor:\n        type: string\n        default: cucumber-with-postgres-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - cucumber-tests\n      - notify_failure\n\n  cucumber-oracle:\n    <<: *build-envs-oracle\n    parallelism: 30\n    parameters:\n      executor:\n        type: string\n        default: cucumber-with-oracle-ruby31\n    executor:\n      name: << parameters.executor >>\n    steps:\n      - cucumber-tests:\n          extra-deps:\n            - clone-oracle-libraries\n      - notify_failure\n\n  notify_start:\n    docker:\n      - image: cimg/base:current\n    steps:\n      - run:\n          name: Notify Slack about tests start\n          command: |\n            curl -X POST -H 'Content-type: application/json' \\\n            --data \\\n            \"{ \\\n              \\\"attachments\\\": [ \\\n              { \\\n                \\\"fallback\\\": \\\"Build started on master, for $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.\\\", \\\n                \\\"color\\\": \\\"#D3D3D3\\\", \\\n                \\\"pretext\\\": \\\"Build started on master: \\\", \\\n                \\\"author_name\\\": \\\"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\\\", \\\n                \\\"title\\\": \\\"Job: $CIRCLE_JOB  \\\", \\\n                \\\"title_link\\\": \\\"$CIRCLE_BUILD_URL\\\", \\\n                \\\"text\\\": \\\"Changes: $CIRCLE_COMPARE_URL\\\", \\\n                \\\"fields\\\": [ \\\n                { \\\n                  \\\"title\\\": \\\"Commit\\\", \\\n                  \\\"value\\\": \\\"$CIRCLE_SHA1\\\", \\\n                  \\\"short\\\": false \\\n                }, \\\n                { \\\n                  \\\"title\\\": \\\"GitHub Repo\\\", \\\n                  \\\"value\\\": \\\"$CIRCLE_REPOSITORY_URL\\\", \\\n                  \\\"short\\\": false \\\n                }, \\\n                { \\\n                  \\\"title\\\": \\\"Triggered by:\\\", \\\n                  \\\"value\\\": \\\"$CIRCLE_USERNAME\\\", \\\n                  \\\"short\\\": false \\\n                } \\\n                ] \\\n              } \\\n              ] \\\n            }\" $SLACK_WEBHOOK_SYSTEM\n\n  notify_success:\n    docker:\n      - image: cimg/base:current\n    steps:\n      - run:\n          name: Notify Slack about tests passing\n          command: |\n            curl -X POST -H 'Content-type: application/json' \\\n            --data \\\n            \"{ \\\n              \\\"attachments\\\": [ \\\n              { \\\n                \\\"fallback\\\": \\\"All is well & green on $CIRCLE_BRANCH, for $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.\\\", \\\n                \\\"color\\\": \\\"#00B700\\\", \\\n                \\\"pretext\\\": \\\"All is well & green on $CIRCLE_BRANCH. Nothing to see here. \\\", \\\n                \\\"author_name\\\": \\\"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\\\", \\\n                \\\"title\\\": \\\"Job: $CIRCLE_JOB \\\", \\\n                \\\"title_link\\\": \\\"$CIRCLE_BUILD_URL\\\", \\\n                \\\"text\\\": \\\"$CIRCLE_BUILD_URL\\\", \\\n                \\\"fields\\\": [ \\\n                { \\\n                  \\\"title\\\": \\\"Commit\\\", \\\n                  \\\"value\\\": \\\"$CIRCLE_SHA1\\\", \\\n                  \\\"short\\\": false \\\n                } \\\n                ] \\\n              } \\\n              ] \\\n            }\" $SLACK_WEBHOOK_SYSTEM\n          when: on_success\n\n\n##################################### CIRCLECI WORKFLOWS ############################################\n\nworkflows:\n  version: 2\n\n  mysql_build:\n    jobs:\n      - manual_approval: # <<< A job that will require manual approval in the CircleCI web application.\n          type: approval # <<< This key-value pair will set your workflow to a status of \"On Hold\"\n      - notify_start:\n          <<: *only-master-filter\n          requires:\n            - manual_approval\n      - dependencies_bundler:\n          requires:\n            - manual_approval\n      - dependencies_npm:\n          requires:\n            - manual_approval\n      - assets_precompile:\n          requires:\n            - dependencies_bundler\n            - dependencies_npm\n      - unit:\n          requires:\n            - dependencies_bundler\n      - functional:\n          requires:\n            - assets_precompile\n      - integration:\n          requires:\n            - assets_precompile\n      - rspec:\n          requires:\n            - dependencies_bundler\n      - cucumber:\n          requires:\n            - assets_precompile\n      - notify_success:\n          requires:\n            - rspec\n            - unit\n            - cucumber\n            - integration\n            - functional\n          <<: *only-master-filter\n\n  postgres_build:\n    jobs:\n      - manual_approval: # <<< A job that will require manual approval in the CircleCI web application.\n          type: approval # <<< This key-value pair will set your workflow to a status of \"On Hold\"\n          # On approval of the `hold` job, any successive job that requires the `hold` job will run.\n      - notify_start:\n          requires:\n            - manual_approval\n          <<: *only-master-filter\n      - deps_bundler_postgres:\n          requires:\n            - manual_approval\n      - dependencies_npm:\n          requires:\n            - manual_approval\n      - assets_precompile:\n          requires:\n            - deps_bundler_postgres\n            - dependencies_npm\n      - unit-postgres:\n          requires:\n            - deps_bundler_postgres\n      - functional-postgres:\n          requires:\n            - assets_precompile\n      - integration-postgres:\n          requires:\n            - assets_precompile\n      - rspec-postgres:\n          requires:\n            - deps_bundler_postgres\n      - cucumber-postgres:\n          requires:\n            - assets_precompile\n      - notify_success:\n          requires:\n            - rspec-postgres\n            - unit-postgres\n            - cucumber-postgres\n            - integration-postgres\n            - functional-postgres\n          <<: *only-master-filter\n\n  oracle_build:\n    jobs:\n      - manual_approval: # <<< A job that will require manual approval in the CircleCI web application.\n          type: approval # <<< This key-value pair will set your workflow to a status of \"On Hold\"\n        # On approval of the `hold` job, any successive job that requires the `hold` job will run.\n      - notify_start:\n          requires:\n            - manual_approval\n          <<: *only-master-filter\n      - deps_bundler_oracle:\n          requires:\n            - manual_approval\n      - dependencies_npm:\n          requires:\n            - manual_approval\n      - assets_precompile:\n          requires:\n            - deps_bundler_oracle\n            - dependencies_npm\n      - unit-oracle:\n          requires:\n            - deps_bundler_oracle\n          context:\n            - quay\n      - functional-oracle:\n          requires:\n            - assets_precompile\n          context:\n            - quay\n      - integration-oracle:\n          requires:\n            - assets_precompile\n          context:\n            - quay\n      - rspec-oracle:\n          requires:\n            - deps_bundler_oracle\n          context:\n            - quay\n      - cucumber-oracle:\n          requires:\n            - assets_precompile\n          context:\n            - quay\n      - notify_success:\n          requires:\n            - rspec-oracle\n            - unit-oracle\n            - cucumber-oracle\n            - integration-oracle\n            - functional-oracle\n          <<: *only-master-filter\n\n  javascript_tests:\n    jobs:\n      - manual_approval: # <<< A job that will require manual approval in the CircleCI web application.\n          type: approval # <<< This key-value pair will set your workflow to a status of \"On Hold\"\n      - notify_start:\n          <<: *only-master-filter\n          requires:\n            - manual_approval\n      - dependencies_bundler:\n          requires:\n            - manual_approval\n      - dependencies_npm:\n          requires:\n            - manual_approval\n      - licenses:\n          requires:\n            - dependencies_bundler\n      - lint:\n          requires:\n            - dependencies_npm\n      - jest:\n          requires:\n            - dependencies_npm\n      - notify_success:\n          requires:\n            - licenses\n            - lint\n            - jest\n          <<: *only-master-filter\n\n\n  ######## Nightly workflows\n\n\n  mysql_nightly_build_ruby31:\n    jobs:\n      - notify_start:\n          <<: *only-master-filter\n      - dependencies_bundler:\n          executor: builder-ruby31\n      - dependencies_npm:\n          executor: builder-ruby31\n      - assets_precompile:\n          executor: builder-ruby31\n          requires:\n            - dependencies_bundler\n            - dependencies_npm\n      - unit:\n          executor: builder-with-mysql-ruby31\n          requires:\n            - dependencies_bundler\n      - functional:\n          executor: builder-with-mysql-ruby31\n          requires:\n            - assets_precompile\n      - integration:\n          executor: builder-with-mysql-ruby31\n          requires:\n            - assets_precompile\n      - rspec:\n          executor: builder-with-mysql-ruby31\n          requires:\n            - dependencies_bundler\n      - cucumber:\n          executor: cucumber-with-mysql-ruby31\n          requires:\n            - assets_precompile\n      - notify_success:\n          requires:\n            - rspec\n            - unit\n            - cucumber\n            - integration\n            - functional\n          <<: *only-master-filter\n    <<: *nightly-trigger\n\n  postgres_nightly_build_ruby31:\n    jobs:\n      - notify_start:\n          <<: *only-master-filter\n      - deps_bundler_postgres:\n          executor: builder-ruby31\n      - dependencies_npm:\n          executor: builder-ruby31\n      - assets_precompile:\n          executor: builder-ruby31\n          requires:\n            - deps_bundler_postgres\n            - dependencies_npm\n      - unit-postgres:\n          executor: builder-with-postgres-ruby31\n          requires:\n            - deps_bundler_postgres\n      - functional-postgres:\n          executor: builder-with-postgres-ruby31\n          requires:\n            - assets_precompile\n      - integration-postgres:\n          executor: builder-with-postgres-ruby31\n          requires:\n            - assets_precompile\n      - rspec-postgres:\n          executor: builder-with-postgres-ruby31\n          requires:\n            - deps_bundler_postgres\n      - cucumber-postgres:\n          executor: cucumber-with-postgres-ruby31\n          requires:\n            - assets_precompile\n      - notify_success:\n          requires:\n            - rspec-postgres\n            - unit-postgres\n            - cucumber-postgres\n            - integration-postgres\n            - functional-postgres\n          <<: *only-master-filter\n    <<: *nightly-trigger\n\n  oracle_nightly_build_ruby31:\n    jobs:\n      - notify_start:\n          <<: *only-master-filter\n      - deps_bundler_oracle:\n          executor: builder-ruby31\n      - dependencies_npm:\n          executor: builder-ruby31\n      - assets_precompile:\n          executor: builder-ruby31\n          requires:\n            - deps_bundler_oracle\n            - dependencies_npm\n      - unit-oracle:\n          executor: builder-with-oracle-ruby31\n          context:\n            - quay\n          requires:\n            - deps_bundler_oracle\n      - functional-oracle:\n          executor: builder-with-oracle-ruby31\n          context:\n            - quay\n          requires:\n            - assets_precompile\n      - integration-oracle:\n          executor: builder-with-oracle-ruby31\n          context:\n            - quay\n          requires:\n            - assets_precompile\n      - rspec-oracle:\n          executor: builder-with-oracle-ruby31\n          context:\n            - quay\n          requires:\n            - deps_bundler_oracle\n      - cucumber-oracle:\n          executor: cucumber-with-oracle-ruby31\n          context:\n            - quay\n          requires:\n            - assets_precompile\n      - notify_success:\n          requires:\n            - rspec-oracle\n            - unit-oracle\n            - cucumber-oracle\n            - integration-oracle\n            - functional-oracle\n          <<: *only-master-filter\n    <<: *nightly-trigger\n\n  javascript_nightly_build_ruby31:\n    jobs:\n      - notify_start:\n          <<: *only-master-filter\n      - dependencies_bundler:\n          executor: builder-ruby31\n      - dependencies_npm:\n          executor: builder-ruby31\n      - assets_precompile:\n          executor: builder-ruby31\n          requires:\n            - dependencies_bundler\n            - dependencies_npm\n      - licenses:\n          executor: builder-ruby31\n          requires:\n            - dependencies_bundler\n      - lint:\n          executor: builder-ruby31\n          requires:\n            - dependencies_npm\n      - jest:\n          executor: builder-ruby31\n          requires:\n            - dependencies_npm\n      - notify_success:\n          requires:\n            - licenses\n            - lint\n            - jest\n          <<: *only-master-filter\n    <<: *nightly-trigger\n"
        },
        "static_files": {
            "public/countries.json": "{\"countries\":[{\"code\":\"AD\",\"name\":\"Andorra\",\"currency\":\"EUR\"},{\"code\":\"AE\",\"name\":\"United Arab Emirates\",\"currency\":\"AED\"},{\"code\":\"AF\",\"name\":\"Afghanistan\",\"currency\":\"AFN\"},{\"code\":\"AG\",\"name\":\"Antigua and Barbuda\",\"currency\":\"XCD\"},{\"code\":\"AI\",\"name\":\"Anguilla\",\"currency\":\"XCD\"},{\"code\":\"AL\",\"name\":\"Albania\",\"currency\":\"ALL\"},{\"code\":\"AM\",\"name\":\"Armenia\",\"currency\":\"AMD\"},{\"code\":\"AO\",\"name\":\"Angola\",\"currency\":\"AOA\"},{\"code\":\"AQ\",\"name\":\"Antarctica\",\"currency\":\"\"},{\"code\":\"AR\",\"name\":\"Argentina\",\"currency\":\"ARS\"},{\"code\":\"AS\",\"name\":\"American Samoa\",\"currency\":\"USD\"},{\"code\":\"AT\",\"name\":\"Austria\",\"currency\":\"EUR\"},{\"code\":\"AU\",\"name\":\"Australia\",\"currency\":\"AUD\"},{\"code\":\"AW\",\"name\":\"Aruba\",\"currency\":\"AWG\"},{\"code\":\"AX\",\"name\":\"Aland Islands\",\"currency\":\"EUR\"},{\"code\":\"AZ\",\"name\":\"Azerbaijan\",\"currency\":\"AZN\"},{\"code\":\"BA\",\"name\":\"Bosnia and Herzegovina\",\"currency\":\"BAM\"},{\"code\":\"BB\",\"name\":\"Barbados\",\"currency\":\"BBD\"},{\"code\":\"BD\",\"name\":\"Bangladesh\",\"currency\":\"BDT\"},{\"code\":\"BE\",\"name\":\"Belgium\",\"currency\":\"EUR\"},{\"code\":\"BF\",\"name\":\"Burkina Faso\",\"currency\":\"XOF\"},{\"code\":\"BG\",\"name\":\"Bulgaria\",\"currency\":\"BGN\"},{\"code\":\"BH\",\"name\":\"Bahrain\",\"currency\":\"BHD\"},{\"code\":\"BI\",\"name\":\"Burundi\",\"currency\":\"BIF\"},{\"code\":\"BJ\",\"name\":\"Benin\",\"currency\":\"XOF\"},{\"code\":\"BL\",\"name\":\"Saint Barthelemy\",\"currency\":\"EUR\"},{\"code\":\"BM\",\"name\":\"Bermuda\",\"currency\":\"BMD\"},{\"code\":\"BN\",\"name\":\"Brunei\",\"currency\":\"BND\"},{\"code\":\"BO\",\"name\":\"Bolivia\",\"currency\":\"BOB\"},{\"code\":\"BQ\",\"name\":\"Bonaire, Saint Eustatius and Saba \",\"currency\":\"USD\"},{\"code\":\"BR\",\"name\":\"Brazil\",\"currency\":\"BRL\"},{\"code\":\"BS\",\"name\":\"Bahamas\",\"currency\":\"BSD\"},{\"code\":\"BT\",\"name\":\"Bhutan\",\"currency\":\"BTN\"},{\"code\":\"BV\",\"name\":\"Bouvet Island\",\"currency\":\"NOK\"},{\"code\":\"BW\",\"name\":\"Botswana\",\"currency\":\"BWP\"},{\"code\":\"BY\",\"name\":\"Belarus\",\"currency\":\"BYN\"},{\"code\":\"BZ\",\"name\":\"Belize\",\"currency\":\"BZD\"},{\"code\":\"CA\",\"name\":\"Canada\",\"currency\":\"CAD\"},{\"code\":\"CC\",\"name\":\"Cocos Islands\",\"currency\":\"AUD\"},{\"code\":\"CD\",\"name\":\"Democratic Republic of the Congo\",\"currency\":\"CDF\"},{\"code\":\"CF\",\"name\":\"Central African Republic\",\"currency\":\"XAF\"},{\"code\":\"CG\",\"name\":\"Republic of the Congo\",\"currency\":\"XAF\"},{\"code\":\"CH\",\"name\":\"Switzerland\",\"currency\":\"CHF\"},{\"code\":\"CI\",\"name\":\"Ivory Coast\",\"currency\":\"XOF\"},{\"code\":\"CK\",\"name\":\"Cook Islands\",\"currency\":\"NZD\"},{\"code\":\"CL\",\"name\":\"Chile\",\"currency\":\"CLP\"},{\"code\":\"CM\",\"name\":\"Cameroon\",\"currency\":\"XAF\"},{\"code\":\"CN\",\"name\":\"China\",\"currency\":\"CNY\"},{\"code\":\"CO\",\"name\":\"Colombia\",\"currency\":\"COP\"},{\"code\":\"CR\",\"name\":\"Costa Rica\",\"currency\":\"CRC\"},{\"code\":\"CU\",\"name\":\"Cuba\",\"currency\":\"CUP\"},{\"code\":\"CV\",\"name\":\"Cabo Verde\",\"currency\":\"CVE\"},{\"code\":\"CW\",\"name\":\"Curacao\",\"currency\":\"ANG\"},{\"code\":\"CX\",\"name\":\"Christmas Island\",\"currency\":\"AUD\"},{\"code\":\"CY\",\"name\":\"Cyprus\",\"currency\":\"EUR\"},{\"code\":\"CZ\",\"name\":\"Czechia\",\"currency\":\"CZK\"},{\"code\":\"DE\",\"name\":\"Germany\",\"currency\":\"EUR\"},{\"code\":\"DJ\",\"name\":\"Djibouti\",\"currency\":\"DJF\"},{\"code\":\"DK\",\"name\":\"Denmark\",\"currency\":\"DKK\"},{\"code\":\"DM\",\"name\":\"Dominica\",\"currency\":\"XCD\"},{\"code\":\"DO\",\"name\":\"Dominican Republic\",\"currency\":\"DOP\"},{\"code\":\"DZ\",\"name\":\"Algeria\",\"currency\":\"DZD\"},{\"code\":\"EC\",\"name\":\"Ecuador\",\"currency\":\"USD\"},{\"code\":\"EE\",\"name\":\"Estonia\",\"currency\":\"EUR\"},{\"code\":\"EG\",\"name\":\"Egypt\",\"currency\":\"EGP\"},{\"code\":\"EH\",\"name\":\"Western Sahara\",\"currency\":\"MAD\"},{\"code\":\"ER\",\"name\":\"Eritrea\",\"currency\":\"ERN\"},{\"code\":\"ES\",\"name\":\"Spain\",\"currency\":\"EUR\"},{\"code\":\"ET\",\"name\":\"Ethiopia\",\"currency\":\"ETB\"},{\"code\":\"FI\",\"name\":\"Finland\",\"currency\":\"EUR\"},{\"code\":\"FJ\",\"name\":\"Fiji\",\"currency\":\"FJD\"},{\"code\":\"FK\",\"name\":\"Falkland Islands\",\"currency\":\"FKP\"},{\"code\":\"FM\",\"name\":\"Micronesia\",\"currency\":\"USD\"},{\"code\":\"FO\",\"name\":\"Faroe Islands\",\"currency\":\"DKK\"},{\"code\":\"FR\",\"name\":\"France\",\"currency\":\"EUR\"},{\"code\":\"GA\",\"name\":\"Gabon\",\"currency\":\"XAF\"},{\"code\":\"GB\",\"name\":\"United Kingdom\",\"currency\":\"GBP\"},{\"code\":\"GD\",\"name\":\"Grenada\",\"currency\":\"XCD\"},{\"code\":\"GE\",\"name\":\"Georgia\",\"currency\":\"GEL\"},{\"code\":\"GF\",\"name\":\"French Guiana\",\"currency\":\"EUR\"},{\"code\":\"GG\",\"name\":\"Guernsey\",\"currency\":\"GBP\"},{\"code\":\"GH\",\"name\":\"Ghana\",\"currency\":\"GHS\"},{\"code\":\"GI\",\"name\":\"Gibraltar\",\"currency\":\"GIP\"},{\"code\":\"GL\",\"name\":\"Greenland\",\"currency\":\"DKK\"},{\"code\":\"GM\",\"name\":\"Gambia\",\"currency\":\"GMD\"},{\"code\":\"GN\",\"name\":\"Guinea\",\"currency\":\"GNF\"},{\"code\":\"GP\",\"name\":\"Guadeloupe\",\"currency\":\"EUR\"},{\"code\":\"GQ\",\"name\":\"Equatorial Guinea\",\"currency\":\"XAF\"},{\"code\":\"GR\",\"name\":\"Greece\",\"currency\":\"EUR\"},{\"code\":\"GS\",\"name\":\"South Georgia and the South Sandwich Islands\",\"currency\":\"GBP\"},{\"code\":\"GT\",\"name\":\"Guatemala\",\"currency\":\"GTQ\"},{\"code\":\"GU\",\"name\":\"Guam\",\"currency\":\"USD\"},{\"code\":\"GW\",\"name\":\"Guinea-Bissau\",\"currency\":\"XOF\"},{\"code\":\"GY\",\"name\":\"Guyana\",\"currency\":\"GYD\"},{\"code\":\"HK\",\"name\":\"Hong Kong\",\"currency\":\"HKD\"},{\"code\":\"HM\",\"name\":\"Heard Island and McDonald Islands\",\"currency\":\"AUD\"},{\"code\":\"HN\",\"name\":\"Honduras\",\"currency\":\"HNL\"},{\"code\":\"HR\",\"name\":\"Croatia\",\"currency\":\"HRK\"},{\"code\":\"HT\",\"name\":\"Haiti\",\"currency\":\"HTG\"},{\"code\":\"HU\",\"name\":\"Hungary\",\"currency\":\"HUF\"},{\"code\":\"ID\",\"name\":\"Indonesia\",\"currency\":\"IDR\"},{\"code\":\"IE\",\"name\":\"Ireland\",\"currency\":\"EUR\"},{\"code\":\"IL\",\"name\":\"Israel\",\"currency\":\"ILS\"},{\"code\":\"IM\",\"name\":\"Isle of Man\",\"currency\":\"GBP\"},{\"code\":\"IN\",\"name\":\"India\",\"currency\":\"INR\"},{\"code\":\"IO\",\"name\":\"British Indian Ocean Territory\",\"currency\":\"USD\"},{\"code\":\"IQ\",\"name\":\"Iraq\",\"currency\":\"IQD\"},{\"code\":\"IR\",\"name\":\"Iran\",\"currency\":\"IRR\"},{\"code\":\"IS\",\"name\":\"Iceland\",\"currency\":\"ISK\"},{\"code\":\"IT\",\"name\":\"Italy\",\"currency\":\"EUR\"},{\"code\":\"JE\",\"name\":\"Jersey\",\"currency\":\"GBP\"},{\"code\":\"JM\",\"name\":\"Jamaica\",\"currency\":\"JMD\"},{\"code\":\"JO\",\"name\":\"Jordan\",\"currency\":\"JOD\"},{\"code\":\"JP\",\"name\":\"Japan\",\"currency\":\"JPY\"},{\"code\":\"KE\",\"name\":\"Kenya\",\"currency\":\"KES\"},{\"code\":\"KG\",\"name\":\"Kyrgyzstan\",\"currency\":\"KGS\"},{\"code\":\"KH\",\"name\":\"Cambodia\",\"currency\":\"KHR\"},{\"code\":\"KI\",\"name\":\"Kiribati\",\"currency\":\"AUD\"},{\"code\":\"KM\",\"name\":\"Comoros\",\"currency\":\"KMF\"},{\"code\":\"KN\",\"name\":\"Saint Kitts and Nevis\",\"currency\":\"XCD\"},{\"code\":\"KP\",\"name\":\"North Korea\",\"currency\":\"KPW\"},{\"code\":\"KR\",\"name\":\"South Korea\",\"currency\":\"KRW\"},{\"code\":\"XK\",\"name\":\"Kosovo\",\"currency\":\"EUR\"},{\"code\":\"KW\",\"name\":\"Kuwait\",\"currency\":\"KWD\"},{\"code\":\"KY\",\"name\":\"Cayman Islands\",\"currency\":\"KYD\"},{\"code\":\"KZ\",\"name\":\"Kazakhstan\",\"currency\":\"KZT\"},{\"code\":\"LA\",\"name\":\"Laos\",\"currency\":\"LAK\"},{\"code\":\"LB\",\"name\":\"Lebanon\",\"currency\":\"LBP\"},{\"code\":\"LC\",\"name\":\"Saint Lucia\",\"currency\":\"XCD\"},{\"code\":\"LI\",\"name\":\"Liechtenstein\",\"currency\":\"CHF\"},{\"code\":\"LK\",\"name\":\"Sri Lanka\",\"currency\":\"LKR\"},{\"code\":\"LR\",\"name\":\"Liberia\",\"currency\":\"LRD\"},{\"code\":\"LS\",\"name\":\"Lesotho\",\"currency\":\"LSL\"},{\"code\":\"LT\",\"name\":\"Lithuania\",\"currency\":\"EUR\"},{\"code\":\"LU\",\"name\":\"Luxembourg\",\"currency\":\"EUR\"},{\"code\":\"LV\",\"name\":\"Latvia\",\"currency\":\"EUR\"},{\"code\":\"LY\",\"name\":\"Libya\",\"currency\":\"LYD\"},{\"code\":\"MA\",\"name\":\"Morocco\",\"currency\":\"MAD\"},{\"code\":\"MC\",\"name\":\"Monaco\",\"currency\":\"EUR\"},{\"code\":\"MD\",\"name\":\"Moldova\",\"currency\":\"MDL\"},{\"code\":\"ME\",\"name\":\"Montenegro\",\"currency\":\"EUR\"},{\"code\":\"MF\",\"name\":\"Saint Martin\",\"currency\":\"EUR\"},{\"code\":\"MG\",\"name\":\"Madagascar\",\"currency\":\"MGA\"},{\"code\":\"MH\",\"name\":\"Marshall Islands\",\"currency\":\"USD\"},{\"code\":\"MK\",\"name\":\"North Macedonia\",\"currency\":\"MKD\"},{\"code\":\"ML\",\"name\":\"Mali\",\"currency\":\"XOF\"},{\"code\":\"MM\",\"name\":\"Myanmar\",\"currency\":\"MMK\"},{\"code\":\"MN\",\"name\":\"Mongolia\",\"currency\":\"MNT\"},{\"code\":\"MO\",\"name\":\"Macao\",\"currency\":\"MOP\"},{\"code\":\"MP\",\"name\":\"Northern Mariana Islands\",\"currency\":\"USD\"},{\"code\":\"MQ\",\"name\":\"Martinique\",\"currency\":\"EUR\"},{\"code\":\"MR\",\"name\":\"Mauritania\",\"currency\":\"MRU\"},{\"code\":\"MS\",\"name\":\"Montserrat\",\"currency\":\"XCD\"},{\"code\":\"MT\",\"name\":\"Malta\",\"currency\":\"EUR\"},{\"code\":\"MU\",\"name\":\"Mauritius\",\"currency\":\"MUR\"},{\"code\":\"MV\",\"name\":\"Maldives\",\"currency\":\"MVR\"},{\"code\":\"MW\",\"name\":\"Malawi\",\"currency\":\"MWK\"},{\"code\":\"MX\",\"name\":\"Mexico\",\"currency\":\"MXN\"},{\"code\":\"MY\",\"name\":\"Malaysia\",\"currency\":\"MYR\"},{\"code\":\"MZ\",\"name\":\"Mozambique\",\"currency\":\"MZN\"},{\"code\":\"NA\",\"name\":\"Namibia\",\"currency\":\"NAD\"},{\"code\":\"NC\",\"name\":\"New Caledonia\",\"currency\":\"XPF\"},{\"code\":\"NE\",\"name\":\"Niger\",\"currency\":\"XOF\"},{\"code\":\"NF\",\"name\":\"Norfolk Island\",\"currency\":\"AUD\"},{\"code\":\"NG\",\"name\":\"Nigeria\",\"currency\":\"NGN\"},{\"code\":\"NI\",\"name\":\"Nicaragua\",\"currency\":\"NIO\"},{\"code\":\"NL\",\"name\":\"Netherlands\",\"currency\":\"EUR\"},{\"code\":\"NO\",\"name\":\"Norway\",\"currency\":\"NOK\"},{\"code\":\"NP\",\"name\":\"Nepal\",\"currency\":\"NPR\"},{\"code\":\"NR\",\"name\":\"Nauru\",\"currency\":\"AUD\"},{\"code\":\"NU\",\"name\":\"Niue\",\"currency\":\"NZD\"},{\"code\":\"NZ\",\"name\":\"New Zealand\",\"currency\":\"NZD\"},{\"code\":\"OM\",\"name\":\"Oman\",\"currency\":\"OMR\"},{\"code\":\"PA\",\"name\":\"Panama\",\"currency\":\"PAB\"},{\"code\":\"PE\",\"name\":\"Peru\",\"currency\":\"PEN\"},{\"code\":\"PF\",\"name\":\"French Polynesia\",\"currency\":\"XPF\"},{\"code\":\"PG\",\"name\":\"Papua New Guinea\",\"currency\":\"PGK\"},{\"code\":\"PH\",\"name\":\"Philippines\",\"currency\":\"PHP\"},{\"code\":\"PK\",\"name\":\"Pakistan\",\"currency\":\"PKR\"},{\"code\":\"PL\",\"name\":\"Poland\",\"currency\":\"PLN\"},{\"code\":\"PM\",\"name\":\"Saint Pierre and Miquelon\",\"currency\":\"EUR\"},{\"code\":\"PN\",\"name\":\"Pitcairn\",\"currency\":\"NZD\"},{\"code\":\"PR\",\"name\":\"Puerto Rico\",\"currency\":\"USD\"},{\"code\":\"PS\",\"name\":\"Palestinian Territory\",\"currency\":\"ILS\"},{\"code\":\"PT\",\"name\":\"Portugal\",\"currency\":\"EUR\"},{\"code\":\"PW\",\"name\":\"Palau\",\"currency\":\"USD\"},{\"code\":\"PY\",\"name\":\"Paraguay\",\"currency\":\"PYG\"},{\"code\":\"QA\",\"name\":\"Qatar\",\"currency\":\"QAR\"},{\"code\":\"RE\",\"name\":\"Reunion\",\"currency\":\"EUR\"},{\"code\":\"RO\",\"name\":\"Romania\",\"currency\":\"RON\"},{\"code\":\"RS\",\"name\":\"Serbia\",\"currency\":\"RSD\"},{\"code\":\"RU\",\"name\":\"Russia\",\"currency\":\"RUB\"},{\"code\":\"RW\",\"name\":\"Rwanda\",\"currency\":\"RWF\"},{\"code\":\"SA\",\"name\":\"Saudi Arabia\",\"currency\":\"SAR\"},{\"code\":\"SB\",\"name\":\"Solomon Islands\",\"currency\":\"SBD\"},{\"code\":\"SC\",\"name\":\"Seychelles\",\"currency\":\"SCR\"},{\"code\":\"SD\",\"name\":\"Sudan\",\"currency\":\"SDG\"},{\"code\":\"SS\",\"name\":\"South Sudan\",\"currency\":\"SSP\"},{\"code\":\"SE\",\"name\":\"Sweden\",\"currency\":\"SEK\"},{\"code\":\"SG\",\"name\":\"Singapore\",\"currency\":\"SGD\"},{\"code\":\"SH\",\"name\":\"Saint Helena\",\"currency\":\"SHP\"},{\"code\":\"SI\",\"name\":\"Slovenia\",\"currency\":\"EUR\"},{\"code\":\"SJ\",\"name\":\"Svalbard and Jan Mayen\",\"currency\":\"NOK\"},{\"code\":\"SK\",\"name\":\"Slovakia\",\"currency\":\"EUR\"},{\"code\":\"SL\",\"name\":\"Sierra Leone\",\"currency\":\"SLL\"},{\"code\":\"SM\",\"name\":\"San Marino\",\"currency\":\"EUR\"},{\"code\":\"SN\",\"name\":\"Senegal\",\"currency\":\"XOF\"},{\"code\":\"SO\",\"name\":\"Somalia\",\"currency\":\"SOS\"},{\"code\":\"SR\",\"name\":\"Suriname\",\"currency\":\"SRD\"},{\"code\":\"ST\",\"name\":\"Sao Tome and Principe\",\"currency\":\"STD\"},{\"code\":\"SV\",\"name\":\"El Salvador\",\"currency\":\"USD\"},{\"code\":\"SX\",\"name\":\"Sint Maarten\",\"currency\":\"ANG\"},{\"code\":\"SY\",\"name\":\"Syria\",\"currency\":\"SYP\"},{\"code\":\"SZ\",\"name\":\"Eswatini\",\"currency\":\"SZL\"},{\"code\":\"TC\",\"name\":\"Turks and Caicos Islands\",\"currency\":\"USD\"},{\"code\":\"TD\",\"name\":\"Chad\",\"currency\":\"XAF\"},{\"code\":\"TF\",\"name\":\"French Southern Territories\",\"currency\":\"EUR\"},{\"code\":\"TG\",\"name\":\"Togo\",\"currency\":\"XOF\"},{\"code\":\"TH\",\"name\":\"Thailand\",\"currency\":\"THB\"},{\"code\":\"TJ\",\"name\":\"Tajikistan\",\"currency\":\"TJS\"},{\"code\":\"TK\",\"name\":\"Tokelau\",\"currency\":\"NZD\"},{\"code\":\"TL\",\"name\":\"Timor Leste\",\"currency\":\"USD\"},{\"code\":\"TM\",\"name\":\"Turkmenistan\",\"currency\":\"TMT\"},{\"code\":\"TN\",\"name\":\"Tunisia\",\"currency\":\"TND\"},{\"code\":\"TO\",\"name\":\"Tonga\",\"currency\":\"TOP\"},{\"code\":\"TR\",\"name\":\"Turkey\",\"currency\":\"TRY\"},{\"code\":\"TT\",\"name\":\"Trinidad and Tobago\",\"currency\":\"TTD\"},{\"code\":\"TV\",\"name\":\"Tuvalu\",\"currency\":\"AUD\"},{\"code\":\"TW\",\"name\":\"Taiwan\",\"currency\":\"TWD\"},{\"code\":\"TZ\",\"name\":\"Tanzania\",\"currency\":\"TZS\"},{\"code\":\"UA\",\"name\":\"Ukraine\",\"currency\":\"UAH\"},{\"code\":\"UG\",\"name\":\"Uganda\",\"currency\":\"UGX\"},{\"code\":\"UM\",\"name\":\"United States Minor Outlying Islands\",\"currency\":\"USD\"},{\"code\":\"US\",\"name\":\"United States\",\"currency\":\"USD\"},{\"code\":\"UY\",\"name\":\"Uruguay\",\"currency\":\"UYU\"},{\"code\":\"UZ\",\"name\":\"Uzbekistan\",\"currency\":\"UZS\"},{\"code\":\"VA\",\"name\":\"Vatican\",\"currency\":\"EUR\"},{\"code\":\"VC\",\"name\":\"Saint Vincent and the Grenadines\",\"currency\":\"XCD\"},{\"code\":\"VE\",\"name\":\"Venezuela\",\"currency\":\"VES\"},{\"code\":\"VG\",\"name\":\"British Virgin Islands\",\"currency\":\"USD\"},{\"code\":\"VI\",\"name\":\"U.S. Virgin Islands\",\"currency\":\"USD\"},{\"code\":\"VN\",\"name\":\"Vietnam\",\"currency\":\"VND\"},{\"code\":\"VU\",\"name\":\"Vanuatu\",\"currency\":\"VUV\"},{\"code\":\"WF\",\"name\":\"Wallis and Futuna\",\"currency\":\"XPF\"},{\"code\":\"WS\",\"name\":\"Samoa\",\"currency\":\"WST\"},{\"code\":\"YE\",\"name\":\"Yemen\",\"currency\":\"YER\"},{\"code\":\"YT\",\"name\":\"Mayotte\",\"currency\":\"EUR\"},{\"code\":\"ZA\",\"name\":\"South Africa\",\"currency\":\"ZAR\"},{\"code\":\"ZM\",\"name\":\"Zambia\",\"currency\":\"ZMW\"},{\"code\":\"ZW\",\"name\":\"Zimbabwe\",\"currency\":\"ZWL\"},{\"code\":\"CS\",\"name\":\"Serbia and Montenegro\",\"currency\":\"RSD\"},{\"code\":\"AN\",\"name\":\"Netherlands Antilles\",\"currency\":\"ANG\"}]}",
            "public/dev-portal-assets/README.md": "# cdn\n3scale Assets CDN\n",
            "public/echo-api-3.0.json": "{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"version\": \"1.0.0\",\n    \"title\": \"Echo API\",\n    \"description\": \"A sample echo API\"\n  },\n  \"paths\": {\n    \"/\": {\n      \"get\": {\n        \"description\": \"Echo API with no parameters\",\n        \"operationId\": \"echo_no_params\",\n        \"parameters\": [\n          {\n            \"name\": \"user_key\",\n            \"in\": \"query\",\n            \"description\": \"Your API access key\",\n            \"required\": true,\n            \"x-data-threescale-name\": \"user_keys\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/{echo}\": {\n      \"get\": {\n        \"description\": \"Echo API with parameters\",\n        \"operationId\": \"echo_with_params\",\n        \"parameters\": [\n          {\n            \"name\": \"echo\",\n            \"in\": \"path\",\n            \"description\": \"The string to be echoed\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"user_key\",\n            \"in\": \"query\",\n            \"description\": \"Your API access key\",\n            \"required\": true,\n            \"x-data-threescale-name\": \"user_keys\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ResponseModel\"\n                }\n              }\n            }\n          },\n          \"default\": {\n            \"description\": \"unexpected error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              },\n              \"application/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              },\n              \"text/xml\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              },\n              \"text/html\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/ErrorModel\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"servers\": [\n    {\n      \"url\": \"http://echo-api.3scale.net/\"\n    }\n  ],\n  \"components\": {\n    \"schemas\": {\n      \"ResponseModel\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"method\",\n          \"path\",\n          \"args\",\n          \"headers\"\n        ],\n        \"properties\": {\n          \"method\": {\n            \"type\": \"string\"\n          },\n          \"path\": {\n            \"type\": \"string\"\n          },\n          \"args\": {\n            \"type\": \"string\"\n          },\n          \"headers\": {\n            \"type\": \"object\"\n          }\n        }\n      },\n      \"ErrorModel\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"message\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\",\n            \"format\": \"int32\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n"
        }
    },
    "project_structure": {
        "files": [
            ".env",
            ".gitignore",
            "Dockerfile",
            "Makefile",
            "README.md",
            "docker-compose.yml",
            "entrypoint.sh"
        ],
        "folders": [
            "config",
            "contrib"
        ]
    }
}