{
    "docker_info": {
        "base_image": "quay.io/centos/centos:stream9",
        "multi_stage_build": true,
        "exposed_ports": [
            "3000"
        ],
        "user": [
            "root",
            "1001",
            "0"
        ],
        "labels": [],
        "health_checks": [],
        "build_args": [],
        "envs": [
            "ENV RUBY_MAJOR_VERSION=3 \\",
            "ENV RUBY_VERSION=\"${RUBY_MAJOR_VERSION}.${RUBY_MINOR_VERSION}\"",
            "ENV RUBY_MAJOR_VERSION=3 \\",
            "ENV RUBY_VERSION=\"${RUBY_MAJOR_VERSION}.${RUBY_MINOR_VERSION}\"",
            "ENV THINKING_SPHINX_ADDRESS=0.0.0.0 \\"
        ],
        "copy_instructions": [
            "WORKDIR /opt/system",
            "ADD . ./",
            "WORKDIR $HOME",
            "COPY --from=builder /opt/system/ .",
            "COPY --from=builder /tmp/memkind-*/jemalloc/lib/libjemalloc.so* /usr/local/lib64",
            "COPY --from=builder /usr/local/share/gems /usr/local/share/",
            "COPY --from=builder /usr/local/bin/bundle* /usr/local/bin",
            "COPY --from=sphinx-config /opt/system/config/standalone.sphinx.conf /opt/system/config/"
        ],
        "execution": [
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/usr/libexec/catatonit/catatonit\",",
                    "\"--\",",
                    "\"/opt/system/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"unicorn\",",
                    "\"-c\",",
                    "\"config/unicorn.rb\",",
                    "\"-E\",",
                    "\"${RAILS_ENV}\",",
                    "\"config.ru\"]"
                ]
            }
        ],
        "run": [
            [
                "cp config/examples/*.yml config/ \\",
                "&& cp openshift/system/config/* config/"
            ],
            [
                "dnf -y --enablerepo=crb --setopt=module_stream_switch=True module enable ruby:${RUBY_VERSION} nodejs:18 \\",
                "&& dnf install -y --enablerepo=crb --setopt=skip_missing_names_on_install=False,tsflags=nodocs shared-mime-info make automake gcc gcc-c++ postgresql rubygem-irb rubygem-rdoc ruby-devel nodejs libpq-devel mysql-devel gd-devel libxml2-devel libxslt-devel git 'dnf-command(download)' cpio",
                "&& BUNDLER_VERSION=$(awk '/BUNDLED WITH/ { getline; print $1 }' Gemfile.lock)",
                "&& gem install --no-document bundler:$BUNDLER_VERSION",
                "&& bundle config build.nokogiri --use-system-libraries",
                "&& bundle config set --local without development:test:licenses",
                "&& bundle config set --local deployment true",
                "&& bundle install --jobs $(grep -c processor /proc/cpuinfo) --retry=5",
                "&& npm install -g yarn",
                "&& yarn install:safe --no-progress",
                "# TODO: update to SECRET_KEY_BASE_DUMMY=1 when we upgrade to Rails 7.1"
            ],
            [
                "cd /tmp \\",
                "&& dnf download --source memkind",
                "&& rpm2cpio memkind-*.src.rpm | cpio -idmv \"memkind-*.tar.gz\"",
                "&& tar xvfz memkind-*.tar.gz",
                "&& cd memkind-*/jemalloc/",
                "&& ./autogen.sh && ./configure --libdir=/usr/local/lib64/ && make"
            ],
            [
                "dnf -y --enablerepo=crb module enable ruby:${RUBY_VERSION} nodejs:18 \\",
                "&& dnf install -y --enablerepo=crb --setopt=skip_missing_names_on_install=False,tsflags=nodocs shared-mime-info postgresql rubygem-irb rubygem-rdoc ruby libpq mysql mysql-libs gd git liberation-sans-fonts file libxml2 libxslt catatonit",
                "&& dnf -y clean all"
            ],
            [
                "echo /usr/local/lib64 > /etc/ld.so.conf.d/jemalloc.conf \\",
                "&& ldconfig && ldconfig -p | grep jemalloc"
            ],
            [
                "bundle config set --local without development:test:licenses:assets \\",
                "&& bundle exec rake tmp:create",
                "&& umask 0002",
                "&& mkdir -p db/sphinx tmp/prometheus-client-mmap-dir",
                "&& chmod g+w -vfR log tmp public/assets db/sphinx",
                "&& rm -f log/*.log",
                "&& chmod g+w /opt/system /opt/system/config"
            ],
            [
                "git config --global --add safe.directory '*'",
                ""
            ],
            [
                "ln -s openshift/system/entrypoint.sh . \\",
                "&& ln -s /opt/system/openshift/system/contrib/container-entrypoint /usr/local/bin/"
            ],
            [
                "rm -rf vendor/oracle/ test/ spec/ features/ lib/proxy \\",
                "&& cp config/oracle/*.ini /etc/"
            ],
            [
                "dnf install --enablerepo=crb -y mysql-server mysql-test \\",
                "&& setcap -r /usr/libexec/mysqld",
                "&& setpriv --reuid 27 --regid 27 --clear-groups mysqld --initialize-insecure",
                "&& (mysqld_safe &)",
                "&& bundle exec rake db:create db:schema:load openshift:thinking_sphinx:configure",
                "&& grep -q \"rt_field = account_id\" \"$THINKING_SPHINX_CONFIGURATION_FILE\"",
                "&& kill $(</run/mysqld/mysqld.pid)"
            ]
        ]
    }
}