{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.okta.developer.store</groupId>\n    <artifactId>store</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>jar</packaging>\n    <name>Store</name>\n\n    <repositories>\n        <!-- jhipster-needle-maven-repository -->\n    </repositories>\n\n    <pluginRepositories>\n        <!-- jhipster-needle-maven-plugin-repository -->\n    </pluginRepositories>\n\n    <!-- jhipster-needle-distribution-management -->\n\n    <properties>\n        <!-- Build properties -->\n        <maven.version>3.0.0</maven.version>\n        <java.version>1.8</java.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>\n        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n        <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>\n        <m2e.apt.activation>jdt_apt</m2e.apt.activation>\n        <run.addResources>false</run.addResources>\n        <!-- These remain empty unless the corresponding profile is active -->\n        <profile.swagger />\n        <profile.tls />\n\n        <!-- Dependency versions -->\n        <jhipster-dependencies.version>3.0.1</jhipster-dependencies.version>\n        <!-- The spring-boot version should match the one managed by\n        https://mvnrepository.com/artifact/io.github.jhipster/jhipster-dependencies/${jhipster-dependencies.version} -->\n        <spring-boot.version>2.1.4.RELEASE</spring-boot.version>\n        <mapstruct.version>1.3.0.Final</mapstruct.version>\n\n        <!-- Plugin versions -->\n        <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>\n        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>\n        <maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>\n        <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>\n        <!-- We can't go to 3.0.0-M2 as it has a regression. See https://issues.apache.org/jira/browse/MENFORCER-306 -->\n        <maven-enforcer-plugin.version>3.0.0-M1</maven-enforcer-plugin.version>\n        <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>\n        <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>\n        <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>\n        <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>\n        <maven-war-plugin.version>3.2.2</maven-war-plugin.version>\n        <git-commit-id-plugin.version>2.2.6</git-commit-id-plugin.version>\n        <jacoco-maven-plugin.version>0.8.3</jacoco-maven-plugin.version>\n        <jib-maven-plugin.version>0.9.11</jib-maven-plugin.version>\n        <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>\n        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>\n        <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>\n        <jacoco.reportFolder>${project.build.directory}/jacoco</jacoco.reportFolder>\n        <jacoco.utReportFile>${jacoco.reportFolder}/test.exec</jacoco.utReportFile>\n        <jacoco.itReportFile>${jacoco.reportFolder}/integrationTest.exec</jacoco.itReportFile>\n        <junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>\n        <junit.itReportFolder>${project.testresult.directory}/integrationTest</junit.itReportFolder>\n        <!-- jhipster-needle-maven-property -->\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>io.github.jhipster</groupId>\n                <artifactId>jhipster-dependencies</artifactId>\n                <version>${jhipster-dependencies.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <!-- jhipster-needle-maven-add-dependency-management -->\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.github.jhipster</groupId>\n            <artifactId>jhipster-framework</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-cache</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-hppc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.datatype</groupId>\n            <artifactId>jackson-datatype-jsr310</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.module</groupId>\n            <artifactId>jackson-module-afterburner</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.hazelcast</groupId>\n            <artifactId>hazelcast</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.hazelcast</groupId>\n            <artifactId>hazelcast-spring</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.jayway.jsonpath</groupId>\n            <artifactId>json-path</artifactId>\n            <scope>test</scope>\n            <!-- parent POM declares this dependency in default (compile) scope -->\n        </dependency>\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-swagger2</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.springfox</groupId>\n            <artifactId>springfox-bean-validators</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.flapdoodle.embed</groupId>\n            <artifactId>de.flapdoodle.embed.mongo</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>javax.cache</groupId>\n            <artifactId>cache-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>net.logstash.logback</groupId>\n            <artifactId>logstash-logback-encoder</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.github.mongobee</groupId>\n            <artifactId>mongobee</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mapstruct</groupId>\n            <artifactId>mapstruct-processor</artifactId>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-configuration-processor</artifactId>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-loader-tools</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-mongodb</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-logging</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-mail</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>junit</groupId>\n                    <artifactId>junit</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.zalando</groupId>\n            <artifactId>problem-spring-web</artifactId>\n        </dependency>\n        <!-- Spring Security OAuth 2.0 -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-oauth2-client</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>\n        </dependency>\n        <!-- Spring Cloud -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.retry</groupId>\n            <artifactId>spring-retry</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-openfeign</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-cloud-connectors</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-data</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.micrometer</groupId>\n            <artifactId>micrometer-registry-prometheus</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.dropwizard.metrics</groupId>\n            <artifactId>metrics-core</artifactId>\n        </dependency>\n        <!-- jhipster-needle-maven-add-dependency -->\n    </dependencies>\n\n    <build>\n        <defaultGoal>spring-boot:run</defaultGoal>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                    <annotationProcessorPaths>\n                        <path>\n                            <groupId>org.mapstruct</groupId>\n                            <artifactId>mapstruct-processor</artifactId>\n                            <version>${mapstruct.version}</version>\n                        </path>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin.version}</version>\n                <configuration>\n                    <source>8</source>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-eclipse-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-idea-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.sonarsource.scanner.maven</groupId>\n                <artifactId>sonar-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <mainClass>${start-class}</mainClass>\n                    <executable>true</executable>\n                    <fork>true</fork>\n                    <!--\n                    Enable the line below to have remote debugging of your application on port 5005\n                    <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                    -->\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>com.google.cloud.tools</groupId>\n                <artifactId>jib-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>properties-maven-plugin</artifactId>\n                <version>${properties-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <phase>initialize</phase>\n                        <goals>\n                            <goal>read-project-properties</goal>\n                        </goals>\n                        <configuration>\n                            <files>\n                                <file>sonar-project.properties</file>\n                            </files>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- jhipster-needle-maven-add-plugin -->\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>${maven-compiler-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>pl.project13.maven</groupId>\n                    <artifactId>git-commit-id-plugin</artifactId>\n                    <version>${git-commit-id-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>revision</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <failOnNoGitDirectory>false</failOnNoGitDirectory>\n                        <generateGitPropertiesFile>true</generateGitPropertiesFile>\n                        <includeOnlyProperties>\n                            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>\n                            <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>\n                            <includeOnlyProperty>^git.branch$</includeOnlyProperty>\n                        </includeOnlyProperties>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.jacoco</groupId>\n                    <artifactId>jacoco-maven-plugin</artifactId>\n                    <version>${jacoco-maven-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>pre-unit-tests</id>\n                            <goals>\n                                <goal>prepare-agent</goal>\n                            </goals>\n                            <configuration>\n                                <!-- Sets the path to the file which contains the execution data. -->\n                                <destFile>${jacoco.utReportFile}</destFile>\n                            </configuration>\n                        </execution>\n                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->\n                        <execution>\n                            <id>post-unit-test</id>\n                            <phase>test</phase>\n                            <goals>\n                                <goal>report</goal>\n                            </goals>\n                            <configuration>\n                                <dataFile>${jacoco.utReportFile}</dataFile>\n                                <outputDirectory>${jacoco.reportFolder}</outputDirectory>\n                            </configuration>\n                        </execution>\n                        <execution>\n                            <id>pre-integration-tests</id>\n                            <goals>\n                                <goal>prepare-agent-integration</goal>\n                            </goals>\n                            <configuration>\n                                <!-- Sets the path to the file which contains the execution data. -->\n                                <destFile>${jacoco.itReportFile}</destFile>\n                            </configuration>\n                        </execution>\n                        <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->\n                        <execution>\n                            <id>post-integration-tests</id>\n                            <phase>post-integration-test</phase>\n                            <goals>\n                                <goal>report-integration</goal>\n                            </goals>\n                            <configuration>\n                                <dataFile>${jacoco.itReportFile}</dataFile>\n                                <outputDirectory>${jacoco.reportFolder}</outputDirectory>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>com.google.cloud.tools</groupId>\n                    <artifactId>jib-maven-plugin</artifactId>\n                    <version>${jib-maven-plugin.version}</version>\n                    <configuration>\n                        <from>\n                            <image>adoptopenjdk/openjdk11:alpine-jre</image>\n                        </from>\n                        <to>\n                            <image>store:latest</image>\n                        </to>\n                        <container>\n                            <entrypoint>\n                                <shell>sh</shell>\n                                <option>-c</option>\n                                <arg>chmod +x /entrypoint.sh &amp;&amp; sync &amp;&amp; /entrypoint.sh</arg>\n                            </entrypoint>\n                            <ports>\n                                <port>8082</port>\n                                <port>5701/udp</port>\n                            </ports>\n                            <environment>\n                                <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>\n                                <JHIPSTER_SLEEP>0</JHIPSTER_SLEEP>\n                            </environment>\n                            <useCurrentTimestamp>true</useCurrentTimestamp>\n                        </container>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>${maven-clean-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-eclipse-plugin</artifactId>\n                    <version>${maven-eclipse-plugin.version}</version>\n                    <configuration>\n                        <downloadSources>true</downloadSources>\n                        <downloadJavadocs>true</downloadJavadocs>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>${maven-enforcer-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>enforce-versions</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                        </execution>\n                        <execution>\n                            <id>enforce-dependencyConvergence</id>\n                            <configuration>\n                                <rules>\n                                    <DependencyConvergence />\n                                </rules>\n                                <fail>false</fail>\n                            </configuration>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <rules>\n                            <requireMavenVersion>\n                                <message>You are running an older version of Maven. JHipster requires at least Maven ${maven.version}</message>\n                                <version>[${maven.version},)</version>\n                            </requireMavenVersion>\n                            <requireJavaVersion>\n                                <message>You are running an incompatible version of Java. JHipster supports JDK 8 to 12.</message>\n                                <version>[1.8,13)</version>\n                            </requireJavaVersion>\n                        </rules>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-idea-plugin</artifactId>\n                    <version>${maven-idea-plugin.version}</version>\n                    <configuration>\n                        <exclude>node_modules</exclude>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>${maven-resources-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>default-resources</id>\n                            <phase>validate</phase>\n                            <goals>\n                                <goal>copy-resources</goal>\n                            </goals>\n                            <configuration>\n                                <outputDirectory>${project.build.directory}/classes</outputDirectory>\n                                <useDefaultDelimiters>false</useDefaultDelimiters>\n                                <delimiters>\n                                    <delimiter>#</delimiter>\n                                </delimiters>\n                                <resources>\n                                    <resource>\n                                        <directory>src/main/resources/</directory>\n                                        <filtering>true</filtering>\n                                        <includes>\n                                            <include>config/*.yml</include>\n                                        </includes>\n                                    </resource>\n                                    <resource>\n                                        <directory>src/main/resources/</directory>\n                                        <filtering>false</filtering>\n                                        <excludes>\n                                            <exclude>config/*.yml</exclude>\n                                        </excludes>\n                                    </resource>\n                                </resources>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>${maven-surefire-plugin.version}</version>\n                    <configuration>\n                        <!-- Force alphabetical order to have a reproducible build -->\n                        <runOrder>alphabetical</runOrder>\n                        <reportsDirectory>${junit.utReportFolder}</reportsDirectory>\n                        <excludes>\n                            <exclude>**/*IT*</exclude>\n                            <exclude>**/*IntTest*</exclude>\n                        </excludes>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <version>${maven-failsafe-plugin.version}</version>\n                    <configuration>\n                        <!-- Due to spring-boot repackage, without adding this property test classes are not found\n                             See https://github.com/spring-projects/spring-boot/issues/6254 -->\n                        <classesDirectory>${project.build.outputDirectory}</classesDirectory>\n                        <!-- Force alphabetical order to have a reproducible build -->\n                        <runOrder>alphabetical</runOrder>\n                        <reportsDirectory>${junit.itReportFolder}</reportsDirectory>\n                        <includes>\n                            <include>**/*IT*</include>\n                            <include>**/*IntTest*</include>\n                        </includes>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>integration-test</id>\n                            <goals>\n                                <goal>integration-test</goal>\n                            </goals>\n                        </execution>\n                        <execution>\n                            <id>verify</id>\n                            <goals>\n                                <goal>verify</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.sonarsource.scanner.maven</groupId>\n                    <artifactId>sonar-maven-plugin</artifactId>\n                    <version>${sonar-maven-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-maven-plugin</artifactId>\n                    <version>${spring-boot.version}</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n    <profiles>\n        <profile>\n            <id>swagger</id>\n            <properties>\n                <profile.swagger>,swagger</profile.swagger>\n            </properties>\n        </profile>\n        <profile>\n            <id>tls</id>\n            <properties>\n                <profile.tls>,tls</profile.tls>\n            </properties>\n        </profile>\n        <profile>\n            <id>dev</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-devtools</artifactId>\n                    <optional>true</optional>\n                </dependency>\n            </dependencies>\n            <properties>\n                <!-- default Spring profiles -->\n                <spring.profiles.active>dev${profile.tls}</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <id>prod</id>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>\n            </dependencies>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-clean-plugin</artifactId>\n                        <configuration>\n                            <filesets>\n                                <fileset>\n                                    <directory>target/classes/static/</directory>\n                                </fileset>\n                            </filesets>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.springframework.boot</groupId>\n                        <artifactId>spring-boot-maven-plugin</artifactId>\n                        <configuration>\n                            <mainClass>${start-class}</mainClass>\n                            <executable>true</executable>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>build-info</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>pl.project13.maven</groupId>\n                        <artifactId>git-commit-id-plugin</artifactId>\n                    </plugin>\n                </plugins>\n            </build>\n            <properties>\n                <!-- default Spring profiles -->\n                <spring.profiles.active>prod${profile.swagger}</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <id>war</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-war-plugin</artifactId>\n                        <version>${maven-war-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>war</goal>\n                                </goals>\n                                <phase>package</phase>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <warSourceIncludes>WEB-INF/**,META-INF/**</warSourceIncludes>\n                            <failOnMissingWebXml>false</failOnMissingWebXml>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <!--\n                Profile for tracing requests with Zipkin.\n            -->\n            <id>zipkin</id>\n            <dependencies>\n                <dependency>\n                    <groupId>org.springframework.cloud</groupId>\n                    <artifactId>spring-cloud-starter-zipkin</artifactId>\n                </dependency>\n            </dependencies>\n        </profile>\n        <profile>\n            <!--\n                Profile for applying IDE-specific configuration.\n                At the moment it configures MapStruct and Hibernate JPA Metamodel Generator, which you need when working\n                with DTOs and entity filtering.\n            -->\n            <id>IDE</id>\n            <dependencies>\n                <dependency>\n                    <groupId>org.mapstruct</groupId>\n                    <artifactId>mapstruct-processor</artifactId>\n                </dependency>\n            </dependencies>\n        </profile>\n        <profile>\n            <!-- This is automatically activated when working in Eclipse -->\n            <id>eclipse</id>\n            <activation>\n                <property>\n                    <name>m2e.version</name>\n                </property>\n            </activation>\n            <dependencies>\n                <!-- The following dependency is added due to issue #9175-->\n                <dependency>\n                    <groupId>org.springframework.boot</groupId>\n                    <artifactId>spring-boot-starter-undertow</artifactId>\n                </dependency>\n            </dependencies>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <!--\n                            This plugin's configuration is used to store Eclipse m2e settings only.\n                            It has no influence on the Maven build itself.\n                            Remove when the m2e plugin can correctly bind to Maven lifecycle\n                        -->\n                        <plugin>\n                            <groupId>org.eclipse.m2e</groupId>\n                            <artifactId>lifecycle-mapping</artifactId>\n                            <version>${lifecycle-mapping.version}</version>\n                            <configuration>\n                                <lifecycleMappingMetadata>\n                                    <pluginExecutions>\n                                        <pluginExecution>\n                                            <pluginExecutionFilter>\n                                                <groupId>org.jacoco</groupId>\n                                                <artifactId>\n                                                    jacoco-maven-plugin\n                                                </artifactId>\n                                                <versionRange>\n                                                    ${jacoco-maven-plugin.version}\n                                                </versionRange>\n                                                <goals>\n                                                    <goal>prepare-agent</goal>\n                                                </goals>\n                                            </pluginExecutionFilter>\n                                            <action>\n                                                <ignore/>\n                                            </action>\n                                        </pluginExecution>\n                                    </pluginExecutions>\n                                </lifecycleMappingMetadata>\n                            </configuration>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <!-- jhipster-needle-maven-add-profile -->\n    </profiles>\n</project>\n"
        },
        "database": "MongoDB",
        "build_system": "Maven",
        "config_files": {},
        "static_files": {
            "jhipster/store/src/main/resources/logback-spring.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE configuration>\n\n<configuration scan=\"true\">\n    <include resource=\"org/springframework/boot/logging/logback/base.xml\"/>\n\n<!-- The FILE and ASYNC appenders are here as examples for a production configuration -->\n<!--\n    <appender name=\"FILE\" class=\"ch.qos.logback.core.rolling.RollingFileAppender\">\n        <rollingPolicy class=\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\">\n            <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>\n            <maxHistory>90</maxHistory>\n        </rollingPolicy>\n        <encoder>\n            <charset>utf-8</charset>\n            <Pattern>%d %-5level [%thread] %logger{0}: %msg%n</Pattern>\n        </encoder>\n    </appender>\n\n    <appender name=\"ASYNC\" class=\"ch.qos.logback.classic.AsyncAppender\">\n        <queueSize>512</queueSize>\n        <appender-ref ref=\"FILE\"/>\n    </appender>\n\n    <root level=\"${logging.level.root}\">\n        <appender-ref ref=\"ASYNC\"/>\n    </root>\n-->\n\n    <logger name=\"javax.activation\" level=\"WARN\"/>\n    <logger name=\"javax.mail\" level=\"WARN\"/>\n    <logger name=\"javax.management.remote\" level=\"WARN\"/>\n    <logger name=\"javax.xml.bind\" level=\"WARN\"/>\n    <logger name=\"ch.qos.logback\" level=\"WARN\"/>\n    \n    <logger name=\"com.hazelcast\" level=\"INFO\"/>\n    <logger name=\"com.netflix\" level=\"WARN\"/>\n    <logger name=\"com.netflix.discovery\" level=\"INFO\"/>\n    <logger name=\"com.ryantenney\" level=\"WARN\"/>\n    <logger name=\"com.sun\" level=\"WARN\"/>\n    <logger name=\"com.zaxxer\" level=\"WARN\"/>\n    <logger name=\"io.undertow\" level=\"WARN\"/>\n    <logger name=\"io.undertow.websockets.jsr\" level=\"ERROR\"/>\n    <logger name=\"org.apache\" level=\"WARN\"/>\n    <logger name=\"org.apache.catalina.startup.DigesterFactory\" level=\"OFF\"/>\n    <logger name=\"org.bson\" level=\"WARN\"/>\n    <logger name=\"org.hibernate.validator\" level=\"WARN\"/>\n    <logger name=\"org.mongodb.driver\" level=\"WARN\"/>\n    <logger name=\"org.reflections\" level=\"WARN\"/>\n    <logger name=\"org.springframework\" level=\"WARN\"/>\n    <logger name=\"org.springframework.web\" level=\"WARN\"/>\n    <logger name=\"org.springframework.security\" level=\"WARN\"/>\n    <logger name=\"org.springframework.cache\" level=\"WARN\"/>\n    <logger name=\"org.thymeleaf\" level=\"WARN\"/>\n    <logger name=\"org.xnio\" level=\"WARN\"/>\n    <logger name=\"springfox\" level=\"WARN\"/>\n    <logger name=\"sun.rmi\" level=\"WARN\"/>\n    <logger name=\"springfox.documentation.schema.property\" level=\"ERROR\"/>\n    <logger name=\"sun.net.www\" level=\"INFO\"/>\n    <logger name=\"sun.rmi.transport\" level=\"WARN\"/>\n\n    <!-- https://logback.qos.ch/manual/configuration.html#shutdownHook and https://jira.qos.ch/browse/LOGBACK-1090 -->\n    <shutdownHook class=\"ch.qos.logback.core.hook.DelayingShutdownHook\"/>\n\n    <contextListener class=\"ch.qos.logback.classic.jul.LevelChangePropagator\">\n        <resetJUL>true</resetJUL>\n    </contextListener>\n\n</configuration>\n"
        }
    },
    "project_structure": {
        "files": [
            "MongoDB.Dockerfile"
        ],
        "folders": [
            "scripts"
        ]
    }
}