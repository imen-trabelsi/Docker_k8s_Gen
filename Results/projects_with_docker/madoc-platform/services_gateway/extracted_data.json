{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "JavaScript",
        "dependencies": {
            "yarn.lock": "# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\n\n"
        },
        "database": null,
        "build_system": "yarn",
        "config_files": {
            ".env": "# Postgres\nPOSTGRES_DB=postgres\nPOSTGRES_PORT=5432\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=postgres_password\n\n# Tasks API\nTASKS_QUEUE_LIST=tasks-api,madoc-ts\n\n# Postgres credentials\nPOSTGRES_MADOC_TS_USER=madoc_ts\nPOSTGRES_MADOC_TS_SCHEMA=madoc_ts\nPOSTGRES_MADOC_TS_PASSWORD=madoc_ts_password\n\nPOSTGRES_TASKS_API_USER=tasks_api\nPOSTGRES_TASKS_API_SCHEMA=tasks_api\nPOSTGRES_TASKS_API_PASSWORD=tasks_api_password\n\nPOSTGRES_MODELS_API_USER=models_api\nPOSTGRES_MODELS_API_SCHEMA=models_api\nPOSTGRES_MODELS_API_PASSWORD=models_api_password\n\nPOSTGRES_CONFIG_SERVICE_USER=config_service\nPOSTGRES_CONFIG_SERVICE_SCHEMA=config_service\nPOSTGRES_CONFIG_SERVICE_PASSWORD=config_service_password\n\nPOSTGRES_SEARCH_API_USER=search_api\nPOSTGRES_SEARCH_API_SCHEMA=search_api\nPOSTGRES_SEARCH_API_PASSWORD=search_api_password\n\n# New SMTP\nSMTP_HOST=host.docker.internal\nSMTP_PORT=1025\nSMTP_SECURITY=None\nSMTP_USER=project.1\nSMTP_PASSWORD=secret.1\n\nMAIL_FROM_USER=\"Madoc local <noreply@madoc.io>\"\nMADOC_INSTALLATION_CODE='$2b$14$9qnqDtpUMt7PQ0bs300y8el116vUbm4nF8Bf5vltCx78ZzuAWBu/K'\n\n# HTTPS\n# LOCAL PORT FOR HTTPS, CAN BE CHANGED\nPORTS_GATEWAY_HTTPS=443\n#GATEWAY_HOST=http://localhost:8888 <-- change for http\nGATEWAY_HOST=https://madoc.local\n",
            "docker-compose.yml": "version: \"3.2\"\nservices:\n  # Internal services\n\n  gateway:\n    build:\n      context: services/gateway\n      dockerfile: Dockerfile.dev\n    volumes:\n      - ./var/certs:/certs\n    ports:\n      - \"${PORTS_GATEWAY_HTTPS:-443}:443\"\n      - \"${PORTS_GATEWAY:-8888}:8080\"\n    restart: unless-stopped\n    depends_on:\n      - tasks-api\n      - model-api\n      - madoc-ts\n      - config-service\n      - storage-api\n      - okra\n      - search\n    links:\n      - tasks-api\n      - model-api\n      - madoc-ts\n      - config-service\n      - storage-api\n      - okra\n      - search\n\n  madoc-ts-vite:\n    build:\n      context: services/madoc-ts\n      dockerfile: Dockerfile.vite\n    volumes:\n      - ./services/madoc-ts/package.json:/home/node/app/package.json:delegated\n      - ./services/madoc-ts/tailwind.config.js:/home/node/app/tailwind.config.js:delegated\n      - ./services/madoc-ts/yarn.lock:/home/node/app/yarn.lock:delegated\n      - ./services/madoc-ts/src:/home/node/app/src\n      - ./services/madoc-ts/vite:/home/node/app/vite\n      - ./var/.vite-cache:/home/node/app/node_modules/.vite\n      - ./var/certs:/certs\n    ports:\n      - \"3088:3088\"\n      - \"3089:3089\"\n\n  madoc-ts:\n    tty: true\n    build:\n      context: services/madoc-ts\n      dockerfile: Dockerfile.dev\n    volumes:\n      - ./services/madoc-ts/dist:/home/node/app/dist:delegated\n      - ./services/madoc-ts/src:/home/node/app/src\n      - ./services/madoc-ts/package.json:/home/node/app/package.json:delegated\n      - ./services/madoc-ts/yarn.lock:/home/node/app/yarn.lock:delegated\n      - ./services/madoc-ts/migrations:/home/node/app/migrations:delegated\n      - ./services/madoc-ts/schemas:/home/node/app/schemas:delegated\n      - ./services/madoc-ts/ecosystem.config.cjs:/home/node/app/ecosystem.config.cjs\n      - ./services/madoc-ts/vite:/home/node/app/vite:delegated\n      - ./services/madoc-ts/entrypoint:/home/node/app/entrypoint:delegated\n      - ./services/madoc-ts/config.json:/home/node/app/config.json\n      - ./services/madoc-ts/service-jwts:/home/node/app/service-jwts\n      - ./services/madoc-ts/themes:/home/node/app/themes\n      - ./services/madoc-ts/translations:/home/node/app/translations\n      - ./services/madoc-ts/npm:/home/node/app/npm\n      - ./var/certs:/home/node/app/openssl-certs\n      - ./var/jwt:/home/node/app/service-jwt-responses\n      - ./var/files:/home/node/app/files\n    environment:\n      - DATABASE_HOST=shared-postgres\n      - DATABASE_NAME=${POSTGRES_DB}\n      - DATABASE_PORT=${POSTGRES_PORT}\n      - DATABASE_USER=${POSTGRES_MADOC_TS_USER}\n      - DATABASE_SCHEMA=${POSTGRES_MADOC_TS_SCHEMA}\n      - DATABASE_PASSWORD=${POSTGRES_MADOC_TS_PASSWORD}\n      - REDIS_HOST=gateway-redis\n      - API_GATEWAY=http://gateway:8080\n      - GATEWAY_HOST=${GATEWAY_HOST}\n      - STORAGE_FILE_DIRECTORY=/home/node/app/files\n      - MADOC_INSTALLATION_CODE=${MADOC_INSTALLATION_CODE}\n      - MIGRATE=true\n      - NODE_ENV=development\n      - SMTP_HOST=${SMTP_HOST}\n      - SMTP_PORT=${SMTP_PORT}\n      - SMTP_SECURITY=${SMTP_SECURITY}\n      - SMTP_USER=${SMTP_USER}\n      - SMTP_PASSWORD=${SMTP_PASSWORD}\n      - MAIL_FROM_USER=${MAIL_FROM_USER}\n    ports:\n      - \"127.0.0.1:${PORTS_MADOC_TS_DEBUGGER:-9230}:9230\"\n    links:\n      - shared-postgres\n      - madoc-ts-vite\n\n  tasks-api:\n    tty: true\n    image: ghcr.io/digirati-co-uk/tasks-api:latest\n    platform: linux/amd64\n    environment:\n      - SERVER_PORT=3000\n      - DATABASE_HOST=shared-postgres\n      - DATABASE_NAME=${POSTGRES_DB}\n      - DATABASE_PORT=${POSTGRES_PORT}\n      - DATABASE_USER=${POSTGRES_TASKS_API_USER}\n      - DATABASE_SCHEMA=${POSTGRES_TASKS_API_SCHEMA}\n      - DATABASE_PASSWORD=${POSTGRES_TASKS_API_PASSWORD}\n      - QUEUE_LIST=${TASKS_QUEUE_LIST}\n      - REDIS_HOST=gateway-redis\n    links:\n      - shared-postgres\n      - gateway-redis\n\n  model-api:\n    tty: true\n    image: digirati/capture-models:latest\n    platform: linux/amd64\n    environment:\n      - SERVER_PORT=3000\n      - DATABASE_HOST=shared-postgres\n      - DATABASE_NAME=${POSTGRES_DB}\n      - DATABASE_PORT=${POSTGRES_PORT}\n      - DATABASE_USER=${POSTGRES_MODELS_API_USER}\n      - DATABASE_SCHEMA=${POSTGRES_MODELS_API_SCHEMA}\n      - DATABASE_PASSWORD=${POSTGRES_MODELS_API_PASSWORD}\n    links:\n      - shared-postgres\n\n  shared-postgres:\n    build:\n      context: services/shared-postgres\n    environment:\n      - POSTGRES_DB=${POSTGRES_DB}\n      - POSTGRES_USER=${POSTGRES_USER}\n      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n      - POSTGRES_MADOC_TS_USER=${POSTGRES_MADOC_TS_USER}\n      - POSTGRES_MADOC_TS_SCHEMA=${POSTGRES_MADOC_TS_SCHEMA}\n      - POSTGRES_MADOC_TS_PASSWORD=${POSTGRES_MADOC_TS_PASSWORD}\n      - POSTGRES_TASKS_API_USER=${POSTGRES_TASKS_API_USER}\n      - POSTGRES_TASKS_API_SCHEMA=${POSTGRES_TASKS_API_SCHEMA}\n      - POSTGRES_TASKS_API_PASSWORD=${POSTGRES_TASKS_API_PASSWORD}\n      - POSTGRES_MODELS_API_USER=${POSTGRES_MODELS_API_USER}\n      - POSTGRES_MODELS_API_SCHEMA=${POSTGRES_MODELS_API_SCHEMA}\n      - POSTGRES_MODELS_API_PASSWORD=${POSTGRES_MODELS_API_PASSWORD}\n      - POSTGRES_CONFIG_SERVICE_USER=${POSTGRES_CONFIG_SERVICE_USER}\n      - POSTGRES_CONFIG_SERVICE_SCHEMA=${POSTGRES_CONFIG_SERVICE_SCHEMA}\n      - POSTGRES_CONFIG_SERVICE_PASSWORD=${POSTGRES_CONFIG_SERVICE_PASSWORD}\n      - POSTGRES_SEARCH_API_USER=${POSTGRES_SEARCH_API_USER}\n      - POSTGRES_SEARCH_API_SCHEMA=${POSTGRES_SEARCH_API_SCHEMA}\n      - POSTGRES_SEARCH_API_PASSWORD=${POSTGRES_SEARCH_API_PASSWORD}\n\n    ports:\n      - \"${PORTS_SHARED_POSTGRES:-5400}:5432\"\n    volumes:\n      - ./var/shared-database:/var/lib/postgresql/data\n\n  gateway-redis:\n    image: redis:5-alpine\n\n  config-service:\n    image: digirati/madoc_config_service_django:175410fc5b7dbef4cc259686564fbedeb60c8789\n    platform: linux/amd64\n    environment:\n      - USE_DOCKER=yes\n      - IPYTHONDIR=/app/.ipython\n      - MIGRATE=True\n      - LOAD=False\n      - DJANGO_DEBUG=False\n      - WAITRESS=False\n      - POSTGRES_HOST=shared-postgres\n      - POSTGRES_PORT=${POSTGRES_PORT}\n      - POSTGRES_USER=${POSTGRES_CONFIG_SERVICE_USER}\n      - POSTGRES_PASSWORD=${POSTGRES_CONFIG_SERVICE_PASSWORD}\n      - POSTGRES_SCHEMA=${POSTGRES_CONFIG_SERVICE_SCHEMA}\n      - POSTGRES_DB=${POSTGRES_DB}\n      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@shared-postgres:${POSTGRES_PORT}/${POSTGRES_DB}\n    links:\n      - shared-postgres\n    volumes:\n      - ./configuration/schemas:/app/configurator/schemas\n      - ./configuration/defaults:/app/configurator/default_config\n\n  storage-api:\n    tty: true\n    image: ghcr.io/digirati-co-uk/storage-api:main\n    platform: linux/amd64\n    environment:\n      - GATEWAY_HOST=${GATEWAY_HOST}\n    volumes:\n      - ./var/files/storage-api:/home/node/app/files\n    links:\n      - shared-postgres\n\n  search:\n    image: ghcr.io/digirati-co-uk/madoc-search-service:247f854b1258e3971907e6912cef2374a1da8474\n    platform: linux/amd64\n    #    build:\n    #      context: services/search\n    #      dockerfile: Dockerfile\n    environment:\n      - BROWSABLE=False\n      - USE_DOCKER=yes\n      - IPYTHONDIR=/app/.ipython\n      - MIGRATE=True\n      - LOAD=False\n      - DEBUG=True\n      - DJANGO_DEBUG=True\n      - WAITRESS=False\n      - POSTGRES_HOST=shared-postgres\n      - POSTGRES_PORT=${POSTGRES_PORT}\n      - POSTGRES_USER=${POSTGRES_SEARCH_API_USER}\n      - POSTGRES_PASSWORD=${POSTGRES_SEARCH_API_PASSWORD}\n      - POSTGRES_SCHEMA=${POSTGRES_SEARCH_API_SCHEMA}\n      - POSTGRES_DB=${POSTGRES_DB}\n      - DATABASE_URL=postgres://${POSTGRES_SEARCH_API_USER}:${POSTGRES_SEARCH_API_PASSWORD}@shared-postgres:${POSTGRES_PORT}/${POSTGRES_DB}\n    links:\n      - shared-postgres\n  #    volumes:\n  #      - ./services/search/search_service:/app\n\n  okra:\n    image: digirati/okra:latest\n    platform: linux/amd64\n",
            "services/gateway/Dockerfile": "FROM nginx:stable-alpine\n\n\n# Nginx config\nCOPY ./nginx.conf /etc/nginx/nginx.conf\nCOPY ./conf.d /etc/nginx/conf.d\nCOPY ./www /www\n",
            "services/gateway/nginx.conf": "user nginx;\nworker_processes 5;\nworker_rlimit_nofile 8192;\n\nerror_log  /var/log/nginx/error.log notice;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  4096;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format   main '$time_local | --> $request $status '\n        '$body_bytes_sent \"$http_referer\" '\n        '\"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    proxy_cache_path /var/cache/nginx/asset levels=1:2 keys_zone=asset_cache:10m max_size=100m\n                         inactive=60m use_temp_path=off;\n\n    proxy_cache_path /var/cache/nginx/media levels=1:2 keys_zone=media_cache:10m max_size=10g\n                         inactive=60m use_temp_path=off;\n\n    proxy_cache_path /var/cache/nginx/token_responses keys_zone=token_responses:1m max_size=2m;\n\n    server_names_hash_bucket_size 64;\n\n    sendfile       on;\n    tcp_nopush     on;\n    gzip           on;\n\n    keepalive_timeout  65;\n\n    include /etc/nginx/conf.d/gateway.conf;\n}\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "Dockerfile.dev",
            "README.md",
            "nginx.conf"
        ],
        "folders": [
            "conf.d",
            "dev",
            "www"
        ]
    }
}