# Use the specified base image with Java installed
FROM java:8u45-jre

# Add a volume pointing to /tmp. WAR files are by default deployed to /tmp in Spring Boot apps.
VOLUME /tmp

# Update the system packages and install necessary dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y python-setuptools sed && \
    easy_install supervisor && \
    apt-get install -y -t jessie-backports nginx=1.9.4-1~bpo8+1 && \
    mkdir -p /etc/nginx/conf.d/custom && \
    mkdir -p /etc/nginx/conf.d/proxy && \

# Copy necessary configuration files from the project's docker directory to the container
COPY docker/supervisor /etc/supervisor
COPY docker/nginx/conf.d /etc/nginx/conf.d
COPY docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY docker/nginx/start.sh /etc/nginx/start.sh

# Provide necessary permissions to nginx startup script
RUN chmod +x /etc/nginx/start.sh

#Using Maven
COPY target/*.jar app.jar

# Execute the application
ENTRYPOINT ["java", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]

# Copy the project or build output
COPY . /usr/src/app

# Go to the application directory
WORKDIR /usr/src/app

# Specify the environment variable for the Java app
ENV JAVA_OPTS=""

# Spring Boot application wouldn't start if it didn't expose a port.
EXPOSE 8080

# Run the application
CMD [ "sh", "-c", "java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar" ]
