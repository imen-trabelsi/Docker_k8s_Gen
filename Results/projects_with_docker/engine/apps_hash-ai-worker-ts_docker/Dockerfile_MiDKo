FROM rust AS base
WORKDIR /app
COPY . .

ENV MISE_DATA_DIR="/mise" \
    MISE_CACHE_DIR="/mise/cache" \
    MISE_INSTALL_PATH="/usr/local/bin/mise" \
    PATH="/mise/shims:$PATH" \
    MISE_CARGO_HOME="/usr/local/cargo" \
    GOOGLE_CLOUD_WORKLOAD_IDENTITY_FEDERATION_CONFIG_JSON=${GOOGLE_CLOUD_WORKLOAD_IDENTITY_FEDERATION_CONFIG_JSON} \
    COREPACK_HOME=/usr/local/src/var/corepack-cache \

RUN apt-get update \
    && apt-get install -y --no-install-recommends curl ca-certificates \
    && curl https://mise.run | sh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && eval "$(mise activate bash)" \
    && mise install node \
    && mise install npm:turbo \
    && mise use --global yq \
    && turbo prune --scope='@apps/hash-ai-worker-ts' --docker \
    && find $(yq '.workspace.members' -o tsv Cargo.toml | tr '*' ' ') -maxdepth 2 -name Cargo.toml -exec sh -c '[ -f "/app/out/full/$1" ] || ( mkdir -p "/app/out/full/$(dirname "$1")/src" && echo > "/app/out/full/$(dirname "$1")/src/lib.rs" && printf "[package]\nname = \"$(yq ".package.name" -p toml -oy $1)\"" > "/app/out/full/$1" )' _ {} \; \
    && cp -R .cargo Cargo.toml Cargo.lock /app/out/full/ \
    && mise use --global yq \
    && mise use --global rust[profile=minimal]@$(yq '.toolchain.channel' rust-toolchain.toml) \
    && rm rust-toolchain.toml \
    && apt-get update \
    && apt-get install -y --no-install-recommends build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && mise install node npm:turbo java biome npm:@redocly/cli cargo-binstall cargo:wasm-pack cargo:wasm-opt \
    && yarn install --immutable \
    && yarn cache clean \

COPY .config/mise /etc/mise
WORKDIR /usr/local/
COPY rust-toolchain.toml .
WORKDIR /usr/local/src/
COPY --from=builder /usr/local/src /usr/local/src
WORKDIR /usr/local/src/apps/hash-ai-worker-ts

RUN groupadd --system --gid 60000 hash \
    && useradd --system tsworker -G hash \
    && install -d -m 0775 -o tsworker -g hash /log /home/tsworker officeParserTemp/tempfiles $COREPACK_HOME \
    && corepack prepare --activate \

USER tsworker:hash

HEALTHCHECK --interval=5s --timeout=3s --start-period=10s --retries=3 CMD curl -f http://localhost:4100/health || exit 1

ENTRYPOINT ["yarn"]
CMD ["start"]
