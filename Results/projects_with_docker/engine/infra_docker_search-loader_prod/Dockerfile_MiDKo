FROM node:22.12-alpine

# Create a group and user
RUN addgroup appgroup && adduser -S appuser -G appgroup

# Set environment variables
ENV HOME=/app
ENV APP_USER=appuser
ENV NODE_ENV=production

# User commands
USER appuser

# Set the working directory in the docker image
WORKDIR ${HOME}

# Copy necessary files for installing dependencies
COPY package.json .
COPY yarn.lock .
COPY apps/hash-api/package.json apps/hash-api/
COPY apps/hash-search-realtime/package.json apps/hash-search-realtime/
COPY libs/@local/hash-backend-utils/package.json libs/@local/hash-backend-utils/
COPY libs/@local/hash-isomorphic-utils/package.json libs/@local/hash-isomorphic-utils/
COPY libs/@local/tsconfig/package.json libs/@local/tsconfig/

# Install app dependencies
RUN yarn install --immutable --production --ignore-scripts
RUN yarn workspace @apps/hash-search-loader install --immutable --ignore-scripts
RUN yarn workspace @apps/hash-api codegen

# Copy the project files to the working directory
COPY apps/hash-api/codegen.config.ts apps/hash-api/codegen.config.ts
COPY apps/hash-api/src/collab/graphql/queries apps/hash-api/src/collab/graphql/queries
COPY apps/hash-api/src/graphql/type-defs apps/hash-api/src/graphql/type-defs
COPY libs/@local/hash-isomorphic-utils libs/@local/hash-isomorphic-utils
COPY apps/hash-api apps/hash-api
COPY apps/hash-search-realtime apps/hash-search-realtime
COPY libs/@local/hash-backend-utils libs/@local/hash-backend-utils
COPY libs/@local/hash-isomorphic-utils libs/@local/hash-isomorphic-utils
COPY libs/@local/tsconfig libs/@local/tsconfig

# Change ownership of the working dir
USER root
RUN chown -R $APP_USER:$APP_USER $HOME/*
USER $APP_USER

# Cmd to run on container start
CMD [ "yarn", "workspace", "@apps/hash-search-loader", "start" ]
