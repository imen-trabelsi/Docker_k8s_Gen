# Use PHP 8.3 FPM Alpine as base image
FROM php:8.3-fpm-alpine3.21

# Set environment variables
ENV IMAGICK_COMMIT_HASH d7d3c24af1b4f599897408f1714600b69a56473b
ENV PHP_MEMORY_LIMIT 512M
ENV PHP_UPLOAD_LIMIT 512M
ENV PHP_OPCACHE_MEMORY_CONSUMPTION 128
ENV NEXTCLOUD_VERSION 31.0.0

# Copy script and upgrade files
COPY *.sh upgrade.exclude /
COPY config/* /usr/src/nextcloud/config/

# Install necessary dependencies
RUN set -ex; \
    apk --no-cache add imagemagick imagemagick-pdf imagemagick-jpeg imagemagick-raw imagemagick-tiff imagemagick-heic imagemagick-webp imagemagick-svg rsync; \
    rm /var/spool/cron/crontabs/root; \
    echo '*/5 * * * * php -f /var/www/html/cron.php' > /var/spool/cron/crontabs/www-data; \
    apk --no-cache add --virtual .build-deps $PHPIZE_DEPS autoconf freetype-dev gmp-dev icu-dev imagemagick-dev libevent-dev libjpeg-turbo-dev libmcrypt-dev \
    libmemcached-dev libpng-dev libwebp-dev libxml2-dev libzip-dev openldap-dev pcre-dev postgresql-dev; \
    docker-php-ext-configure ftp --with-openssl-dir=/usr; \
    docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp; \
    docker-php-ext-configure ldap; \
    docker-php-ext-install -j "$(nproc)" bcmath exif ftp gd gmp intl ldap opcache pcntl pdo_mysql pdo_pgsql sysvsem zip; \
    echo 'opcache.enable=1' > "${PHP_INI_DIR}/conf.d/opcache-recommended.ini"; \
    echo 'apc.enable_cli=1' > "${PHP_INI_DIR}/conf.d/docker-php-ext-apcu.ini"; \
    echo 'apc.serializer=igbinary' > "${PHP_INI_DIR}/conf.d/docker-php-ext-igbinary.ini"; \
    echo 'session.serialize_handler=igbinary' > "${PHP_INI_DIR}/conf.d/docker-php-ext-igbinary.ini"; \
    echo 'memory_limit=${PHP_MEMORY_LIMIT}' > "${PHP_INI_DIR}/conf.d/nextcloud.ini"; \
    echo 'upload_max_filesize=${PHP_UPLOAD_LIMIT}' > "${PHP_INI_DIR}/conf.d/nextcloud.ini"; \
    echo 'post_max_size=${PHP_UPLOAD_LIMIT}' > "${PHP_INI_DIR}/conf.d/nextcloud.ini"; \
    mkdir /var/www/data; \
    mkdir -p /docker-entrypoint-hooks.d/pre-installation /docker-entrypoint-hooks.d/post-installation \
    /docker-entrypoint-hooks.d/pre-upgrade /docker-entrypoint-hooks.d/post-upgrade /docker-entrypoint-hooks.d/before-starting; \
    chown -R www-data:root /var/www; \
    chmod -R g=u /var/www; \
    apk add --no-cache --virtual .fetch-deps bzip2 gnupg; \
    curl -fsSL -o nextcloud.tar.bz2 "https://download.nextcloud.com/server/releases/nextcloud-31.0.0.tar.bz2"; \
    curl -fsSL -o nextcloud.tar.bz2.asc "https://download.nextcloud.com/server/releases/nextcloud-31.0.0.tar.bz2.asc"; \

# Set entrypoint and CMD
ENTRYPOINT ["/entrypoint.sh"]
CMD ["php-fpm"]
