{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"@oada/server\",\n  \"private\": true,\n  \"workspaces\": [\n    \"services/*\",\n    \"libs/*\"\n  ],\n  \"scripts\": {\n    \"g:eslint\": \"eslint $INIT_CWD\",\n    \"build\": \"yarn workspaces foreach -Apt run build\",\n    \"clean\": \"yarn build --clean\",\n    \"g:tsc\": \"cd $INIT_CWD && tsc -b\",\n    \"g:pino-pretty\": \"pino-pretty\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^19.7.1\",\n    \"@commitlint/config-conventional\": \"^19.7.1\",\n    \"@eslint/compat\": \"^1.2.7\",\n    \"@eslint/config-inspector\": \"^1.0.2\",\n    \"@eslint/eslintrc\": \"^3.3.0\",\n    \"@eslint/js\": \"^9.21.0\",\n    \"@tsconfig/node20\": \"^20.1.4\",\n    \"@tsconfig/node22\": \"^22.0.0\",\n    \"@types/eslint\": \"^9.6.1\",\n    \"@types/mocha\": \"^10.0.10\",\n    \"@types/node\": \"^22.13.9\",\n    \"@typescript-eslint/eslint-plugin\": \"^8.26.0\",\n    \"@typescript-eslint/parser\": \"^8.26.0\",\n    \"@yarnpkg/sdks\": \"^3.2.1\",\n    \"browserslist\": \"^4.24.4\",\n    \"c8\": \"^10.1.3\",\n    \"eslint\": \"^9.21.0\",\n    \"eslint-config-prettier\": \"^10.0.2\",\n    \"eslint-config-xo\": \"^0.46.0\",\n    \"eslint-config-xo-typescript\": \"^7.0.0\",\n    \"eslint-formatter-pretty\": \"^6.0.1\",\n    \"eslint-import-resolver-node\": \"^0.3.9\",\n    \"eslint-import-resolver-typescript\": \"^3.8.3\",\n    \"eslint-plugin-array-func\": \"^5.0.2\",\n    \"eslint-plugin-ava\": \"^15.0.1\",\n    \"eslint-plugin-escompat\": \"^3.11.4\",\n    \"eslint-plugin-eslint-comments\": \"^3.2.0\",\n    \"eslint-plugin-filenames\": \"^1.3.2\",\n    \"eslint-plugin-github\": \"^5.1.8\",\n    \"eslint-plugin-i18n-text\": \"^1.0.1\",\n    \"eslint-plugin-import\": \"^2.31.0\",\n    \"eslint-plugin-n\": \"^17.16.2\",\n    \"eslint-plugin-no-constructor-bind\": \"^2.0.4\",\n    \"eslint-plugin-no-only-tests\": \"^3.3.0\",\n    \"eslint-plugin-no-secrets\": \"^2.2.1\",\n    \"eslint-plugin-notice\": \"^1.0.0\",\n    \"eslint-plugin-optimize-regex\": \"^1.2.1\",\n    \"eslint-plugin-prettier\": \"^5.2.3\",\n    \"eslint-plugin-promise\": \"^7.2.1\",\n    \"eslint-plugin-regexp\": \"^2.7.0\",\n    \"eslint-plugin-security\": \"^3.0.1\",\n    \"eslint-plugin-sonarjs\": \"^3.0.2\",\n    \"eslint-plugin-unicorn\": \"^57.0.0\",\n    \"eslint_d\": \"^14.3.0\",\n    \"get-port\": \"^7.1.0\",\n    \"prettier\": \"^3.5.3\",\n    \"tslib\": \"2.8.1\",\n    \"typescript\": \"5.8.2\",\n    \"typescript-eslint\": \"^8.26.0\",\n    \"update-browserslist-db\": \"^1.1.3\",\n    \"zx\": \"^8.4.0\"\n  },\n  \"dependencies\": {\n    \"pino-pretty\": \"^13.0.0\"\n  },\n  \"resolutions\": {\n    \"cross-spawn\": \"^7.0.5\",\n    \"eslint-config-prettier\": \"https://github.com/abrahamguo/eslint-config-prettier.git\",\n    \"fastify-plugin\": \"^5.0.1\",\n    \"tslib\": \"2.7.0\"\n  },\n  \"engines\": {\n    \"node\": \">=20.0.0\"\n  },\n  \"volta\": {\n    \"node\": \"22.5.1\"\n  },\n  \"packageManager\": \"yarn@4.7.0\"\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "services:\n  startup:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/startup:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: startup\n    depends_on:\n      - redpanda\n      - arangodb\n    expose:\n      # expose only internally, not on host\n      - '8080'\n    environment:\n      # set RESETDATABASE to \"yes\" if you want to drop database on startup and recreate\n      RESETDATABASE: ${RESETDATABASE-no}\n\n  auth:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/auth:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: auth\n    depends_on:\n      - startup\n    networks:\n      http_net: {}\n    expose:\n      # expose only internally, not on host\n      - '8080'\n\n  # http-handler is in charge of maintaining connectiongs to clients and starting\n  # the first message for a request into Kafka\n  http-handler:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/http-handler:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: http-handler\n    healthcheck:\n      test: [ CMD, yarn, healthcheck ]\n    depends_on:\n      - startup\n    networks:\n      http_net: {}\n    expose:\n      # expose only internally, not on host\n      - '8080'\n    ports:\n      # Expose node inspect port\n      - 9230:9229\n    environment:\n      IGNORE_SCOPE:\n    volumes:\n      # Storage for non-JSON resources\n      - binary_data:/oada/binary\n\n  sync-handler:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/sync-handler:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: sync-handler\n    depends_on:\n      - startup\n      - proxy\n    networks:\n      http_net: {}\n    environment:\n      IGNORE_SCOPE:\n\n\n  write-handler:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/write-handler:${OADA_VERSION-build}\n    ports:\n      # Expose node inspect port\n      - 9231:9229\n    build:\n      args:\n        OADA_SERVICE: write-handler\n    depends_on:\n      - startup\n\n  users:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/users:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: users\n    depends_on:\n      - startup\n\n  rev-graph-update:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/rev-graph-update:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: rev-graph-update\n    depends_on:\n      - startup\n\n  well-known:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/well-known:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: well-known\n    depends_on:\n      - startup\n    networks:\n      http_net: {}\n    expose:\n      # expose only internally, not on host\n      - '8080'\n\n  webhooks:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/webhooks:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: webhooks\n    depends_on:\n      - startup\n      - proxy\n    networks:\n      http_net: {}\n\n  shares:\n    extends:\n      file: common.yml\n      service: oada-uservice\n    image: oada/shares:${OADA_VERSION-build}\n    build:\n      args:\n        OADA_SERVICE: shares\n    depends_on:\n      - startup\n\n  # swag with configs for auth, well-known, and http-handler\n  proxy:\n    build: ./support/proxy\n    image: oada/support-proxy:${OADA_VERSION-build}\n    cap_add:\n      - NET_ADMIN\n    networks:\n      http_net: {}\n    environment:\n      PUID: 1000\n      PGID: 1000\n      TZ: America/New_york\n      URL: ${DOMAIN:-localhost}\n      SUBDOMAINS: #e.g., www\n      VALIDATION: http\n      CERTPROVIDER: #optional\n      DNSPLUGIN: #optional\n      PROPAGATION: #optional\n      DUCKDNSTOKEN: #optional\n      EMAIL: #optional\n      ONLY_SUBDOMAINS: 'false' #optional\n      EXTRA_DOMAINS: #optional\n      STAGING: 'true' #optional (set false for release)\n      MAXMINDDB_LICENSE_KEY: #optional\n    volumes:\n      - proxy_config:/config\n      # Hack in self-signed ssl for localhost\n      - ./support/proxy/selfsigned:/config/keys/letsencrypt:ro\n    ports:\n      - '${BIND:-0.0.0.0}:${PORT_HTTPS:-443}:443'\n      - '${BIND:-0.0.0.0}:${PORT_HTTP:-80}:80'\n    restart: unless-stopped\n\n  # Arango is the main backend where core data and graph is stored\n  arangodb:\n    image: arangodb:3.9.3\n    restart: unless-stopped\n    networks:\n      arango_net: {}\n    volumes:\n      - arangodb_data:/var/lib/arangodb3\n      - arangodb_apps_data:/var/lib/arangodb3-apps\n    expose:\n      # expose only internally, not on host\n      - '8529'\n    environment:\n      # - ARANGO_RANDOM_ROOT_PASSWORD=1\n      ARANGO_NO_AUTH: 1\n      ARANGO_STORAGE_ENGINE: rocksdb\n    command: [ arangod, --server.statistics=false ]\n\n  # Redpanda is API compatible with kafka.\n  redpanda:\n    image: vectorized/redpanda:v22.2.5\n    restart: unless-stopped\n    networks:\n      kafka_net:\n        aliases:\n          - kafka\n    volumes:\n      - redpanda_data:/var/lib/redpanda/data\n      - redpanda_config:/etc/redpanda/\n    environment:\n      REDPANDA_MODE: ${REDPANDA_MODE-development}\n    entrypoint:\n      - /bin/sh\n      - -c\n      # Configure then run redpanda?\n      - |\n        rpk redpanda mode $$REDPANDA_MODE &&\n        rpk $$@\n      - rpk\n    command:\n      - redpanda\n      - start\n      - --smp\n      - '1'\n      - --reserve-memory\n      - 0M\n      - --overprovisioned\n      - --kafka-addr\n      - PLAINTEXT://kafka:9092\n      - --rpc-addr\n      - 0.0.0.0:33145\n      - --node-id\n      - '0'\n      - --advertise-kafka-addr\n      - PLAINTEXT://kafka:9092\n    expose:\n      # Kafka API port\n      - '9092'\n      # Internal RPC port\n      - '33145'\n      # Prometheus/HTTP Admin port\n      - '9644'\n\n  pino-pretty:\n    deploy:\n      replicas: 0\n    image: oada/startup:${OADA_VERSION-build}\n    restart: never\n    command: g:pino-pretty -C /.pino-prettyrc\n    volumes:\n      - ./.pino-prettyrc:/.pino-prettyrc\n\n  prometheus:\n    image: prom/prometheus\n    profiles:\n      - dashboard\n      - debug\n    depends_on:\n      - rpk-prometheus-conf\n      - redpanda\n    restart: unless-stopped\n    networks:\n      grafana_net: {}\n      kafka_net: {}\n    expose:\n      - '9090'\n    #ports:\n    #  - '9090:9090'\n    volumes:\n      - prometheus_data:/prometheus\n      - prometheus_config:/etc/prometheus\n\n  # Generate redpanda config for prometheus\n  rpk-prometheus-conf:\n    extends:\n      service: redpanda\n    profiles:\n      - dashboard\n      - debug\n    restart: on-failure\n    volumes:\n      - prometheus_config:/etc/prometheus\n    user: root\n    entrypoint:\n      - /bin/sh\n      - -c\n    command:\n      - |\n        echo -n \"scrape_configs:\" > /etc/prometheus/prometheus.yml &&\n        rpk generate --seed-addr=redpanda prometheus-config >> /etc/prometheus/prometheus.yml\n\n  grafana:\n    image: grafana/grafana\n    profiles:\n      - dashboard\n      - debug\n    depends_on:\n      - prometheus\n      - grafana-provision-prometheus\n      - grafana-provision-dashboards\n    restart: unless-stopped\n    networks:\n      grafana_net:\n    ports:\n      - 3000:3000\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - grafana_prov:/etc/grafana/provisioning\n\n  # Provision a grafana dashboard provider.\n  #\n  # Loads all dashboards in /var/lib/grafana/dashboards\n  grafana-provision-dashboards:\n    image: grafana/grafana\n    profiles:\n      - dashboard\n      - debug\n    depends_on:\n      - rpk-grafana-dashboard\n    restart: on-failure\n    volumes:\n      - grafana_prov:/etc/grafana/provisioning\n    entrypoint:\n      - /bin/sh\n      - -c\n    command:\n      - |\n        echo '\n        apiVersion: 1\n        providers:\n          - name: \"dashboard provider\"\n            type: file\n            options:\n              path: /var/lib/grafana/dashboards\n              foldersFromFileStructure: true\n        ' > /etc/grafana/provisioning/dashboards/dashboards.yml\n\n  # Provision our prometheus instance as a grafana datasource\n  grafana-provision-prometheus:\n    image: grafana/grafana\n    profiles:\n      - dashboard\n      - debug\n    restart: on-failure\n    volumes:\n      - grafana_prov:/etc/grafana/provisioning\n    entrypoint:\n      - /bin/sh\n      - -c\n    command:\n      - |\n        echo '\n        apiVersion: 1\n        deleteDatasources:\n          - name: Prometheus\n        datasources:\n          - name: Prometheus\n            type: prometheus\n            access: proxy\n            url: http://prometheus:9090\n        ' > /etc/grafana/provisioning/datasources/prometheus.yml\n\n  # Generate dashboard for our redpanda with our prometheus instance\n  rpk-grafana-dashboard:\n    extends:\n      service: redpanda\n    profiles:\n      - dashboard\n      - debug\n    restart: on-failure\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - grafana_prov:/etc/grafana/provisioning\n    entrypoint:\n      - /bin/sh\n      - -c\n    command:\n      - |\n        mkdir -p /var/lib/grafana/dashboards/\n        rpk generate grafana-dashboard \\\n          --datasource Prometheus \\\n          --prometheus-url redpanda:9644/metrics \\\n          > /var/lib/grafana/dashboards/redpanda.json\n\nvolumes:\n  arangodb_data:\n  arangodb_apps_data:\n  binary_data:\n  redpanda_data:\n  redpanda_config:\n  proxy_config:\n  prometheus_data:\n  prometheus_config:\n  grafana_data:\n  grafana_prov:\n\n\nnetworks:\n  arango_net: {}\n  kafka_net: {}\n  http_net: {}\n  startup_net: {}\n  grafana_net: {}\n\n# Set up Mutagen forwards\nx-mutagen:\n  forward:\n    agrango:\n      source: tcp:localhost:8529\n      destination: network://arango_net:tcp:arangodb:8529\n    kafka:\n      source: tcp:localhost:9092\n      destination: network://kafka_net:tcp:kafka:9092\n    prometheus:\n      source: tcp:localhost:9090\n      destination: network://grafana_net:tcp:prometheus:9090\n    grafana:\n      source: tcp:localhost:3000\n      destination: network://grafana_net:tcp:grafana:3000\n",
            "support/proxy/Dockerfile": "FROM scratch as configs\n\n# Copy in our edited nginx config?\nCOPY ./nginx.conf /config/nginx/\n\n# Copy our configs in?\nCOPY ./http.d/*.conf /etc/nginx/http.d/\n\n# Proxy to services\nCOPY ./proxy-confs/* /config/nginx/proxy-confs/\n\nFROM linuxserver/nginx:1.20.2 as http-only\n\nENV DOCKER_MODS=linuxserver/mods:nginx-proxy-confs\n\nCOPY --from=configs / /\n\n# Disable https\nCOPY ./default /config/nginx/site-confs/\n\nFROM linuxserver/swag:version-1.15.0 as https\n\nCOPY --from=configs / /",
            "support/proxy/nginx.conf": "## Version 2021/04/27 - Changelog: https://github.com/linuxserver/docker-swag/commits/master/root/defaults/nginx.conf\n\nuser abc;\n\n# Set number of worker processes automatically based on number of CPU cores.\ninclude /config/nginx/worker_processes.conf;\n\n# Enables the use of JIT for regular expressions to speed-up their processing.\npcre_jit on;\n\n# Configures default error logger.\nerror_log /config/log/nginx/error.log;\n\n# Includes files with directives to load dynamic modules.\ninclude /etc/nginx/modules/*.conf;\n\nevents {\n    # The maximum number of simultaneous connections that can be opened by\n    # a worker process.\n    worker_connections 1024;\n    # multi_accept on;\n}\n\nhttp {\n    # Includes mapping of file name extensions to MIME types of responses\n    # and defines the default type.\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n\n    # Name servers used to resolve names of upstream servers into addresses.\n    # It's also needed when using tcpsocket and udpsocket in Lua modules.\n    #resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;\n    include /config/nginx/resolver.conf;\n\n    # Don't tell nginx version to the clients. Default is 'on'.\n    server_tokens off;\n\n    # Specifies the maximum accepted body size of a client request, as\n    # indicated by the request header Content-Length. If the stated content\n    # length is greater than this size, then the client receives the HTTP\n    # error code 413. Set to 0 to disable. Default is '1m'.\n    client_max_body_size 0;\n\n    # Sendfile copies data between one FD and other from within the kernel,\n    # which is more efficient than read() + write(). Default is off.\n    sendfile on;\n\n    # Causes nginx to attempt to send its HTTP response head in one packet,\n    # instead of using partial frames. Default is 'off'.\n    tcp_nopush on;\n\n    # Helper variable for proxying websockets.\n    map $http_upgrade $connection_upgrade {\n        default upgrade;\n        '' close;\n    }\n\n    # Sets the path, format, and configuration for a buffered log write.\n    access_log /config/log/nginx/access.log;\n\n    # Includes virtual hosts configs.\n    include /etc/nginx/http.d/*.conf;\n\n    # WARNING: Don't use this directory for virtual hosts anymore.\n    # This include will be moved to the root context in Alpine 3.14.\n    #include /etc/nginx/conf.d/*.conf;\n\n\n    ##\n    # Basic Settings\n    ##\n\n    client_body_buffer_size 128k;\n    keepalive_timeout 65;\n    large_client_header_buffers 4 16k;\n    send_timeout 5m;\n    tcp_nodelay on;\n    types_hash_max_size 2048;\n    variables_hash_max_size 2048;\n    # server_names_hash_bucket_size 64;\n    # server_name_in_redirect off;\n\n    ##\n    # Gzip Settings\n    ##\n\n    gzip on;\n    gzip_disable \"msie6\";\n    # gzip_vary on;\n    # gzip_proxied any;\n    # gzip_comp_level 6;\n    # gzip_buffers 16 8k;\n    # gzip_http_version 1.1;\n    # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;\n\n    ##\n    # nginx-naxsi config\n    ##\n    # Uncomment it if you installed nginx-naxsi\n    ##\n\n    #include /etc/nginx/naxsi_core.rules;\n\n    ##\n    # nginx-passenger config\n    ##\n    # Uncomment it if you installed nginx-passenger\n    ##\n\n    #passenger_root /usr;\n    #passenger_ruby /usr/bin/ruby;\n\n    ##\n    # Virtual Host Configs\n    ##\n    include /config/nginx/site-confs/*;\n    #Removed lua. Do not remove this comment\n\n    ##\n    # Geoip2 config\n    ##\n    # Uncomment to add the Geoip2 configs needed to geo block countries/cities.\n    ##\n\n    #include /config/nginx/geoip2.conf;\n}\n\n#mail {\n#    # See sample authentication script at:\n#    # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript\n#\n#    # auth_http localhost/auth.php;\n#    # pop3_capabilities \"TOP\" \"USER\";\n#    # imap_capabilities \"IMAP4rev1\" \"UIDPLUS\";\n#\n#    server {\n#        listen     localhost:110;\n#        protocol   pop3;\n#        proxy      on;\n#    }\n#\n#    server {\n#        listen     localhost:143;\n#        protocol   imap;\n#        proxy      on;\n#    }\n#}\n\ndaemon off;\npid /run/nginx.pid;\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "default",
            "nginx.conf"
        ],
        "folders": [
            "http.d",
            "proxy-confs",
            "selfsigned"
        ]
    }
}