{
    "docker_info": {
        "base_image": "dev",
        "multi_stage_build": true,
        "exposed_ports": [],
        "user": [
            "node",
            "root"
        ],
        "labels": [],
        "health_checks": [],
        "build_args": [
            "NODE_VER=22-alpine",
            "WAIT_FOR_VER=v2.2.3",
            "OADA_SERVICE"
        ],
        "envs": [
            "ENV OADA_SERVICE=${OADA_SERVICE}",
            "ENV INSPECT=",
            "ENV COREPACK_HOME=/oada/.cache/node/corepack",
            "ENV PORT=8080"
        ],
        "copy_instructions": [
            "WORKDIR /oada",
            "COPY --link ./yarn.lock ./.yarnrc.yml /oada/",
            "COPY ./package.json /oada/package.json",
            "COPY ./libs/models/package.json /oada/libs/models/package.json",
            "COPY ./libs/lib-arangodb/package.json /oada/libs/lib-arangodb/package.json",
            "COPY ./libs/lib-config/package.json /oada/libs/lib-config/package.json",
            "COPY ./libs/lib-kafka/package.json /oada/libs/lib-kafka/package.json",
            "COPY ./libs/lib-prom/package.json /oada/libs/lib-prom/package.json",
            "COPY ./libs/pino-debug/package.json /oada/libs/pino-debug/package.json",
            "COPY ./services/auth/package.json /oada/services/auth/package.json",
            "COPY ./services/http-handler/package.json /oada/services/http-handler/package.json",
            "COPY ./services/permissions-handler/package.json /oada/services/permissions-handler/package.json",
            "COPY ./services/rev-graph-update/package.json /oada/services/rev-graph-update/package.json",
            "COPY ./services/shares/package.json /oada/services/shares/package.json",
            "COPY ./services/startup/package.json /oada/services/startup/package.json",
            "COPY ./services/sync-handler/package.json /oada/services/sync-handler/package.json",
            "COPY ./services/users/package.json /oada/services/users/package.json",
            "COPY ./services/webhooks/package.json /oada/services/webhooks/package.json",
            "COPY ./services/well-known/package.json /oada/services/well-known/package.json",
            "COPY ./services/write-handler/package.json /oada/services/write-handler/package.json",
            "COPY --link . /oada/",
            "COPY --link . /oada/",
            "COPY --from=yarn /oada/ /oada/",
            "COPY --from=build /oada/ /oada/",
            "WORKDIR /oada",
            "COPY ./utils/entrypoint.sh /entrypoint.sh",
            "COPY ./oada.config.mjs /oada.config.mjs",
            "COPY --from=code /oada/ /oada/",
            "WORKDIR /oada/services/${OADA_SERVICE}",
            "COPY --from=dev /oada/ /oada/"
        ],
        "execution": [
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/usr/bin/dumb-init\",",
                    "\"--rewrite\",",
                    "\"15:2\",",
                    "\"--\",",
                    "\"/entrypoint.sh\"]"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "[\"start\"]"
                ]
            }
        ],
        "run": [
            [
                "corepack yarn workspaces focus --all --production",
                ""
            ],
            [
                "corepack yarn workspaces focus --all --production",
                ""
            ],
            [
                "corepack yarn install --immutable",
                ""
            ],
            [
                "corepack yarn install --immutable",
                ""
            ],
            [
                "corepack yarn sdks vscode vim",
                ""
            ],
            [
                "corepack yarn build --verbose && rm -rfv .yarn .pnp.*",
                ""
            ],
            [
                "apk add --no-cache \\",
                "dumb-init",
                "libc6-compat"
            ],
            [
                "chmod u+x /entrypoint.sh",
                "RUN chown node:node /entrypoint.sh"
            ],
            [
                "wget https://raw.githubusercontent.com/eficode/wait-for/${WAIT_FOR_VER}/wait-for -O /wait-for",
                "RUN chmod u+x /wait-for"
            ],
            [
                "chown node:node /wait-for",
                ""
            ],
            [
                "mkdir -p /oada/binary && chown node:node /oada/binary",
                "#VOLUME /oada/binary"
            ],
            [
                "corepack enable",
                "RUN corepack install"
            ]
        ]
    }
}