{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            ".pylintrc": "[MASTER]\nignore=\n    setup.py,\n    prod-stack.py,\n    dev-stack.py,\n\n[MESSAGES CONTROL]\n\ndisable=\n    missing-docstring,\n    no-member,\n"
        },
        "database": null,
        "build_system": "pip",
        "config_files": {
            "docker-compose.yml": "volumes:\n  certbot:\n\nservices:\n  indexer:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      SSH_KEY: ${CKAN_NETKAN_SSHKEY}\n      CKANMETA_REMOTES: ${CKAN_METADATA_PATHS}\n      CKAN_USER: ${CKAN_METADATA_USER}\n      CKAN_REPOS: ${CKAN_METADATA_REPOS}\n      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n      GH_Token: ${CKAN_GH_Token}\n      SQS_QUEUE: OutboundDev.fifo\n      SQS_TIMEOUT: 30\n      STATUS_DB: DevMultiKANStatus\n      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}\n      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}\n    volumes:\n      - ./netkan:/home/netkan/netkan\n    command: indexer\n  scheduler:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      GH_Token: ${CKAN_GH_Token}\n      NETKAN_REMOTES: ${NETKAN_METADATA_PATHS}\n      SSH_KEY: ${CKAN_NETKAN_SSHKEY}\n      CKANMETA_REMOTES: ${CKAN_METADATA_PATHS}\n      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n      INFLATION_QUEUES: ksp=InboundDevKsp.fifo ksp2=InboundDevKsp2.fifo\n      MAX_QUEUED: 1\n      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}\n      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}\n    volumes:\n      - ./netkan:/home/netkan/netkan\n    command: scheduler --dev\n  inflator:\n    image: kspckan/inflator\n    environment:\n      QUEUES: InboundDevKsp.fifo,OutboundDev.fifo\n      GAME: KSP\n      GH_Token: ${CKAN_GH_Token}\n      AWS_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n    volumes:\n      # Docker will create this with root perms if\n      # it's not created first. First user on most\n      # distros is 1000:1000, which will match the\n      # user in the container.\n      - ${HOME}/ckan_cache:/home/netkan/ckan_cache\n  inflator-ksp2:\n    image: kspckan/inflator\n    environment:\n      QUEUES: InboundDevKsp2.fifo,OutboundDev.fifo\n      GAME: KSP2\n      GH_Token: ${CKAN_GH_Token}\n      AWS_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n    volumes:\n      # Docker will create this with root perms if\n      # it's not created first. First user on most\n      # distros is 1000:1000, which will match the\n      # user in the container.\n      - ${HOME}/ckan_cache:/home/netkan/ckan_cache\n  webhooks:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      XKAN_GHSECRET: test\n      SSH_KEY: ${CKAN_NETKAN_SSHKEY}\n      NETKAN_REMOTES: ${NETKAN_METADATA_PATHS}\n      INFLATION_SQS_QUEUES: ksp=InboundDevKsp.fifo ksp2=InboundDevKsp2.fifo\n      MIRROR_SQS_QUEUE: MirroringDev.fifo\n      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}\n      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}\n      CKANMETA_REMOTES: ${CKAN_METADATA_PATHS}\n      CKAN_USER: ${CKAN_METADATA_USER}\n      CKAN_REPOS: ${CKAN_METADATA_REPOS}\n    entrypoint: .local/bin/gunicorn\n    command: -b 0.0.0.0:5000 --access-logfile - \"netkan.webhooks:create_app()\"\n  adder:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      SQS_QUEUE: AddingDev.info\n      NETKAN_REMOTES: ${NETKAN_METADATA_PATHS}\n      NETKAN_USER: ${CKAN_NETKAN_USER}\n      NETKAN_REPO:  ${CKAN_NETKAN_REPO}\n    command: spacedock-adder\n  mirrorer:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      SQS_QUEUE: MirroringDev.fifo\n      SQS_TIMEOUT: 30\n      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n      CKANMETA_REMOTES: ${CKAN_METADATA_PATHS}\n      IA_access: test\n      IA_secret: test\n      IA_collection: test\n    volumes:\n      - ${HOME}/ckan_cache:/home/netkan/ckan_cache\n    command: mirrorer\n  status:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      STATUS_DB: DevMultiKANStatus\n      STATUS_BUCKET: ckan-test-status\n      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n      STATUS_INTERVAL: 0\n      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}\n      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}\n    volumes:\n      - ./netkan:/home/netkan/netkan\n    command: export-status-s3\n  certbot:\n    image: certbot/dns-route53\n    command: certonly -n --agree-tos --email ${CKAN_EMAIL} --dns-route53 -d local.test.ksp-ckan.space --test-cert\n    environment:\n      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}\n      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}\n      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}\n    volumes:\n      - certbot:/etc/letsencrypt\n  nginx:\n    build:\n      context: nginx/.\n    ports:\n      - \"8080:80\"\n      - \"8443:443\"\n    volumes:\n      - certbot:/etc/letsencrypt\n      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf\n  clean:\n    build:\n      context: netkan/.\n      target: dev\n    volumes:\n      - ./netkan:/home/netkan/netkan\n      - ${HOME}/ckan_cache:/home/netkan/ckan_cache\n    command: clean-cache --days 1\n  counts:\n    build:\n      context: netkan/.\n      target: dev\n    environment:\n      SSH_KEY: ${CKAN_NETKAN_SSHKEY}\n      NETKAN_REMOTES: ${NETKAN_METADATA_PATHS}\n      CKANMETA_REMOTES: ${CKAN_METADATA_PATHS}\n      GH_Token: ${CKAN_GH_Token}\n      DISCORD_WEBHOOK_ID: ${DISCORD_WEBHOOK_ID}\n      DISCORD_WEBHOOK_TOKEN: ${DISCORD_WEBHOOK_TOKEN}\n    volumes:\n      - ./netkan:/home/netkan/netkan\n    command: download-counter\n",
            "nginx/Dockerfile": "FROM nginx\nCOPY nginx.conf /etc/nginx/\n",
            "nginx/nginx.conf": "user  nginx;\nworker_processes  1;\n\nerror_log  /dev/null warn;\npid        /var/run/nginx.pid;\n\nevents {\n    worker_connections  512;\n}\n\nhttp {\n    log_format  main  '$remote_addr \"$request\" $status $body_bytes_sent \"$http_user_agent\"';\n    access_log  /dev/stdout main;\n\n    upstream webhooks {\n        server webhooks:5000 fail_timeout=0;\n    }\n\n    server {\n        listen 80;\n        server_name netkan.ksp-ckan.space;\n        location / {\n            return 308 https://$host$request_uri;\n        }\n    }\n\n    server {\n        listen 443 ssl;\n        server_name netkan.ksp-ckan.space;\n        ssl_certificate /etc/letsencrypt/live/netkan.ksp-ckan.space/fullchain.pem;\n        ssl_certificate_key /etc/letsencrypt/live/netkan.ksp-ckan.space/privkey.pem;\n        ssl_session_cache shared:le_nginx_SSL:1m;\n        ssl_session_timeout 1440m;\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_prefer_server_ciphers on;\n\n        ssl_ciphers \"ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS\";\n\n        location / {\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Forwarded-Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n\n            # multi-game transition\n            rewrite ^/inflate(?!/) /inflate/ksp break;\n            rewrite ^/sd/inflate(?!/) /sd/inflate/ksp break;\n            rewrite ^/sd/add(?!/) /sd/add/ksp break;\n            rewrite ^/gh/inflate(?!/) /gh/inflate/ksp break;\n            rewrite ^/gh/release(?!/) /gh/release/ksp break;\n            rewrite ^/gh/mirror(?!/) /gh/mirror/ksp break;\n\n            proxy_pass       http://webhooks;\n        }\n    }\n}\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitconfig",
            "Dockerfile",
            "MANIFEST.in",
            "pyproject.toml",
            "run_dev.sh"
        ],
        "folders": [
            "netkan",
            "tests"
        ]
    }
}