{
    "source_code_info": {
        "language": "Go",
        "framework": "Go",
        "dependencies": {
            "go.mod": "module github.com/mmorejon/microservices-docker-go-mongodb/users\n\ngo 1.15\n\nrequire (\n\tgithub.com/gorilla/mux v1.8.0\n\tgo.mongodb.org/mongo-driver v1.4.4\n)\n"
        },
        "database": "MongoDB",
        "build_system": "go mod",
        "config_files": {
            "docker-compose.yml": "version: \"3.8\"\nservices:\n  proxy:\n    image: traefik:v2.4.2\n    command:\n      # - \"--log.level=DEBUG\"\n      - \"--api=true\"\n      - \"--api.dashboard=true\"\n      - \"--api.insecure=true\" # Don't do that in production\n      - \"--providers.docker\"\n      - \"--entrypoints.web.address=:80\"\n      # add pilot token service\n      # - \"--pilot.token=3d1bd97f-cb9d-4cde-8112-77ce2f5abc92\"\n      # install plugin rewrite body\n      # - \"--experimental.plugins.plugin-rewrite.modulename=github.com/traefik/plugin-rewritebody\"\n      # - \"--experimental.plugins.plugin-rewrite.version=v0.3.1\"\n    labels: {}\n      # Create basics middlewares\n      # - \"traefik.http.middlewares.my-auth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/\"\n      # - \"traefik.http.middlewares.my-compress.compress=true\"\n      # - \"traefik.http.middlewares.my-header.headers.customresponseheaders.X-Custom-Response-Header=cinema\"\n      # Create middlewares for plugins\n      # - \"traefik.http.middlewares.my-rewrite.plugin.plugin-rewrite.lastModified=true\"\n      # - \"traefik.http.middlewares.my-rewrite.plugin.plugin-rewrite.rewrites[0].regex=ID\"\n      # - \"traefik.http.middlewares.my-rewrite.plugin.plugin-rewrite.rewrites[0].replacement=MY-ID\"\n    volumes:\n      - type: bind\n        source: /var/run/docker.sock\n        target: /var/run/docker.sock\n        read_only: true\n    ports:\n      - target: 80\n        published: 80\n        protocol: tcp\n        mode: host\n      - target: 8080\n        published: 8080\n        protocol: tcp\n        mode: host\n\n  website:\n    # build: ./website\n    image: ghcr.io/mmorejon/cinema-website:v2.1.0\n    command:\n      - \"-usersAPI\"\n      - \"http://users:4000/api/users/\"\n      - \"-moviesAPI\"\n      - \"http://movies:4000/api/movies/\"\n      - \"-showtimesAPI\"\n      - \"http://showtimes:4000/api/showtimes/\"\n      - \"-bookingsAPI\"\n      - \"http://bookings:4000/api/bookings/\"\n    labels:\n      # Enable public access\n      - \"traefik.http.routers.website.rule=PathPrefix(`/`)\"\n      - \"traefik.http.services.website.loadbalancer.server.port=8000\"\n\n  movies:\n    # build: ./movies\n    image: ghcr.io/mmorejon/cinema-movies:v2.1.0\n    command:\n      - \"-mongoURI\"\n      - \"mongodb://db:27017/\"\n    #   - \"-enableCredentials\"\n    #   - \"true\"\n    # environment:\n    #   MONGODB_USERNAME: \"demo\"\n    #   MONGODB_PASSWORD: \"e3LBVTPdlzxYbxt9\"\n    labels: {}\n      # Enable public access\n      # - \"traefik.http.routers.movies.rule=PathPrefix(`/api/movies/`)\"\n      # - \"traefik.http.services.movies.loadbalancer.server.port=4000\"\n      # Apply middlewares\n      # - \"traefik.http.routers.movies.middlewares=my-header,my-compress\"\n\n  bookings:\n    # build: ./bookings\n    image: ghcr.io/mmorejon/cinema-bookings:v2.1.0\n    command:\n      - \"-mongoURI\"\n      - \"mongodb://db:27017/\"\n    #   - \"-enableCredentials\"\n    #   - \"true\"\n    # environment:\n    #   MONGODB_USERNAME: \"demo\"\n    #   MONGODB_PASSWORD: \"e3LBVTPdlzxYbxt9\"\n    labels: {}\n      # Enable public access\n      # - \"traefik.http.routers.bookings.rule=PathPrefix(`/api/bookings/`)\"\n      # - \"traefik.http.services.bookings.loadbalancer.server.port=4000\"\n\n  showtimes:\n    # build: ./showtimes\n    image: ghcr.io/mmorejon/cinema-showtimes:v2.1.0\n    command:\n      - \"-mongoURI\"\n      - \"mongodb://db:27017/\"\n    #   - \"-enableCredentials\"\n    #   - \"true\"\n    # environment:\n    #   MONGODB_USERNAME: \"demo\"\n    #   MONGODB_PASSWORD: \"e3LBVTPdlzxYbxt9\"\n    labels: {}\n      # Enable public access\n      # - \"traefik.http.routers.showtimes.rule=PathPrefix(`/api/showtimes/`)\"\n      # - \"traefik.http.services.showtimes.loadbalancer.server.port=4000\"\n\n  users:\n    # build: ./users\n    image: ghcr.io/mmorejon/cinema-users:v2.1.0\n    command:\n      - \"-mongoURI\"\n      - \"mongodb://db:27017/\"\n    #   - \"-enableCredentials\"\n    #   - \"true\"\n    # environment:\n    #   MONGODB_USERNAME: \"demo\"\n    #   MONGODB_PASSWORD: \"e3LBVTPdlzxYbxt9\"\n    labels: {}\n      # Enable public access\n      # - \"traefik.http.routers.users.rule=PathPrefix(`/api/users/`)\"\n      # - \"traefik.http.services.users.loadbalancer.server.port=4000\"\n\n  db:\n    image: mongo:4.2.11\n    # ports:\n    #   - target: 27017\n    #     published: 27017\n    #     protocol: tcp\n    #     mode: host\n    volumes:\n      - type: bind\n        source: ./backup\n        target: /backup\n",
            "users/Dockerfile": "# golang alpine 1.15.6-alpine as base image\nFROM golang:1.15.6-alpine AS builder\n# create appuser\nRUN adduser -D -g '' elf\n# create workspace\nWORKDIR /opt/app/\nCOPY go.mod .\nCOPY go.sum .\n# fetch dependancies\nRUN go mod download\nRUN go mod verify\n# copy the source code as the last step\nCOPY . .\n# build binary\nRUN CGO_ENABLED=0 GOOS=linux go build -ldflags=\"-w -s\" -a -installsuffix cgo -o /go/bin/cinema-users ./cmd/app\n\n\n# build a small image\nFROM alpine:3.12.3\nLABEL language=\"golang\"\nLABEL org.opencontainers.image.source https://github.com/mmorejon/microservices-docker-go-mongodb\n# import the user and group files from the builder\nCOPY --from=builder /etc/passwd /etc/passwd\n# copy the static executable\nCOPY --from=builder --chown=elf:1000 /go/bin/cinema-users /cinema-users\n# use a non-root user\nUSER elf\n# run app\nENTRYPOINT [\"./cinema-users\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            ".gitignore",
            "Dockerfile",
            "go.mod",
            "go.sum"
        ],
        "folders": [
            "cmd",
            "ui"
        ]
    }
}