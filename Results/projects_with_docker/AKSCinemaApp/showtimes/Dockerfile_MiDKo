# Based on the user-provided base image.
FROM golang:1.15.6-alpine as builder

# Create appuser.
RUN adduser -D -g '' elf

# Create app directory.
WORKDIR /opt/app/

# Copy go mod and sum files.
COPY go.mod go.sum ./

# Download all dependencies. 
RUN go mod download
RUN go mod verify

# Copy the source from the current directory to the working Directory inside the container.
COPY . .

# Build the Go app.
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -a -installsuffix cgo -o /go/bin/cinema-showtimes ./cmd/app

# Start a new stage from scratch to minimize the size of the final image.
FROM scratch

# Import the user and group files from the builder.

# Copy the static executable from the builder container.

# Change to a non-root user.
USER elf:1000

# Setting the environment variables.
ENV PORT=8080

# Expose the required port.
EXPOSE 8080

# Set the command as per the user requirements.
ENTRYPOINT ["./cinema-showtimes"]

# Set the labels.
LABEL language="golang" org.opencontainers.image.source
