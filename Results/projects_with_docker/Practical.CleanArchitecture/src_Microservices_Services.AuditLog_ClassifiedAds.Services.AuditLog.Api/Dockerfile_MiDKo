# Base Image
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build

# Sets the working directory
WORKDIR /ClassifiedAds.Microservices

# Copy csproj and restore dependencies
COPY ./Common/ClassifiedAds.Application/*.csproj ./Common/ClassifiedAds.Application/
COPY ./Common/ClassifiedAds.CrossCuttingConcerns/*.csproj ./Common/ClassifiedAds.CrossCuttingConcerns/
COPY ./Common/ClassifiedAds.Domain/*.csproj ./Common/ClassifiedAds.Domain/
COPY ./Common/ClassifiedAds.Infrastructure/*.csproj ./Common/ClassifiedAds.Infrastructure/
COPY ./Services.AuditLog/ClassifiedAds.Services.AuditLog/*.csproj ./Services.AuditLog/ClassifiedAds.Services.AuditLog/
COPY ./Services.AuditLog/ClassifiedAds.Services.AuditLog.Api/*.csproj ./Services.AuditLog/ClassifiedAds.Services.AuditLog.Api/
COPY . ./

# Restore dependencies
RUN dotnet restore ./Common/ClassifiedAds.Application/ClassifiedAds.Application.csproj
RUN dotnet restore ./Common/ClassifiedAds.Infrastructure/ClassifiedAds.Infrastructure.csproj
RUN dotnet restore ./Services.AuditLog/ClassifiedAds.Services.AuditLog/ClassifiedAds.Services.AuditLog.csproj
RUN dotnet restore ./Services.AuditLog/ClassifiedAds.Services.AuditLog.Api/ClassifiedAds.Services.AuditLog.Api.csproj

# Build project using Release mode
RUN dotnet publish ./Services.AuditLog/ClassifiedAds.Services.AuditLog.Api/ClassifiedAds.Services.AuditLog.Api.csproj -c Release -o out

# Final Stage
FROM mcr.microsoft.com/dotnet/runtime:9.0
WORKDIR /ClassifiedAds.Microservices

# Copy build artifacts from the build stage

# Define how our Docker container will run 
ENTRYPOINT ["dotnet", "ClassifiedAds.Services.AuditLog.Api.dll"]
