{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"angular\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.5\",\n    \"@angular/common\": \"^19.0.5\",\n    \"@angular/compiler\": \"^19.0.5\",\n    \"@angular/core\": \"^19.0.5\",\n    \"@angular/forms\": \"^19.0.5\",\n    \"@angular/platform-browser\": \"^19.0.5\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.5\",\n    \"@angular/router\": \"^19.0.5\",\n    \"@microsoft/signalr\": \"^8.0.7\",\n    \"@ngrx/effects\": \"^19.0.0\",\n    \"@ngrx/operators\": \"^19.0.0\",\n    \"@ngrx/store\": \"^19.0.0\",\n    \"@ngrx/store-devtools\": \"^19.0.0\",\n    \"bootstrap\": \"^5.3.3\",\n    \"font-awesome\": \"^4.7.0\",\n    \"ngx-bootstrap\": \"^19.0.1\",\n    \"ngx-toastr\": \"^19.0.0\",\n    \"oidc-client\": \"^1.11.5\",\n    \"oidc-client-ts\": \"^3.1.0\",\n    \"rxjs\": \"^7.8.0\",\n    \"tslib\": \"^2.6.3\",\n    \"zone.js\": \"^0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^19.0.6\",\n    \"@angular/cli\": \"^19.0.6\",\n    \"@angular/compiler-cli\": \"^19.0.5\",\n    \"@angular/language-service\": \"^19.0.5\",\n    \"@types/jasmine\": \"^5.1.5\",\n    \"@types/jasminewd2\": \"^2.0.13\",\n    \"@types/node\": \"^22.10.2\",\n    \"codelyzer\": \"^6.0.2\",\n    \"jasmine-core\": \"~5.5.0\",\n    \"jasmine-spec-reporter\": \"~7.0.0\",\n    \"karma\": \"^6.4.4\",\n    \"karma-chrome-launcher\": \"^3.1.1\",\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\n    \"karma-jasmine\": \"^5.1.0\",\n    \"karma-jasmine-html-reporter\": \"^2.0.0\",\n    \"prettier\": \"3.4.2\",\n    \"ts-node\": \"~10.9.2\",\n    \"tslint\": \"~6.1.0\",\n    \"typescript\": \"~5.6.3\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "src/UIs/angular/Dockerfile": "# Usage:\n#\n#    Build image:\n#    docker build -t classifiedads.angular .\n#\n#    Run image (on localhost:8080):\n#    docker run --name classifiedads.angular -p 8080:80 classifiedads.angular\n#\n#    Run image as virtual host (read more: https://github.com/jwilder/nginx-proxy):\n#    docker run -e VIRTUAL_HOST=classifiedads-angular.your-domain.com --name classifiedads-angular classifiedads-angular\n\n# Stage 1, based on Node.js, to build and compile Angular\n\nFROM node:10.16.0-alpine as builder\n\nCOPY package.json ./\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN npm i && mkdir /ng-app && mv ./node_modules ./ng-app\n\nWORKDIR /ng-app\n\nCOPY . .\n\nRUN npm run build\n\n# Stage 2, based on Nginx, to have only the compiled app, ready for production with Nginx\n\nFROM nginx:1.17.0-alpine\n\nCOPY ./config/nginx.conf /etc/nginx/conf.d/default.conf\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n                                  \n## From \u2018builder\u2019 stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist/angular /usr/share/nginx/html\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n",
            "src/UIs/angular/Jenkinsfile": "pipeline {\n  agent any\n  tools {\n    nodejs \"Default\"\n  }\n  stages {\n    stage('Git Checkout') {\n      steps {\n        git branch: 'master', url: 'https://github.com/phongnguyend/Practical.CleanArchitecture'\n      }\n    }\n    stage('Install') {\n      steps {\n        sh 'node --version'\n        sh 'npm --version'\n        dir('src/UIs/angular') {\n          sh 'npm install -g @angular/cli'\n          sh 'npm install'\n          sh 'npm audit --audit-level=high'\n        }\n      }\n    }\n    stage('Build') {\n      steps {\n        dir('src/UIs/angular') {\n          sh 'ng build'\n        }\n      }\n    }\n  }\n}\n",
            "src/UIs/angular/azure-pipelines.yml": "\ntrigger:\n  branches:\n    include:\n    - main\n  paths:\n    include:\n    - src/UIs/angular\n\nresources:\n- repo: self\n\nvariables:\n  \n  # Agent VM image name\n  vmImageName: 'ubuntu-latest'\n\nstages:\n- stage: Build\n  displayName: Build\n  jobs:\n  - job: Build\n    displayName: Build Angular\n    pool:\n      vmImage: ubuntu-latest\n    steps:\n    - checkout: self\n    - task: NodeTool@0\n      displayName: Use Node 18.x\n      inputs:\n        versionSpec: 18.x\n        checkLatest: true\n    - task: Npm@1\n      displayName: install @angular/cli\n      inputs:\n        command: custom\n        workingDir: src/UIs/angular\n        customCommand: install @angular/cli\n    - task: Npm@1\n      displayName: npm install\n      inputs:\n        workingDir: src/UIs/angular\n    - task: Npm@1\n      displayName: 'npm audit --audit-level=high'\n      inputs:\n        command: 'custom'\n        workingDir: 'src/UIs/angular'\n        customCommand: 'audit --audit-level=high'\n    - task: Npm@1\n      displayName: run build\n      inputs:\n        command: custom\n        workingDir: src/UIs/angular\n        customCommand: run build\n    - task: ArchiveFiles@2\n      displayName: Archive\n      inputs:\n        rootFolderOrFile: 'src/UIs/angular/dist/angular'\n        includeRootFolder: false\n        archiveType: 'zip'\n        archiveFile: '$(Build.ArtifactStagingDirectory)/angular.$(Build.BuildId).zip'\n        replaceExistingArchive: true\n    - task: PublishPipelineArtifact@1\n      displayName: Publish Pipeline Artifact\n      inputs:\n        targetPath: '$(Build.ArtifactStagingDirectory)'\n        artifact: 'Angular'\n        publishLocation: 'pipeline'"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "ClassifiedAds.Services.Notification.Grpc.csproj",
            "Dockerfile",
            "Program.cs",
            "appsettings.Development.json",
            "appsettings.json"
        ],
        "folders": [
            "Properties",
            "Services"
        ]
    }
}