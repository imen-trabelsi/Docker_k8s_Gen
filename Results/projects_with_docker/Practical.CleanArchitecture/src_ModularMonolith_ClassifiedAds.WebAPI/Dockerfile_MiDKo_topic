# Using .NET SDK 9.0 as the base image
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build-env

# Setting the work directory as /ClassifiedAds.ModularMonolith
WORKDIR /ClassifiedAds.ModularMonolith

# Copying all the .csproj files
COPY ./ClassifiedAds.Application/*.csproj ./ClassifiedAds.Application/
COPY ./ClassifiedAds.CrossCuttingConcerns/*.csproj ./ClassifiedAds.CrossCuttingConcerns/
COPY ./ClassifiedAds.Domain/*.csproj ./ClassifiedAds.Domain/
COPY ./ClassifiedAds.Infrastructure/*.csproj ./ClassifiedAds.Infrastructure/
COPY ./ClassifiedAds.Contracts/*.csproj ./ClassifiedAds.Contracts/
COPY ./ClassifiedAds.Modules.AuditLog/*.csproj ./ClassifiedAds.Modules.AuditLog/
COPY ./ClassifiedAds.Modules.Configuration/*.csproj ./ClassifiedAds.Modules.Configuration/
COPY ./ClassifiedAds.Modules.Identity/*.csproj ./ClassifiedAds.Modules.Identity/
COPY ./ClassifiedAds.Modules.Notification/*.csproj ./ClassifiedAds.Modules.Notification/
COPY ./ClassifiedAds.Modules.Product/*.csproj ./ClassifiedAds.Modules.Product/
COPY ./ClassifiedAds.Modules.Storage/*.csproj ./ClassifiedAds.Modules.Storage/
COPY ./ClassifiedAds.WebAPI/*.csproj ./ClassifiedAds.WebAPI/

# Restore the necessary packages for our project 
RUN dotnet restore ./ClassifiedAds.Application/ClassifiedAds.Application.csproj
RUN dotnet restore ./ClassifiedAds.Infrastructure/ClassifiedAds.Infrastructure.csproj
RUN dotnet restore ./ClassifiedAds.WebAPI/ClassifiedAds.WebAPI.csproj

# Copying the atual source code into our image
COPY . ./

# Publish our application, to prepare for running the application.
RUN dotnet publish ./ClassifiedAds.WebAPI/ClassifiedAds.WebAPI.csproj -c Release -o out

# Now, we'll use another stage to keep our final image small and clean
FROM mcr.microsoft.com/dotnet/aspnet:9.0

WORKDIR /ClassifiedAds.ModularMonolith

# Copying files from build-env to build new image

# Defining our entry point 
ENTRYPOINT ["dotnet", "ClassifiedAds.WebAPI.dll"]
