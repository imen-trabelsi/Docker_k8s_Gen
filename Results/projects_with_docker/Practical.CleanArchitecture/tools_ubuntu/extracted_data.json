{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"angular\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^19.0.5\",\n    \"@angular/common\": \"^19.0.5\",\n    \"@angular/compiler\": \"^19.0.5\",\n    \"@angular/core\": \"^19.0.5\",\n    \"@angular/forms\": \"^19.0.5\",\n    \"@angular/platform-browser\": \"^19.0.5\",\n    \"@angular/platform-browser-dynamic\": \"^19.0.5\",\n    \"@angular/router\": \"^19.0.5\",\n    \"@microsoft/signalr\": \"^8.0.7\",\n    \"@ngrx/effects\": \"^19.0.0\",\n    \"@ngrx/operators\": \"^19.0.0\",\n    \"@ngrx/store\": \"^19.0.0\",\n    \"@ngrx/store-devtools\": \"^19.0.0\",\n    \"bootstrap\": \"^5.3.3\",\n    \"font-awesome\": \"^4.7.0\",\n    \"ngx-bootstrap\": \"^19.0.1\",\n    \"ngx-toastr\": \"^19.0.0\",\n    \"oidc-client\": \"^1.11.5\",\n    \"oidc-client-ts\": \"^3.1.0\",\n    \"rxjs\": \"^7.8.0\",\n    \"tslib\": \"^2.6.3\",\n    \"zone.js\": \"^0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular-devkit/build-angular\": \"^19.0.6\",\n    \"@angular/cli\": \"^19.0.6\",\n    \"@angular/compiler-cli\": \"^19.0.5\",\n    \"@angular/language-service\": \"^19.0.5\",\n    \"@types/jasmine\": \"^5.1.5\",\n    \"@types/jasminewd2\": \"^2.0.13\",\n    \"@types/node\": \"^22.10.2\",\n    \"codelyzer\": \"^6.0.2\",\n    \"jasmine-core\": \"~5.5.0\",\n    \"jasmine-spec-reporter\": \"~7.0.0\",\n    \"karma\": \"^6.4.4\",\n    \"karma-chrome-launcher\": \"^3.1.1\",\n    \"karma-coverage-istanbul-reporter\": \"~3.0.2\",\n    \"karma-jasmine\": \"^5.1.0\",\n    \"karma-jasmine-html-reporter\": \"^2.0.0\",\n    \"prettier\": \"3.4.2\",\n    \"ts-node\": \"~10.9.2\",\n    \"tslint\": \"~6.1.0\",\n    \"typescript\": \"~5.6.3\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "tools/docker-compose.yml": "version: \"3.6\"\nservices:\n    db:\n        image: \"mcr.microsoft.com/mssql/server:2017-latest\"\n        ports:\n            - \"1433:1433\"\n        environment:\n            SA_PASSWORD: \"sqladmin123!@#\"\n            MSSQL_PID: \"Developer\"\n            ACCEPT_EULA: \"Y\"\n    rabbitmq:\n        image: \"rabbitmq:3-management\"\n        ports:\n          - \"5672:5672\"\n          - \"15672:15672\"\n    mailhog:\n        image: mailhog/mailhog\n        ports: \n          - 1025:1025 # smtp server\n          - 8025:8025 # web ui\n    zookeeper:\n        image: confluentinc/cp-zookeeper:latest\n        environment:\n          ZOOKEEPER_CLIENT_PORT: 2181\n          ZOOKEEPER_TICK_TIME: 2000\n    kafka:\n        image: confluentinc/cp-kafka:latest\n        depends_on:\n          - zookeeper\n        ports:\n          - 9092:9092\n        environment:\n          KAFKA_BROKER_ID: 1\n          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://host.docker.internal:9092\n          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT\n          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT\n          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n    ubuntu:\n        build:\n            context: .\n            dockerfile: ./ubuntu/Dockerfile\n        depends_on:\n            - rabbitmq\n        command: >\n            bash -c \" \n            while ! nc -z rabbitmq 15672;\n            do\n              echo rabbitmq is not ready, sleeping;\n              sleep 1;\n            done;\n            echo Connected!;\n            curl -i -u guest:guest -H \\\"\"content-type:application/json\\\"\" -XPUT -d '{\\\"\"durable\\\"\":true}' http://rabbitmq:15672/api/queues/%2f/classifiedadds_fileuploaded\n            && curl -i -u guest:guest -H \\\"\"content-type:application/json\\\"\" -XPUT -d '{\\\"\"durable\\\"\":true}' http://rabbitmq:15672/api/queues/%2f/classifiedadds_filedeleted\n            && curl -i -u guest:guest -H \\\"\"content-type:application/json\\\"\" -XPOST -d '{\\\"\"routing_key\\\"\": \\\"\"classifiedadds_fileuploaded\\\"\", \\\"\"arguments\\\"\": {}}' http://rabbitmq:15672/api/bindings/%2f/e/amq.direct/q/classifiedadds_fileuploaded\n            && curl -i -u guest:guest -H \\\"\"content-type:application/json\\\"\" -XPOST -d '{\\\"\"routing_key\\\"\": \\\"\"classifiedadds_filedeleted\\\"\", \\\"\"arguments\\\"\": {}}' http://rabbitmq:15672/api/bindings/%2f/e/amq.direct/q/classifiedadds_filedeleted\n            && echo finished setting up rabbitmq\"",
            "tools/ubuntu/Dockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install -y curl && apt-get install -y netcat\n\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "ClassifiedAds.Services.Notification.Grpc.csproj",
            "Dockerfile",
            "Program.cs",
            "appsettings.Development.json",
            "appsettings.json"
        ],
        "folders": [
            "Properties",
            "Services"
        ]
    }
}