# 1. Using a specific version of SDK for repeatable builds
FROM mcr.microsoft.com/dotnet/sdk:9.0 as build-env

# 2. Set the work directory
WORKDIR /ClassifiedAds.Monolith

# 3. Copying csproj and restore as distinct layers to cache Docker layers
COPY ./ClassifiedAds.Application/*.csproj ./ClassifiedAds.Application/
COPY ./ClassifiedAds.CrossCuttingConcerns/*.csproj ./ClassifiedAds.CrossCuttingConcerns/
COPY ./ClassifiedAds.Domain/*.csproj ./ClassifiedAds.Domain/
COPY ./ClassifiedAds.Infrastructure/*.csproj ./ClassifiedAds.Infrastructure/
COPY ./ClassifiedAds.Persistence/*.csproj ./ClassifiedAds.Persistence/
COPY ./ClassifiedAds.Blazor.Modules/*.csproj ./ClassifiedAds.Blazor.Modules/
COPY ./ClassifiedAds.BlazorServerSide/*.csproj ./ClassifiedAds.BlazorServerSide/

RUN dotnet restore ./ClassifiedAds.Application/ClassifiedAds.Application.csproj
RUN dotnet restore ./ClassifiedAds.Infrastructure/ClassifiedAds.Infrastructure.csproj
RUN dotnet restore ./ClassifiedAds.BlazorServerSide/ClassifiedAds.BlazorServerSide.csproj

# 4. Copy everything else and build code
COPY . ./

RUN dotnet publish ./ClassifiedAds.BlazorServerSide/ClassifiedAds.BlazorServerSide.csproj -c Release -o out

# 5. Get runtime image
FROM mcr.microsoft.com/dotnet/sdk:9.0

WORKDIR /ClassifiedAds.Monolith

# 6. Copy build output files from build-env

# 7. Specify the entrypoint â€” the full command to start the app
ENTRYPOINT ["dotnet", "ClassifiedAds.BlazorServerSide.dll"]
