# Base Image
FROM ubuntu:24.04

# Environment Variables
ENV NS_VERS 3.42
ENV DEBIAN_FRONTEND=noninteractive
ENV TARGETARCH="TARGETARCH"

# Run initial commands and Copy CMakeLists.patch and wait-for-it-quic
RUN echo "TARGETARCH : $TARGETARCH" && apt-get update && apt-get install -y python3 build-essential cmake ninja-build libboost-dev libgsl-dev libxml2-dev libsqlite3-dev golang-go && tar xjf ns3.tar.bz2
COPY --checksum=sha256:90600b3fb73b00f477c8b82c04639b1fd79b8a1cfd3c46236e3c9a3c8d3bcb62 \
WORKDIR /ns3
COPY CMakeLists.patch .
COPY wait-for-it-quic /wait-for-it-quic

# Copying necessary files for build and Running build commands
COPY --from=builder /ns3/out/src/fd-net-device/* /ns3/out/src/fd-net-device/
COPY --from=builder /ns3/out/scratch/*/* /ns3/scratch/
COPY --from=builder /ns3/out/lib/ /ns3/out/lib
COPY --from=builder /wait-for-it-quic/wait-for-it-quic /usr/bin
RUN mv /ns-allinone-$NS_VERS/ns-$NS_VERS /ns3 && mkdir out/ && ./ns3 configure --build-profile=release --out=out/ && patch -d scratch < CMakeLists.patch && ./ns3 build

# Moving files and building
RUN find out/scratch -name "ns${NS_VERS}-*" | sed -e 'p' -E -e "s|ns${NS_VERS}-*||g" | xargs -n2 mv && cd /wait-for-it-quic && go build .

# Run commands for final setup
RUN apt-get update && apt-get install -y net-tools iptables libgsl-dev libxml2 libsqlite3-0 tcpdump && apt-get clean && chmod +x run.sh && mkdir /logs

# Copy run.sh script and other project files
COPY run.sh .
COPY scenarios scratch/

# Define default command.
ENTRYPOINT ["./run.sh"]
