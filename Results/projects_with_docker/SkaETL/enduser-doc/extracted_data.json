{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <artifactId>parent-importer</artifactId>\n        <groupId>io.skalogs.skaetl</groupId>\n        <version>1.0.3-SNAPSHOT</version>\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>enduser-doc</artifactId>\n    <name>enduser-doc</name>\n\n    <properties>\n        <!-- Force JRuby version to fix error \"undefined method `encoding' for nil:NilClass\"-->\n        <jruby.version>9.1.12.0</jruby.version>\n    </properties>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.asciidoctor</groupId>\n                <artifactId>asciidoctor-maven-plugin</artifactId>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.jruby</groupId>\n                        <artifactId>jruby-complete</artifactId>\n                        <version>${jruby.version}</version>\n                    </dependency>\n                    <dependency>\n                        <groupId>org.asciidoctor</groupId>\n                        <artifactId>asciidoctorj-pdf</artifactId>\n                        <version>1.5.0-alpha.16</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <title>Monitoring Platform End User Documentation</title>\n                    <preserveDirectories>true</preserveDirectories>\n                    <sourceHighlighter>coderay</sourceHighlighter>\n                    <doctype>book</doctype>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>generate-html</id>\n                        <phase>generate-resources</phase>\n                        <goals>\n                            <goal>process-asciidoc</goal>\n                        </goals>\n                        <configuration>\n                            <backend>html5</backend>\n                            <attributes>\n                                <toc>left</toc>\n                                <linkcss />\n                            </attributes>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>generate-pdf-doc</id>\n                        <phase>generate-resources</phase>\n                        <goals>\n                            <goal>process-asciidoc</goal>\n                        </goals>\n                        <configuration>\n                            <sourceDocumentName>full.adoc</sourceDocumentName>\n                            <backend>pdf</backend>\n                            <attributes>\n                                <toc />\n                            </attributes>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>com.spotify</groupId>\n                <artifactId>dockerfile-maven-plugin</artifactId>\n                <configuration>\n                    <repository>skalogs/enduser-doc</repository>\n                    <tag>${project.version}</tag>\n                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>\n                    <skip>${dockerfile.skip}</skip>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "enduser-doc/Dockerfile": "FROM nginx:1.13\n\nADD startup.sh /usr/bin/startup.sh\nRUN chmod 777 /usr/bin/startup.sh\n\nADD target/generated-docs /usr/share/nginx/html\n\nENV  SERVICE_PROJECT_NAME=SkaLogs \\\n     SERVICE_KIBANA_ENDPOINT=http://kibana:5601 \\\n     SERVICE_ELASTICSEARCH_ENDPOINT@=http://elasticsearch:9200 \\\n     SERVICE_KAFKA_ENDPOINT=kafka:9092 \\\n     SERVICE_SUPPORT_EMAIL=contact@skalogs.com\n\n\nENTRYPOINT [\"bash\", \"-c\",\"/usr/bin/startup.sh\" ]\n",
            "Jenkinsfile": "pipeline {\n    agent any\n    tools {\n        maven 'apache-maven-3.5.2'\n    }\n    stages {\n        stage('Build') {\n            steps {\n                withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {\n                  sh \"docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}\"\n                }\n                sh 'mvn -Dmaven.test.failure.ignore=true clean install'\n            }\n            post {\n                success {\n                    junit 'target/surefire-reports/**/*.xml'\n                }\n            }\n        }\n\n        stage('Push Docker Image') {\n            steps {\n                sh 'mvn dockerfile:push'\n            }\n        }\n    }\n}\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "pom.xml",
            "startup.sh"
        ],
        "folders": [
            "src"
        ]
    }
}