{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            "pyproject.toml": "[tool.towncrier]\npackage = \"opengever.core\"\nfilename = \"HISTORY.rst\"\ndirectory = \"changes/\"\ntemplate = \"towncrier.rst\"\nunderlines = [\"-\", \"\"]\nissue_format = \"{issue}\"\n\n[[tool.towncrier.type]]\ndirectory = \"feature\"\nname = \"New features:\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"bugfix\"\nname = \"Bug fixes:\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"other\"\nname = \"Other changes:\"\nshowcontent = true\n\n"
        },
        "database": null,
        "build_system": "poetry",
        "config_files": {
            "docker-compose.yml": "services:\n  httpd:\n    image: 4teamwork/oghttpd:latest\n    build:\n      context: .\n      dockerfile: ./docker/httpd/Dockerfile\n    ports:\n      - \"8088:80\"\n    depends_on:\n      - ogui\n      - ogcore\n    environment:\n      - HTTP_PROTOCOL=http\n      - HTTP_PORT=8088\n      - PORTAL_HOST=ianus-frontend\n    profiles:\n      - all\n  msgconvert:\n    image: 4teamwork/msgconvert:latest\n    ports:\n      - 8090:8080\n  sablon:\n    image: 4teamwork/sablon:latest\n    ports:\n      - 8091:8080\n  pdflatex:\n    image: 4teamwork/pdflatex:latest\n    ports:\n      - 8092:8080\n  weasyprint:\n    image: 4teamwork/weasyprint:latest\n    ports:\n      - 8093:8080\n  clamav:\n    image: clamav/clamav:latest\n    ports:\n      - '3310:3310'\n    volumes:\n      - clam_db:/var/lib/clamav\n      - ./clamav/clamd.conf:/etc/clamav/clamd.conf\n    profiles:\n      - clamav\n  ogui:\n    image: 4teamwork/ogui:latest\n    profiles:\n      - all\n  ogcore: &ogcore\n    build:\n      context: .\n      dockerfile: ./docker/core/Dockerfile\n      secrets:\n        - gldt\n    image: 4teamwork/ogcore:latest\n    volumes:\n      - ./var/ogcore:/data\n    ports:\n      - \"8080:8080\"\n      - \"8160:8160\"\n    environment:\n      - PLONE_LDAP_BIND_UID=${LDAP_BIND_DN:-cn=admin,dc=dev,dc=onegovgever,dc=ch}\n      - PLONE_LDAP_BIND_PWD=${LDAP_BIND_PASSWORD:-secret}\n      - MSGCONVERT_URL=http://msgconvert:8080/\n      - SABLON_URL=http://sablon:8080/\n      - PDFLATEX_URL=http://pdflatex:8080/\n      - WEASYPRINT_URL=http://weasyprint:8080/\n      - OGDS_SYNC_URL=http://ogds-sync:8080/\n    depends_on:\n      - zeoserver\n      - ogds\n      - solr\n    profiles:\n      - all\n      - ogcore\n  ogcore-cron:\n    <<: *ogcore\n    command: cron\n    ports:\n      - \"8082:8080\"\n    profiles:\n      - all\n      - ogcore-cron\n  zeoserver:\n    image: 4teamwork/zeoserver:4.3.20\n    volumes:\n      - ./var/ogcore:/data\n    profiles:\n      - all\n      - ogcore\n  ogds:\n    image: postgres:13-alpine\n    volumes:\n      - ogds:/var/lib/postgresql/data\n    environment:\n      - POSTGRES_USER=${OGDS_DB_USER:-ogds}\n      - POSTGRES_PASSWORD=${OGDS_DB_PASSWORD:-secret}\n      - POSTGRES_DB=${OGDS_DB_NAME:-ogds}\n    ports:\n      - 15432:5432\n  ogds-sync:\n    image: 4teamwork/ogds-sync:latest\n    ports:\n      - 8099:8080\n    environment:\n      - OGDS_DSN=postgresql://${OGDS_DB_USER:-ogds}:${OGDS_DB_PASSWORD:-secret}@${OGDS_DB_HOST:-ogds}/${OGDS_DB_NAME:-ogds}\n      - LDAP_PROFILE=${LDAP_PROFILE:-OpenLDAPLegacy}\n      - LDAP_URL=${LDAP_SERVER_URI:-ldap://ldap:1389}\n      - LDAP_BIND_DN=${LDAP_BIND_DN:-cn=admin,dc=dev,dc=onegovgever,dc=ch}\n      - LDAP_BIND_PASSWORD=${LDAP_BIND_PASSWORD:-secret}\n      - LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN:-ou=Users,dc=dev,dc=onegovgever,dc=ch}\n      - LDAP_GROUP_BASE_DN=${LDAP_GROUP_BASE_DN:-ou=Groups,dc=dev,dc=onegovgever,dc=ch}\n    depends_on:\n      - ogds\n  solr:\n    image: 4teamwork/ogsolr:latest\n    build:\n      context: .\n      dockerfile: ./docker/solr/Dockerfile\n    command: solr-foreground\n    volumes:\n      - ./var/solr:/var/solr/data\n    environment:\n      - SOLR_CORES=development testing functionaltesting testserver\n    ports:\n      - 8983:8983\n  redis:\n    image: redis:6.2-alpine\n    command:\n      - redis-server\n      - --save 60 1\n    ports:\n      - 6379:6379\n    volumes:\n      - ./var/redis:/data\n  ldap:\n    image: bitnami/openldap:2.6\n    ports:\n      - 1389:1389\n    environment:\n      - LDAP_ADMIN_USERNAME=admin\n      - LDAP_ADMIN_PASSWORD=secret\n      - LDAP_ROOT=dc=dev,dc=onegovgever,dc=ch\n      - LDAP_ADMIN_DN=cn=admin,dc=dev,dc=onegovgever,dc=ch\n    volumes:\n      - ./docker/ldap.ldif:/ldifs/ldap.ldif\n      - ./var/openldap:/bitnami/openldap\n  mta:\n    image: 4teamwork/ogmta:latest\n    build:\n      context: .\n      dockerfile: ./docker/mta/Dockerfile\n    ports:\n      - '8025:25'\n    environment:\n      POSTFIX_MYHOSTNAME: ogmta.onegovgever.ch\n      POSTFIX_MYORIGIN: dev.onegovgever.ch\n      POSTFIX_SMTPD_TLS_SECURITY_LEVEL: none\n      VIRTUAL_DOMAINS_0: name=dev.onegovgever.ch,url=http://ogcore:8080/ogsite\n    profiles:\n      - mta\n  ianus-frontend:\n    image: ghcr.io/4teamwork/ianus-frontend:2024.2.0\n    ports:\n      - \"3000:80\"\n    depends_on:\n      - ianus-backend\n    environment:\n      - IANUS_BACKEND_HOST=ianus-backend\n      - IANUS_PATH_PREFIX=/portal\n    profiles:\n      - all\n      - ianus\n  ianus-backend:\n    image: ghcr.io/4teamwork/ianus-backend:2024.2.0\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - ianus-db\n    environment:\n      - DJANGO_SECRET_KEY=secret\n      - DJANGO_ALLOWED_HOSTS=localhost,teamraum,gever,ianus-frontend\n      - DJANGO_PATH_PREFIX=/portal\n      - DJANGO_SESSION_COOKIE_SECURE=False\n      - DJANGO_CSRF_COOKIE_SECURE=False\n      - DJANGO_DATABASE_NAME=ianus\n      - DJANGO_DATABASE_USER=ianus\n      - DJANGO_DATABASE_PASSWORD=secret\n      - DJANGO_DATABASE_HOST=ianus-db\n      - DJANGO_DATABASE_PORT=5432\n      - DJANGO_TWO_FACTOR_REQUIRED=False\n      - DJANGO_OIDC_RP_SIGN_ALGO=HS256\n      - DJANGO_AUTH_LDAP_BIND_DN=${LDAP_BIND_DN:-cn=admin,dc=dev,dc=onegovgever,dc=ch}\n      - DJANGO_AUTH_LDAP_BIND_PASSWORD=${LDAP_BIND_PASSWORD:-secret}\n      - DJANGO_AUTH_LDAP_SERVER_URI=${LDAP_SERVER_URI:-ldap://ldap:1389}\n      - DJANGO_AUTH_LDAP_USER_BASE_DN=${LDAP_USER_BASE_DN:-ou=Users,dc=dev,dc=onegovgever,dc=ch}\n      - DJANGO_AUTH_LDAP_USER_ATTR_MAP={'first_name':'givenName','last_name':'sn','email':'mail','username':'uid'}\n      - DJANGO_AUTH_LDAP_GROUP_BASE_DN=ou=Groups,dc=dev,dc=onegovgever,dc=ch\n      - DJANGO_AUTH_LDAP_GROUP_TYPE_CLASS=django_auth_ldap.config.GroupOfUniqueNamesType\n      - DJANGO_AUTH_LDAP_GROUP_MEMBER_ATTR=uniqueMember\n      - DJANGO_AUTH_LDAP_GROUP_SEARCH_FILTER=(objectClass=groupOfUniqueNames)\n      - DJANGO_AUTH_LDAP_USER_ADDITIONAL_ATTRS=memberOf\n      - DJANGO_CAS_USER_ATTR_MAP={'email':'mail','firstname':'givenName','lastname':'sn','groups':'memberOf'}\n\n    profiles:\n      - all\n      - ianus\n  ianus-db:\n    image: postgres:13-alpine\n    volumes:\n      - ./var/ianus-db:/var/lib/postgresql/data\n    environment:\n      - POSTGRES_DB=ianus\n      - POSTGRES_USER=ianus\n      - POSTGRES_PASSWORD=secret\n    profiles:\n      - all\n      - ianus\n  testserver-solr:\n    image: 4teamwork/ogsolr:latest\n    build:\n      context: .\n      dockerfile: ./docker/solr/Dockerfile\n    command: solr-foreground\n    environment:\n      - SOLR_CORES=testserver\n    ports:\n      - 18983:8983\n    profiles:\n      - testserver\n  testserver:\n    build:\n      context: .\n      dockerfile: ./docker/testserver/Dockerfile\n      secrets:\n        - gldt\n    image: 4teamwork/ogtestserver:latest\n    ports:\n      - 55001:55001\n      - 55002:55002\n    environment:\n      - SOLR_HOSTNAME=testserver-solr\n      - TESTSERVER_REUSE_RUNNING_SOLR=8983\n      - SOLR_PORT=8983\n      - MSGCONVERT_URL=http://msgconvert:8080/\n      - SABLON_URL=http://sablon:8080/\n      - PDFLATEX_URL=http://pdflatex:8080/\n      - WEASYPRINT_URL=http://weasyprint:8080/\n    depends_on:\n      - msgconvert\n      - sablon\n      - pdflatex\n      - weasyprint\n      - testserver-solr\n    profiles:\n      - testserver\n\n  kub:\n    image: 4teamwork/kub:latest\n    ports:\n      - \"3100:8000\"\n    depends_on:\n      - kub-db\n    environment:\n      DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1\n      DJANGO_SECRET_KEY: secret\n      DJANGO_DATABASE_HOST: kub-db\n      DJANGO_DATABASE_NAME: kub\n      DJANGO_DATABASE_USER: kub\n      DJANGO_DATABASE_PASSWORD: secret\n      CAS_SERVER_URL: http://ianus-frontend/portal/cas\n      CAS_ROOT_PROXIED_AS: http://localhost:3100\n      ALLOWED_PORTAL_GROUPS: all\n    volumes:\n      - kub_media:/app/media\n    profiles:\n      - kub\n  kub-db:\n    image: postgres:13-alpine\n    volumes:\n      - kub_db:/var/lib/postgresql/data\n    environment:\n      POSTGRES_USER: kub\n      POSTGRES_PASSWORD: secret\n      POSTGRES_DB: kub\n    profiles:\n      - kub\n\nvolumes:\n  ogds:\n  clam_db:\n  kub_db:\n  kub_media:\n\nsecrets:\n  gldt:\n    environment: GITLAB_DEPLOY_TOKEN\n",
            "docker/testserver/Dockerfile": "FROM 4teamwork/ogcore:latest\n\nUSER root\nWORKDIR /app\n\nCOPY ./docker/testserver/requirements-testserver.txt /app/\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=secret,id=gldt \\\n    export GITLAB_DEPLOY_TOKEN=$(cat /run/secrets/gldt) && \\\n    pip install \\\n    --extra-index-url https://__token__:$GITLAB_DEPLOY_TOKEN@git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple \\\n    -r requirements-testserver.txt \\\n    -c requirements-core.txt \\\n    -c requirements-deployment.txt\n\nHEALTHCHECK --start-period=2m CMD /app/bin/testserverctl connectiontest\nCOPY ./bin/testserverctl ./docker/testserver/bin/testserver /app/bin/\nCOPY ./docker/testserver/docker-entrypoint.sh /app/\n\nENV SOLR_HOSTNAME=testserver-solr\nENV TESTSERVER_REUSE_RUNNING_SOLR=8983\nENV SOLR_PORT=8983\nENV MSGCONVERT_URL=http://msgconvert:8080/\nENV SABLON_URL=http://sablon:8080/\nENV PDFLATEX_URL=http://pdflatex:8080/\nENV WEASYPRINT_URL=http://weasyprint:8080/\n\nUSER plone\nEXPOSE 55001\nEXPOSE 55002\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "docker-entrypoint.sh",
            "inituser",
            "requirements-core.txt",
            "requirements-deployment.txt",
            "zopectl"
        ],
        "folders": [
            "cron",
            "entrypoint.d",
            "etc",
            "packages",
            "patches",
            "scripts"
        ]
    }
}