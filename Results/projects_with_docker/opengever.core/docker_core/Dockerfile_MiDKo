# Base Image
FROM golang:1.23-alpine3.20 as builder

# Build Arguments
ARG GOCROND_VERSION=23.12.0

# Set Python Uniencoded version
ENV PYTHONUNBUFFERED 1

# Install Dependencies
RUN apk -U add sudo alpine-sdk apkbuild-pypi \
    && mkdir -p /var/cache/distfiles \
    && adduser -D packager \
    && addgroup packager abuild \
    && chgrp abuild /var/cache/distfiles \
    && chmod g+w /var/cache/distfiles \
    && echo "packager ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
    && abuild-keygen -a -i -n \
    && cd openssl1.1-compat && abuild -r \
    && apk --repository /packages add gcc musl-dev libc-dev zlib-dev libjpeg-turbo-dev libpng-dev libxml2-dev libxslt-dev openldap-dev openssl1.1-compat-dev libffi-dev libpq libpq-dev gettext \

WORKDIR /work
COPY --chown=packager:packager ./docker/core/packages/ ./
RUN mkdir -p /go/src/github.com/webdevops \
    && cd /go/src/github.com/webdevops \
    && git clone https://github.com/webdevops/go-crond.git \
    && git checkout $GOCROND_VERSION \
    && go mod download \
    && make test \

WORKDIR /app
RUN apk upgrade --no-cache --force
RUN apk add --update build-base make git libldap libffi libpq procps-ng

COPY --from=go-crond-builder /go/src/github.com/webdevops/go-crond /usr/local/bin
COPY . . 
COPY ./docker/core/entrypoint.d /app/entrypoint.d
COPY ./docker/core/Dockerfile ./docker/core/docker-entrypoint.sh ./docker/core/inituser /app/
COPY ./docker/core/etc /app/etc 
COPY ./docker/core/zopectl /app/bin/
COPY --chown=root ./docker/core/cron /app/cron

# Set default user
USER packager

# Expose port
EXPOSE 8160

# Environment variables
ENV PATH="/app/bin:$PATH"
ENV PATH="/app/bin:$PATH"

#  Entrypoint/Command instructions
ENTRYPOINT [ "python", "/app/app.py" ]
