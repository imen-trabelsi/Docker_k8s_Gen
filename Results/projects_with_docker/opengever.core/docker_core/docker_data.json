{
    "docker_info": {
        "base_image": "golang:1.23-alpine3.20",
        "multi_stage_build": true,
        "exposed_ports": [
            "8160"
        ],
        "user": [
            "packager",
            "root",
            "root",
            "plone"
        ],
        "labels": [],
        "health_checks": [],
        "build_args": [
            "GOCROND_VERSION=23.12.0"
        ],
        "envs": [
            "ENV PATH=\"/app/bin:$PATH\"",
            "ENV PATH=\"/app/bin:$PATH\""
        ],
        "copy_instructions": [
            "WORKDIR /work",
            "COPY --chown=packager:packager ./docker/core/packages/ ./",
            "WORKDIR /app",
            "COPY ./docker/core/requirements-core.txt ./docker/core/requirements-deployment.txt /app/",
            "COPY setup.py README.rst HISTORY.rst ./",
            "COPY ./opengever ./opengever",
            "COPY ./plonetheme ./plonetheme",
            "COPY ./src ./src",
            "COPY ./docker/core/etc /app/etc",
            "COPY ./docker/core/docker-entrypoint.sh ./docker/core/inituser /app/",
            "COPY ./docker/core/zopectl /app/bin/",
            "COPY --chown=plone ./docker/core/cron /app/cron",
            "COPY ./docker/core/patches/hashing.py /app/lib/python2.7/site-packages/ftw/bumblebee/hashing.py",
            "COPY ./docker/core/patches/p_a_theming_transform.py /app/lib/python2.7/site-packages/plone/app/theming/transform.py",
            "WORKDIR /go/src/github.com/webdevops/go-crond",
            "COPY --from=builder /app /app",
            "COPY --from=go-crond-builder /go/src/github.com/webdevops/go-crond /usr/local/bin",
            "WORKDIR /app"
        ],
        "execution": [],
        "run": [
            [
                "apk -U add \\",
                "sudo",
                "alpine-sdk",
                "apkbuild-pypi"
            ],
            [
                "mkdir -p /var/cache/distfiles && \\",
                "adduser -D packager &&",
                "addgroup packager abuild &&",
                "chgrp abuild /var/cache/distfiles &&",
                "chmod g+w /var/cache/distfiles &&",
                "echo \"packager ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers"
            ],
            [
                "abuild-keygen -a -i -n",
                ""
            ],
            [
                "cd openssl1.1-compat && \\",
                "abuild -r"
            ],
            [
                "--mount=from=pkg-builder,source=/home/packager/packages/work,target=/packages \\",
                "--mount=from=pkg-builder,source=/etc/apk/keys,target=/etc/apk/keys",
                "apk --repository /packages add",
                "gcc",
                "musl-dev",
                "libc-dev",
                "zlib-dev",
                "libjpeg-turbo-dev",
                "libpng-dev",
                "libxml2-dev",
                "libxslt-dev",
                "openldap-dev",
                "openssl1.1-compat-dev",
                "libffi-dev",
                "libpq",
                "libpq-dev",
                "gettext"
            ],
            [
                "echo \"INPUT ( libldap.so )\" > /usr/lib/libldap_r.so",
                ""
            ],
            [
                "--mount=type=cache,target=/root/.cache \\",
                "--mount=type=secret,id=gldt",
                "export GITLAB_DEPLOY_TOKEN=$(cat /run/secrets/gldt) &&",
                "CFLAGS=\"-I/usr/include/openssl1.1\"",
                "LDFLAGS=\"-L/usr/lib/openssl1.1\"",
                "pip install",
                "--prefix /app",
                "--extra-index-url https://__token__:$GITLAB_DEPLOY_TOKEN@git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple",
                "-r requirements-core.txt",
                "-r requirements-deployment.txt"
            ],
            [
                "--mount=type=cache,target=/root/.cache \\",
                "--mount=type=secret,id=gldt",
                "export GITLAB_DEPLOY_TOKEN=$(cat /run/secrets/gldt) &&",
                "pip install",
                "--prefix /app",
                "--extra-index-url https://__token__:$GITLAB_DEPLOY_TOKEN@git.4teamwork.ch/api/v4/projects/486/packages/pypi/simple",
                "-e .",
                "-e /app/src/opengever.maintenance",
                "-c requirements-core.txt",
                "-c requirements-deployment.txt"
            ],
            [
                "find /app/opengever -name \"*.po\" | xargs -I@ sh -c 'msgfmt @ -o \"$(dirname @)/$(basename @ .po)\".mo' && \\",
                "find /app/plonetheme -name \"*.po\" | xargs -I@ sh -c 'msgfmt @ -o \"$(dirname @)/$(basename @ .po)\".mo'"
            ],
            [
                "chown -R plone:plone /app/opengever/bundle/schemas",
                ""
            ],
            [
                "chown -R plone:plone /app/etc",
                "COPY ./docker/core/entrypoint.d /app/entrypoint.d"
            ],
            [
                "chmod 644 /app/cron/crontab",
                ""
            ],
            [
                "mkdir -p /app/var/log /app/var/instance \\",
                "&& chown plone:plone /app/var/log",
                "&& chown plone:plone /app/var/instance",
                "&& ln -sf /dev/stderr /app/var/log/instance.log",
                "&& ln -sf /dev/stdout /app/var/log/instance-json.log",
                "&& ln -sf /dev/stdout /app/var/log/solr-maintenance.log",
                "&& ln -sf /data/log/contentstats-json.log /app/var/log/contentstats-json.log",
                "&& ln -sf /data/log/nightly-jobs.log /app/var/log/nightly-jobs.log",
                "&& ln -sf /data/log/ogds-update.log /app/var/log/ogds-update.log"
            ],
            [
                "ln -sf /dev/null /app/var/log/upgrade_stats.csv",
                ""
            ],
            [
                "wget -O /app/lib/python2.7/site-packages/certifi/cacert.pem https://raw.githubusercontent.com/certifi/python-certifi/2024.02.02/certifi/cacert.pem",
                ""
            ],
            [
                "python2.7 -m compileall /app/lib/python2.7/site-packages/ftw/bumblebee/hashing.py",
                ""
            ],
            [
                "python2.7 -m compileall /app/lib/python2.7/site-packages/plone/app/theming/transform.py",
                ""
            ],
            [
                "apk upgrade --no-cache --force",
                "RUN apk add --update build-base make git"
            ],
            [
                "mkdir -p /go/src/github.com/webdevops \\",
                "&& cd /go/src/github.com/webdevops",
                "&& git clone https://github.com/webdevops/go-crond.git"
            ],
            [
                "git checkout $GOCROND_VERSION",
                "RUN go mod download"
            ],
            [
                "make test",
                "RUN make build"
            ],
            [
                "apk add \\",
                "libldap",
                "libffi",
                "libpq",
                "procps-ng"
            ]
        ]
    }
}