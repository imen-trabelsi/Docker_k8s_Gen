{
    "source_code_info": {
        "language": "Python",
        "framework": "Django",
        "dependencies": {
            "pyproject.toml": "[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.poe]\nenvfile = \".env\"\n\n[tool.poe.tasks]\nstart.help = \"Start development server with hot reload\"\nstart.cmd = \"uvicorn saleor.asgi:application --reload\"\n\nworker.help = \"Start Celery worker\"\nworker.cmd = \"celery --app saleor.celeryconf:app worker -E\"\n\nscheduler.help = \"Start Celery Beat scheduler\"\nscheduler.cmd = \"celery --app saleor.celeryconf:app beat --scheduler saleor.schedulers.schedulers.DatabaseScheduler\"\n\nbuild-schema.cmd = \"python manage.py get_graphql_schema\"\nbuild-schema.capture_stdout = \"saleor/graphql/schema.graphql\"\nbuild-schema.help = \"Build GraphQL schema to saleor/graphql/schema.graphql file\"\n\nmigrate.cmd = \"python manage.py migrate\"\nmigrate.help = \"Run database migrations\"\n\nrelease.shell = \"npm run release\"\nrelease.help = \"\"\"\nRelease new Saleor verison\nPrerequisities:\n- Node installed on machine\n- Run npm install to install dependencies\n\"\"\"\n\nshell.cmd = \"python manage.py shell\"\nshell.help = \"Start Django shell in interactive mode\"\n\npopulatedb.cmd = \"python manage.py populatedb --createsuperuser\"\npopulatedb.help = \"\"\"\nPopulates database with sample data and creates admin user with credentials:\n- email: admin@example.com\n- password: admin\n\"\"\"\n\ntest.cmd=\"pytest --reuse-db\"\ntest.help = \"Run tests with db reuse to speed up testing time\"\n\n[tool.poetry]\nname = \"saleor\"\nversion = \"3.21.0-a.0\"\ndescription = \"A modular, high performance, headless e-commerce platform built with Python, GraphQL, Django, and React.\"\nauthors = [ \"Saleor Commerce <hello@saleor.io>\" ]\nlicense = \"BSD-3-Clause\"\nreadme = \"README.md\"\nhomepage = \"https://saleor.io/\"\nrepository = \"https://github.com/saleor/saleor\"\ndocumentation = \"https://docs.saleor.io/\"\npackage-mode = false\n\n  [tool.poetry.dependencies]\n  python = \"~3.12\"\n  Adyen = \"^4.0.0\"\n  asgiref = \"^3.7.2\"\n  Authlib = \"^1.3.1\"\n  authorizenet = \"^1.1.5\"\n  azure-common = \"^1.1.28\"\n  azure-storage-blob = \"^12.23.1\"\n  azure-storage-common = \"^2.1.0\"\n  babel = \">=2.8,<2.17\"\n  boto3 = \"^1.28\"\n  botocore = \"^1.35\"\n  braintree = \">=4.2,<4.32\"\n  cryptography = \"^43.0.1\"\n  dj-database-url = \"^2\"\n  dj-email-url = \"^1\"\n  django = {version = \"^4.2\", extras = [\"bcrypt\"]}\n  django-cache-url = \"^3.1.2\"\n  django-celery-beat = \"^2.2.1\"\n  django-countries = \"^7.2\"\n  django-filter = \"^24.3\"\n  django-measurement = \"^3.0\"\n  django-mptt = \"^0\"\n  django-phonenumber-field = \">=4,<9\"\n  django-prices = \"^2.3\"\n  django-stubs-ext = \"^5.1.1\"\n  draftjs-sanitizer = \"^1.0.0\"\n  faker = \">=26.0.0,<27.0\"\n  google-cloud-pubsub = \">=1.7,<3.0\"\n  google-cloud-storage = \"^2.0.0\"\n  google-i18n-address = \"^3.1.0\"\n  graphene = \"<3.0\"\n  graphql-core = \"^2.3.2\"\n  graphql-relay = \"^2.0.1\"\n  html-to-draftjs = \"^1.0.1\"\n  jaeger-client = \"^4.5.0\"\n  lxml = \"^4.9.3\"\n  markdown = \"^3.1.1\"\n  measurement = \"^3.2.2\"\n  micawber = \"^0.5.5\"\n  oauthlib = \"^3.1\"\n  opentracing = \"^2.3.0\"\n  petl = \"1.7.15\"\n  phonenumberslite = \"^8.13.52\"\n  pillow = \"^11.1.0\"\n  pillow-avif-plugin = \"^1.3.1\"\n  posuto = \"^2025.1.0\"\n  prices = \"^1.0\"\n  promise = \"^2.3\"\n  pybars3 = \"^0.9.7\"\n  pyjwt = \"^2.10.1\"\n  python-dateutil = \"^2.8.2\"\n  python-http-client = \"^3.3.7\"\n  python-json-logger = \">=0.1.11,<3.3.0\"\n  pytimeparse = \"^1.1.8\"\n  razorpay = \"^1.2\"\n  redis = \"^5.0.1\"\n  requests = \"^2.32\"\n  requests-hardened = \">=1.0.0,<2.0.0\"\n  Rx = \"^1.6.3\"\n  semantic-version = \"^2.10.0\"\n  sendgrid = \"^6.7.1\"\n  sentry-sdk = \"^2.12\"\n  stripe = \"^3.0.0\"\n  text-unidecode = \"^1.2\"\n  urllib3 = \"^1.26.19\"\n  uvicorn = {extras = [\"standard\"], version = \"^0.32.0\"}\n  setuptools = \"^75.6.0\"\n  psycopg = {version = \"^3.1.8\", extras = [\"binary\"]}\n\n    [tool.poetry.dependencies.celery]\n    version = \">=4.4.5,<6.0.0\"\n    extras = [ \"redis\", \"sqs\" ]\n\n    [tool.poetry.dependencies.django-storages]\n    version = \"^1.11\"\n    extras = [ \"google\" ]\n\n    [tool.poetry.dependencies.python-magic]\n    version = \"^0.4.27\"\n    markers = \"sys_platform != 'win32'\"\n\n    [tool.poetry.dependencies.python-magic-bin]\n    version = \"^0.4.14\"\n    platform = \"win32\"\n\n  [tool.poetry.group.dev.dependencies]\n  coverage = \"^7.6\"\n  deptry = \"^0.21.1\"\n  django-extensions = \"^3.1.2\"\n  django-stubs = { version = \"^4.2.7\", extras = [\"compatible-mypy\"] }\n  fakeredis = \"^2.26\"\n  freezegun = \"^1\"\n  mypy-extensions = \"^1.0.0\"\n  openpyxl = \"^3.1.5\"\n  pre-commit = \"^4.0\"\n  pytest = \"^8.3.2\"\n  pytest-asyncio = \"^0.25.0\"\n  pytest-celery = \"^1.0.1\"\n  pytest-cov = \"^6.0.0\"\n  pytest-django = \"4.9.0\"\n  pytest-django-queries = \"~1.2\"\n  pytest-memray = \"^1.5.0\"\n  pytest-mock = \"^3.6.1\"\n  pytest-recording = \"^0.13.0\"\n  pytest-socket = \"^0.7.0\"\n  pytest-xdist = \"^3.0.2\"\n  pywatchman = \"^2.0.0\"\n  ruff = \"^0.9.1\"\n  semgrep = \">=1.34.0\"\n  types-certifi = \"^2021.10.8\"\n  types-freezegun = \"^1.1.7\"\n  types-mock = \"^5.0.0.5\"\n  types-setuptools = \"^75.6.0.20241126\"\n  types-python-dateutil = \"^2.9.0\"\n  types-redis = \"^4.6.0\"\n  types-requests = \"^2.31.0\" # Cannot upgrade due to using an old version of urllib3 (https://github.com/saleor/saleor/issues/17130)\n  types-six = \"^1.16.17\"\n  vcrpy = \">=4.0,<7.0\"\n  poethepoet = \"^0.32.2\"\n  ipdb = \"^0.13.13\"\n\n[tool.deptry]\nextend_exclude = [\"conftest\\\\.py\", \".*/conftest\\\\.py\", \".*/tests/.*\"]\n\n  [tool.deptry.package_module_name_map]\n  graphql-core = \"graphql\"\n  pillow = \"PIL\"\n  python-magic-bin = \"magic\"\n\n  [tool.deptry.per_rule_ignores]\n  DEP001 = [\"pkg_resources\"]\n  DEP002 = [\"azure-common\", \"azure-storage-blob\", \"azure-storage-common\", \"django-redis\", \"psycopg\", \"pyxb\"]\n\n[tool.django-stubs]\ndjango_settings_module = \"saleor.settings\"\n\n[tool.mypy]\nallow_untyped_globals = true\nallow_redefinition = true\ncheck_untyped_defs = true\nignore_missing_imports = true\npretty = true\nshow_column_numbers = true\nshow_error_codes = true\nshow_error_context = true\nshow_traceback = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\n\nplugins = [\n  \"mypy_django_plugin.main\"\n]\n\nexclude = [\n  \"tests/\"\n]\n\n  [[tool.mypy.overrides]]\n  module = [\"saleor.*.migrations.*\"]\n  ignore_errors = true\n\n\n[tool.ruff]\ntarget-version = \"py312\"\n\n  [tool.ruff.lint]\n  select = [\n    \"ASYNC\",\n    \"B\",\n    \"C4\",\n    \"D\",\n    \"DTZ\",\n    \"E\",\n    \"F\",\n    \"FURB\",\n    \"G\",\n    \"I\",\n    \"ISC001\",\n    \"ISC002\",\n    \"LOG\",\n    \"PGH\",\n    \"PIE\",\n    \"PT\",\n    \"PYI\",\n    \"RET\",\n    \"T20\",\n    \"UP\",\n    \"W\"\n  ]\n  ignore = [\n    \"B009\", # Do not call getattr with a constant value\n    \"B010\", # Do not call setattr with a constant value\n    \"B023\", # Function definition does not bind loop variable\n    \"D100\", # Missing docstring in public module\n    \"D101\", # Missing docstring in public class\n    \"D102\", # Missing docstring in public method\n    \"D103\", # Missing docstring in public function\n    \"D104\", # Missing docstring in public package\n    \"D105\", # Missing docstring in magic method\n    \"D106\", # Missing docstring in public nested class\n    \"D107\", # Missing docstring in __init__\n    \"D202\", # No blank lines allowed after function docstring\n    \"D203\", # 1 blank line required before class docstring\n    \"D206\", # Docstring should be indented with spaces, not tabs\n    \"D213\", # Multi-line docstring summary should start at the second line\n    \"D407\", # Missing dashed underline after section\n    \"E501\", # Line too long\n    \"PT019\", # Fixture without value is injected as parameter, use @pytest.mark.usefixtures instead\n    \"PYI041\", # Use `float` instead of `int | float`\n    \"RET504\" # Unnecessary assignment before return statement\n  ]\n\n  [tool.ruff.lint.flake8-pytest-style]\n  fixture-parentheses = false\n  mark-parentheses = false\n\n  [tool.ruff.lint.isort]\n  known-first-party = [\"saleor\"]\n"
        },
        "database": "PostgreSQL",
        "build_system": "poetry",
        "config_files": {
            "Dockerfile": "### Build and install packages\nFROM python:3.12 AS build-python\n\nRUN apt-get -y update \\\n  && apt-get install -y gettext \\\n  # Cleanup apt cache\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Python dependencies\nWORKDIR /app\nRUN --mount=type=cache,mode=0755,target=/root/.cache/pip pip install poetry==2.0.1\nRUN poetry config virtualenvs.create false\nCOPY poetry.lock pyproject.toml /app/\nRUN --mount=type=cache,mode=0755,target=/root/.cache/pypoetry poetry install\n\n### Final image\nFROM python:3.12-slim\n\nRUN groupadd -r saleor && useradd -r -g saleor saleor\n\n# Pillow dependencies\nRUN apt-get update \\\n  && apt-get install -y \\\n  libffi8 \\\n  libgdk-pixbuf2.0-0 \\\n  liblcms2-2 \\\n  libopenjp2-7 \\\n  libssl3 \\\n  libtiff6 \\\n  libwebp7 \\\n  libpq5 \\\n  # Required by celery[sqs] which uses pycurl for AWS SQS support\n  libcurl4 \\\n  shared-mime-info \\\n  mime-support \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /app/media /app/static \\\n  && chown -R saleor:saleor /app/\n\nCOPY --from=build-python /usr/local/lib/python3.12/site-packages/ /usr/local/lib/python3.12/site-packages/\nCOPY --from=build-python /usr/local/bin/ /usr/local/bin/\nCOPY . /app\nWORKDIR /app\n\nARG STATIC_URL\nENV STATIC_URL=${STATIC_URL:-/static/}\nRUN SECRET_KEY=dummy STATIC_URL=${STATIC_URL} python3 manage.py collectstatic --no-input\n\nEXPOSE 8000\nENV PYTHONUNBUFFERED=1\n\nLABEL org.opencontainers.image.title=\"saleor/saleor\" \\\n  org.opencontainers.image.description=\"The commerce engine for modern software development teams.\" \\\n  org.opencontainers.image.url=\"https://saleor.io/\" \\\n  org.opencontainers.image.source=\"https://github.com/saleor/saleor\" \\\n  org.opencontainers.image.authors=\"Saleor Commerce (https://saleor.io)\" \\\n  org.opencontainers.image.licenses=\"BSD-3-Clause\"\n\nCMD [\"uvicorn\", \"saleor.asgi:application\", \"--host=0.0.0.0\", \"--port=8000\", \"--workers=2\", \"--lifespan=off\", \"--ws=none\", \"--no-server-header\", \"--no-access-log\", \"--timeout-keep-alive=35\", \"--timeout-graceful-shutdown=30\", \"--limit-max-requests=10000\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "backend.env",
            "common.env",
            "devcontainer.json",
            "docker-compose.yml"
        ],
        "folders": []
    }
}