{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.github.daggerok</groupId>\n  <artifactId>streaming-file-server</artifactId>\n  <packaging>pom</packaging>\n  <version>4.3.40</version>\n\n  <developers>\n    <developer>\n      <name>Maksim Kostromin</name>\n      <email>daggerok@gmail.com</email>\n      <organization>Sets of open source Maksim Kostromin aka daggerok projects</organization>\n      <organizationUrl>https://github.com/daggerok/</organizationUrl>\n    </developer>\n  </developers>\n\n  <organization>\n    <name>Maksim Kostromin aka daggerok open source projects sets</name>\n    <url>https://github.com/daggerok/</url>\n  </organization>\n\n  <licenses>\n    <license>\n      <name>MIT License</name>\n      <url>https://github.com/daggerok/streaming-file-server/blob/master/LICENSE</url>\n    </license>\n  </licenses>\n\n  <scm>\n    <developerConnection>scm:git:git@github.com:daggerok/streaming-file-server.git</developerConnection>\n    <connection>scm:git:https://github.com/daggerok/streaming-file-server.git</connection>\n    <url>https://github.com/daggerok/streaming-file-server.git</url>\n    <tag>HEAD</tag>\n  </scm>\n\n  <properties>\n    <java.version>1.8</java.version>\n    <maven.compiler.source>${java.version}</maven.compiler.source>\n    <maven.compiler.target>${java.version}</maven.compiler.target>\n\n    <encoding>UTF-8</encoding>\n    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>\n\n    <maven.version>3.8.5</maven.version>\n    <maven.wrapper.version>3.1.0</maven.wrapper.version>\n    <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>\n    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>\n    <github-release-plugin.version>1.4.0</github-release-plugin.version>\n    <versions-maven-plugin.version>2.10.0</versions-maven-plugin.version>\n    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>\n    <asciidoctor-maven-plugin.version>2.0.0-RC.1</asciidoctor-maven-plugin.version>\n\n    <!-- 1.3.0-alpha4 is incompatible -->\n    <logback.version>1.2.3</logback.version>\n\n    <asciidoctor.version>3.3.2</asciidoctor.version>\n    <rubygems.rouge.version>3.28.0</rubygems.rouge.version>\n    <rubygems.coderay.version>1.1.3</rubygems.coderay.version>\n    <asciidoctorj.pdf.version>1.6.2</asciidoctorj.pdf.version>\n    <asciidoctor.diagram.version>2.2.1</asciidoctor.diagram.version>\n\n    <vavr.version>0.10.4</vavr.version>\n    <gradle.version>7.4.2</gradle.version>\n    <jquery.version>3.6.0</jquery.version>\n    <popper.version>1.16.1</popper.version>\n    <lombok.version>1.18.22</lombok.version>\n    <postgres.version>42.3.3</postgres.version>\n    <bootstrap.version>5.1.3</bootstrap.version>\n    <commons.io.version>1.3.2</commons.io.version>\n    <jacoco.tool.version>0.8.4</jacoco.tool.version>\n    <spring.boot.version>2.6.6</spring.boot.version>\n    <font.awesome.version>6.1.0</font.awesome.version>\n    <lombok.plugin.version>5.0.0</lombok.plugin.version>\n    <reckon.plugin.version>0.16.1</reckon.plugin.version>\n    <grgit.plugin.version>5.0.0-rc.7</grgit.plugin.version>\n    <hibernate.java8.version>5.6.7.Final</hibernate.java8.version>\n    <bootstrap.file.input.version>5.2.5</bootstrap.file.input.version>\n    <versions.gradle.plugin.version>0.42.0</versions.gradle.plugin.version>\n    <docker.compose.gradle.plugin.version>0.12.1</docker.compose.gradle.plugin.version>\n    <io.spring.dependency-management.gradle.plugin.version>1.0.11.RELEASE</io.spring.dependency-management.gradle.plugin.version>\n  </properties>\n\n  <build>\n    <defaultGoal>exec:exec</defaultGoal>\n    <!--<defaultGoal>exec:exec de.jutzig:github-release-plugin:${github-release-plugin.version}:release</defaultGoal>-->\n    <!--\n      ./mvnw versions:display-dependency-updates versions:display-property-updates versions:display-plugin-updates\n    -->\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-clean-plugin</artifactId>\n        <version>${maven-clean-plugin.version}</version>\n        <configuration>\n          <filesets>\n            <fileset>\n              <!--suppress UnresolvedMavenProperty -->\n              <directory>${maven.multiModuleProjectDirectory}</directory>\n              <useDefaultExcludes>true</useDefaultExcludes>\n              <followSymlinks>false</followSymlinks>\n              <includes>\n                <include>modules/apps/file-server/file-storage/**</include>\n                <include>**/src/main/gen/**</include>\n                <include>**/target/**</include>\n                <include>**/build/**</include>\n                <include>**/out/**</include>\n              </includes>\n            </fileset>\n          </filesets>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>versions-maven-plugin</artifactId>\n        <version>${versions-maven-plugin.version}</version>\n        <configuration>\n          <allowSnapshots>true</allowSnapshots>\n          <excludeReactor>false</excludeReactor>\n          <generateBackupPoms>false</generateBackupPoms>\n          <allowIncrementalUpdates>true</allowIncrementalUpdates>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>exec-maven-plugin</artifactId>\n        <version>${exec-maven-plugin.version}</version>\n        <executions>\n          <execution>\n            <id>compile-gradle</id>\n            <phase>initialize</phase>\n            <goals>\n              <goal>exec</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <executable>${gradle.executable}</executable>\n          <arguments>\n            <argument>clean</argument>\n            <argument>build</argument>\n          </arguments>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>de.jutzig</groupId>\n        <artifactId>github-release-plugin</artifactId>\n        <version>${github-release-plugin.version}</version>\n        <executions>\n          <execution>\n            <id>release</id>\n            <phase>deploy</phase>\n          </execution>\n        </executions>\n        <configuration>\n          <overwriteArtifact>true</overwriteArtifact>\n          <description>${project.artifactId} release</description>\n          <releaseName>v${project.version}</releaseName>\n          <tag>${project.version}</tag>\n          <fileSets>\n            <fileSet>\n              <directory>${project.basedir}</directory>\n              <includes>\n                <include>*.md</include>\n              </includes>\n            </fileSet>\n            <fileSet>\n              <directory>${project.basedir}/scripts</directory>\n              <includes>\n                <include>application*.bash</include>\n                <include>application*.cmd</include>\n              </includes>\n            </fileSet>\n            <fileSet>\n              <directory>${project.basedir}/modules/docker/postgres</directory>\n              <includes>\n                <include>docker-compose.yml</include>\n              </includes>\n            </fileSet>\n            <fileSet>\n              <directory>${project.basedir}/modules/apps/file-items-service/build/libs</directory>\n              <includes>\n                <include>*.jar</include>\n              </includes>\n            </fileSet>\n            <fileSet>\n              <directory>${project.basedir}/modules/apps/file-server/build/libs</directory>\n              <includes>\n                <include>*.jar</include>\n              </includes>\n            </fileSet>\n          </fileSets>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>Windows</id>\n      <activation>\n        <os>\n          <family>Windows</family>\n        </os>\n      </activation>\n      <properties>\n        <gradle.executable>gradlew.bat</gradle.executable>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>unix</id>\n      <activation>\n        <os>\n          <family>unix</family>\n        </os>\n      </activation>\n      <properties>\n        <gradle.executable>./gradlew</gradle.executable>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>docs</id>\n      <build>\n        <defaultGoal>clean process-resources</defaultGoal>\n        <plugins>\n          <plugin>\n            <groupId>org.asciidoctor</groupId>\n            <artifactId>asciidoctor-maven-plugin</artifactId>\n            <version>${asciidoctor-maven-plugin.version}</version>\n            <dependencies>\n              <dependency>\n                <groupId>org.asciidoctor</groupId>\n                <artifactId>asciidoctorj-pdf</artifactId>\n                <version>${asciidoctorj.pdf.version}</version>\n              </dependency>\n            </dependencies>\n            <executions>\n              <execution>\n                <id>output-pdf-doc</id>\n                <phase>generate-resources</phase>\n                <goals>\n                  <goal>process-asciidoc</goal>\n                </goals>\n                <configuration>\n                  <backend>pdf</backend>\n                  <sourceHighlighter>coderay</sourceHighlighter>\n                  <attributes>\n                    <highlighter>coderay</highlighter>\n                  </attributes>\n                </configuration>\n              </execution>\n              <execution>\n                <id>output-html</id>\n                <phase>generate-resources</phase>\n                <goals>\n                  <goal>process-asciidoc</goal>\n                </goals>\n                <configuration>\n                  <backend>html</backend>\n                  <sourceHighlighter>highlightjs</sourceHighlighter>\n                  <attributes>\n                    <highlighter>highlightjs</highlighter>\n                  </attributes>\n                </configuration>\n              </execution>\n              <execution>\n                <id>output-docbook</id>\n                <phase>generate-resources</phase>\n                <goals>\n                  <goal>process-asciidoc</goal>\n                </goals>\n                <configuration>\n                  <backend>docbook</backend>\n                </configuration>\n              </execution>\n            </executions>\n            <configuration>\n              <outputDirectory>target/generated-docs</outputDirectory>\n              <sourceDirectory>docs</sourceDirectory>\n              <relativeBaseDir>true</relativeBaseDir>\n              <headerFooter>true</headerFooter>\n              <imagesDir>images</imagesDir>\n              <sourceHighlighter>highlightjs</sourceHighlighter>\n              <attributes>\n                <highlighter>highlightjs</highlighter>\n                <toc>left</toc>\n                <linkcss>false</linkcss>\n                <doctype>book</doctype>\n                <ruby>erubis</ruby>\n                <encoding>${project.build.sourceEncoding}</encoding>\n                <linkattrs>true</linkattrs>\n                <numbered>true</numbered>\n                <sectanchors>true</sectanchors>\n                <sectlink>true</sectlink>\n                <idprefix/>\n                <docinfo1/>\n                <icons>font</icons>\n                <idseparator>-</idseparator>\n                <setanchors>true</setanchors>\n                <toc-title>Table of Contents</toc-title>\n                <project-name>${project.artifactId}</project-name>\n                <gradle-project-name>${project.artifactId}</gradle-project-name>\n                <root-project-name>${project.artifactId}</root-project-name>\n                <project-version>${project.version}</project-version>\n                <revnumber>${project.version}</revnumber>\n                <github-url>https://github.com/daggerok/${project.artifactId}</github-url>\n              </attributes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>versions</id>\n      <build>\n        <defaultGoal>clean resources:resources</defaultGoal>\n        <resources>\n          <resource>\n            <directory>./src/main/templates</directory>\n            <filtering>true</filtering>\n          </resource>\n        </resources>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-resources-plugin</artifactId>\n            <version>${maven-resources-plugin.version}</version>\n            <configuration>\n              <delimiters>\n                <delimiter>${*}</delimiter>\n              </delimiters>\n              <outputDirectory>./</outputDirectory>\n              <overwrite>true</overwrite>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>updates</id>\n      <build>\n        <!-- ./mvnw versions:display-property-updates -P updates -->\n        <defaultGoal>versions:display-property-updates</defaultGoal>\n        <plugins>\n          <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>versions-maven-plugin</artifactId>\n            <version>${versions-maven-plugin.version}</version>\n            <configuration>\n              <!--suppress UnresolvedMavenProperty -->\n              <rulesUri>file:///${maven.multiModuleProjectDirectory}/.mvn/versions-maven-plugin-rules.xml</rulesUri>\n            </configuration>\n            <executions>\n              <execution>\n                <phase>initialize</phase>\n                <goals>\n                  <goal>display-dependency-updates</goal>\n                  <goal>display-property-updates</goal>\n                  <goal>display-plugin-updates</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n  </profiles>\n\n  <reporting>\n    <plugins>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>versions-maven-plugin</artifactId>\n        <version>${versions-maven-plugin.version}</version>\n        <reportSets>\n          <reportSet>\n            <reports>\n              <report>dependency-updates-report</report>\n              <report>plugin-updates-report</report>\n              <report>property-updates-report</report>\n            </reports>\n          </reportSet>\n        </reportSets>\n      </plugin>\n    </plugins>\n  </reporting>\n\n  <!--\n\n    subsctitute gradle project versions: ./mvnw -P versions\n    github release: ./mvnw exec:exec de.jutzig:github-release-plugin:1.1.1:release\n\n    do not forget:\n\n      - keep version in sync between pom.xml and build.gradle files\n      - update ~/.m2/settings.xml:\n\n        <servers>\n            <server>\n                <id>github</id>\n                <username>GITHUB_USERNAME</username>\n                <password>GITHUB_PASSWORD</password>\n            </server>\n        </servers>\n\n    important:\n\n      <scm>\n        <connection>scm:git:https://github.com/username/repo</connection>\n      </scm>\n\n      value must be `scm:git:https://github.com...` but not `scm:git:git://github.com...`\n\n    tips:\n\n      creates the release in draft state: ./mvnw -Dgithub.draft=true\n      allows to specify a commitsh: ./mvnw -Dgithub.commitish=release/1.0.0\n      override credentials with system properties: ./mvnw -Dusername=ololo -Dpassword=trololo\n\n  -->\n\n</project>\n"
        },
        "database": "PostgreSQL",
        "build_system": "Maven",
        "config_files": {
            ".env": "COMPOSE_PROJECT_NAME=docker\n",
            "modules/docker/all/docker-compose.yml": "version: '2.2'\nservices:\n  postgres:\n    extends:\n      file: ../postgres/docker-compose.yml\n      service: postgres\n    networks:\n      private.network.org:\n        aliases:\n        - postgres.private.network.org\n  base-streaming-file-server:\n    build: ./base-streaming-file-server\n    networks: [private.network.org]\n  file-items-service:\n    build:\n      context: ../../..\n      dockerfile: ./modules/docker/all/file-items-service/Dockerfile\n    depends_on:\n      postgres:\n        condition: service_healthy\n      base-streaming-file-server:\n        condition: service_started\n    environment:\n      DB_HOST: postgres.private.network.org\n    networks:\n      private.network.org:\n        aliases:\n        - file-items-service.private.network.org\n  file-server:\n    build:\n      context: ../../..\n      dockerfile: ./modules/docker/all/file-server/Dockerfile\n    depends_on:\n      postgres:\n        condition: service_healthy\n      base-streaming-file-server:\n        condition: service_started\n      file-items-service:\n        condition: service_healthy\n    environment:\n      APP_UPLOAD_PATH: /tmp\n      FILE_ITEMS_REST_SERVICE_HOST: file-items-service.private.network.org\n      FILE_ITEMS_REST_SERVICE_PORT: 8001\n    volumes:\n    - ./build:/var/file-storage:rw\n    networks:\n      private.network.org:\n        aliases:\n        - file-server.private.network.org\n  haproxy:\n    build: ./haproxy\n    depends_on:\n      postgres:\n        condition: service_healthy\n      base-streaming-file-server:\n        condition: service_started\n      file-items-service:\n        condition: service_healthy\n      file-server:\n        condition: service_healthy\n    ports: ['80:80']\n    networks:\n      private.network.org:\n        aliases:\n        - proxy\n        - haproxy\n        - reverse-proxy\n        - proxy.private.network.org\n        - haproxy.private.network.org\n        - reverse-proxy.private.network.org\n      public.network.org:\n        aliases: []\nnetworks:\n  private.network.org:\n    driver: bridge\n  public.network.org:\n    driver: bridge\n",
            "modules/docker/all/nginx/Dockerfile": "FROM nginx:1.17.6-alpine\n#FROM nginx:1.17.0-alpine\n#FROM nginx:1.15.12-alpine\nLABEL MAINTAINER='Maksim Kostromin https://github.com/daggerok'\nHEALTHCHECK --retries=33 \\\n            --timeout=3s \\\n            --interval=3s \\\n            --start-period=3s \\\n            CMD true\nADD ./default.conf /etc/nginx/conf.d/default.conf\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile"
        ],
        "folders": []
    }
}