{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"back-end\",\n  \"version\": \"1.0.1\",\n  \"private\": true,\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"nodemon --inspect ./dist\",\n    \"debug\": \"cross-env DEBUG=* nodemon --inspect ./dist\",\n    \"start-node\": \"node ./bin/www\",\n    \"test\": \"jest --watch\",\n    \"build\": \"tsc -p .\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.21.0\",\n    \"body-parser\": \"^1.20.1\",\n    \"cookie-parser\": \"~1.4.4\",\n    \"cross-env\": \"^7.0.2\",\n    \"csv-parse\": \"^4.11.1\",\n    \"debug\": \"~2.6.9\",\n    \"dotenv\": \"^8.2.0\",\n    \"express\": \"^4.18.2\",\n    \"express-session\": \"^1.17.1\",\n    \"http-errors\": \"~1.6.3\",\n    \"joi\": \"^17.3.0\",\n    \"json5\": \"^2.2.0\",\n    \"keycloak-connect\": \"^22.0.1\",\n    \"moment\": \"^2.28.0\",\n    \"morgan\": \"~1.9.1\",\n    \"nodemon\": \"^3.0.1\",\n    \"r-script\": \"0.0.4\",\n    \"ts-jest\": \"^29.1.1\",\n    \"underscore\": \"^1.11.0\",\n    \"yarn\": \"^1.22.19\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.13.14\",\n    \"@babel/preset-typescript\": \"^7.10.4\",\n    \"@types/body-parser\": \"^1.19.0\",\n    \"@types/cors\": \"^2.8.8\",\n    \"@types/express\": \"^4.17.17\",\n    \"@types/express-serve-static-core\": \"^4.17.35\",\n    \"@types/express-session\": \"^1.17.3\",\n    \"@types/jest\": \"^29.5.3\",\n    \"@types/jest-when\": \"^2.7.2\",\n    \"@types/joi\": \"^14.3.4\",\n    \"@types/node\": \"^14.14.37\",\n    \"@types/socket.io\": \"^2.1.11\",\n    \"@types/underscore\": \"^1.10.24\",\n    \"cors\": \"^2.8.5\",\n    \"date-fns\": \"^2.20.1\",\n    \"jest-when\": \"^3.2.0\",\n    \"jsonwebtoken\": \"^9.0.1\",\n    \"ts-node\": \"^9.1.1\",\n    \"typescript\": \"^5.1.6\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: \"3.3\"\nservices:\n  api_111:\n    container_name: api_111\n    build: ../coda19-stats-api\n    environment:\n      - CODA19_STATS_API_FAKE_AIDBOX=true\n      - CODA19_STATS_API_PORT=8082\n    ports:\n      - 8082:8082 # For debugging at least one of them\n  spoke_111:\n    container_name: spoke_111\n    build: ../coda19-site-api\n    environment:\n      - CODA19_SITE_API_HUB_API_URL=http://hub:8080/\n      - CODA19_SITE_API_HOSPITAL_CODE=111\n      - CODA19_SITE_API_SERVER_PORT=5418\n      - CODA19_SITE_API_STATS_API_ENDPOINT=http://api_111:8082\n      - CODA19_SITE_API_KEYCLOAK_APP_PASSWORD=${LOCAL_SITE_API_KEYCLOAK_APP_PASSWORD}\n    depends_on:\n      - hub\n      - api_111\n  api_112:\n    container_name: api_112\n    build: ../coda19-stats-api\n    environment:\n      - CODA19_STATS_API_FAKE_AIDBOX=true\n      - CODA19_STATS_API_PORT=8083\n    ports:\n      - 8083:8083\n  spoke_112:\n    container_name: spoke_112\n    build: ../coda19-site-api\n    environment:\n      - CODA19_SITE_API_HUB_API_URL=http://hub:8080/\n      - CODA19_SITE_API_HOSPITAL_CODE=112\n      - CODA19_SITE_API_SERVER_PORT=5419\n      - CODA19_SITE_API_STATS_API_ENDPOINT=http://api_112:8083\n      - CODA19_SITE_API_KEYCLOAK_APP_PASSWORD=${LOCAL_SITE_API_KEYCLOAK_APP_PASSWORD}\n    depends_on:\n      - hub\n  hub:\n    container_name: hub\n    build: ../coda19-hub-api\n    environment:\n      - CODA19_HUB_API_SERVER_PORT=8080\n      - CODA19_HUB_API_KEYCLOAK_CLIENT_SECRET=${LOCAL_HUB_API_KEYCLOAK_CLIENT_SECRET}\n      - CODA19_HUB_API_KEYCLOAK_SESSION_MEMORY_SECRET=${LOCAL_HUB_API_KEYCLOAK_SESSION_MEMORY_SECRET}\n    ports:\n      - 8081:8080\n  # dash-backend:\n  #   container_name: dash-backend\n  #   build: ./back-end\n  #   ports:\n  #     - 3000:3000\n  #   environment:\n  #     - CODA19_DASHBOARD_BACKEND_HUB_ENDPOINT=http://hub:8080\n  #     - CODA19_DASHBOARD_BACKEND_KEYCLOAK_CLIENT_SECRET=${LOCAL_DASHBOARD_BACKEND_KEYCLOAK_CLIENT_SECRET}\n  #     - CODA19_DASHBOARD_BACKEND_KEYCLOAK_SESSION_MEMORY_SECRET=${LOCAL_DASHBOARD_BACKEND_KEYCLOAK_SESSION_MEMORY_SECRET}\n  #   depends_on:\n  #     - hub\n  # dash-frontend:\n  #   container_name: dash-frontend\n  #   build:\n  #     context: ./front-end\n  #     args:\n  #       - BUILD_ENV=local\n  #   ports:\n  #     - 8000:8080\n  #   depends_on:\n  #     - dash-backend\n  #   command: http-server --port 8080 -S -C cert.pem dist # Do not modify docker file for this. Docker command is for production envrionnement.\n",
            "back-end/Dockerfile": "FROM node:16\n\n### This docker file assumes that the npm build has already been run on the local host machine.\n### When run with the ./publish.sh script, this docker file has everything to built the image as lightly as possible.\n\nENV PM2_HOME=\"/home/node/app/.pm2\"\n\nWORKDIR /usr/src/app\nCOPY ./ ./\n\n# Make build footprint version for easier debugging.\nRUN rm ./version.txt\nRUN openssl rand -hex 12 > version.txt\n\n# Install local packages for running server.\nRUN npm install dotenv\nRUN npm install pm2 -g\n\n# Make app run on lower priviledge user for openshift.\nRUN chmod -R 775 /usr/src/app/dist\nRUN chown -R 1000:root /usr/src/app/dist\n\nUSER 1000\n\nEXPOSE 3000\nCMD [\"pm2-runtime\",\"dist/src/server.js\"]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            ".npmrc",
            ".yarnrc",
            "Dockerfile",
            "README.md",
            "cert.pem",
            "coda-sa.yaml",
            "coda19-hub-dashboard.dev.yaml",
            "coda19-hub-dashboard.yaml",
            "key.pem",
            "local.env",
            "openshift-commands.txt",
            "package-lock.json",
            "package.json",
            "prod.env",
            "publish.dev.sh",
            "publish.sh",
            "version.txt",
            "vue.config.js"
        ],
        "folders": [
            "public",
            "src"
        ]
    }
}