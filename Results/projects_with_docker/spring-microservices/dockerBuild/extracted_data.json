{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <parent>\n        <groupId>ro.rasel.spring.microservices</groupId>\n        <artifactId>spring-microservices</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n    </parent>\n\n    <modelVersion>4.0.0</modelVersion>\n    <artifactId>dockerBuild</artifactId>\n    <description>Module used to build the entire project inside a docker file instead of directly on the machine</description>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.codehaus.groovy</groupId>\n            <artifactId>groovy-all</artifactId>\n            <version>2.4.21</version>\n        </dependency>\n    </dependencies>\n\n    <properties>\n        <executionScript>mvn clean install</executionScript>\n    </properties>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.codehaus.gmaven</groupId>\n                <artifactId>gmaven-plugin</artifactId>\n                <version>1.5</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.codehaus.gmaven.runtime</groupId>\n                        <artifactId>gmaven-runtime-1.8</artifactId>\n                        <version>1.5</version>\n                    </dependency>\n                </dependencies>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>compile</goal>\n                            <goal>testCompile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <!--Run this by using command-->\n            <!--mvn gplus:execute -f dockerBuild/pom.xml -DexecutionScript=\"mvn clean install\"-->\n            <plugin>\n                <groupId>org.codehaus.gmavenplus</groupId>\n                <artifactId>gmavenplus-plugin</artifactId>\n                <inherited>false</inherited>\n                <executions>\n                    <execution>\n                        <id>generate</id>\n                        <goals>\n                            <goal>execute</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <properties>\n                        <executionScript>${executionScript}</executionScript>\n                    </properties>\n                    <scripts>\n                        <script>file:///${project.basedir}/src/main/groovy/dockerBuild.groovy</script>\n                    </scripts>\n                </configuration>\n            </plugin>\n        </plugins>\n\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.codehaus.gmavenplus</groupId>\n                    <artifactId>gmavenplus-plugin</artifactId>\n                    <version>1.13.0</version>\n                    <configuration>\n                        <properties>\n                            <workingDir>${project.basedir}</workingDir>\n                        </properties>\n                    </configuration>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.codehaus.groovy</groupId>\n                            <artifactId>groovy-all</artifactId>\n                            <version>3.0.9</version>\n                            <type>pom</type>\n                            <scope>runtime</scope>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n</project>"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: \"3.4\"\n\nx-common-variables: &common-variables\n  security.enabled: \"true\"\n  server.ssl.enabled: \"true\"\n  client.ssl.enabled: \"true\"\n\nservices:\n  sso-auth-service:\n    build: services/sso-auth-service/target/docker/radulecu/sso-auth-service/build\n    ports:\n      - 9999:9999\n    environment:\n      <<: *common-variables\n      server.hostname: sso-auth-service\n  eureka-service:\n    build: services/eureka-service/target/docker/radulecu/eureka-service/build\n    ports:\n      - 8761:8761\n    environment:\n      <<: *common-variables\n      server.hostname: eureka-service\n      eureka.instance.hostname: \"eureka-service\"\n  zipkin-dashboard-service:\n    build: services/zipkin-dashboard-service/target/docker/radulecu/zipkin-dashboard-service/build\n    ports:\n      - 9411:9411\n    environment:\n      <<: *common-variables\n      server.hostname: zipkin-dashboard-service\n  #  gateway-service:\n  #    build: services/gateway-service/target/docker/radulecu/gateway-service/build\n  #    ports:\n  #      - 9024:9024\n  #    environment:\n  #      <<: *common-variables\n  #      server.hostname: gateway-service\n  #      registry.server.hostname: \"eureka-service\"\n  #      spring.zipkin.base-url: http://zipkin-dashboard-service:9411/\n  #      security.oauth2.client.accessTokenUri: https://sso-auth-service:9999/oauth/token\n  #      server.ssl.client-auth: none\n  resource-gateway-service:\n    build: services/resource-gateway-service/target/docker/radulecu/resource-gateway-service/build\n    ports:\n      - 9025:9025\n    environment:\n      <<: *common-variables\n      server.hostname: resource-gateway-service\n      security.server.hostname: \"localhost\"\n      registry.server.hostname: \"eureka-service\"\n      spring.zipkin.base-url: http://zipkin-dashboard-service:9411/\n      security.server.url: https://sso-auth-service:9999/sso\n      server.ssl.client-auth: none\n  bookmark-service:\n    build: applications/bookmark-service/target/docker/radulecu/bookmark-service/build\n    ports:\n      - 8082:8082\n    environment:\n      <<: *common-variables\n      server.hostname: bookmark-service\n      registry.server.hostname: \"eureka-service\"\n      spring.zipkin.base-url: http://zipkin-dashboard-service:9411/\n      server.ssl.client-auth: none\n  contact-service:\n    build: applications/contact-service/target/docker/radulecu/contact-service/build\n    ports:\n      - 8083:8083\n    environment:\n      <<: *common-variables\n      server.hostname: contact-service\n      security.server.hostname: \"localhost\"\n      registry.server.hostname: \"eureka-service\"\n      spring.zipkin.base-url: http://zipkin-dashboard-service:9411/\n      server.ssl.client-auth: none\n  passport-service:\n    build: applications/passport-service/target/docker/radulecu/passport-service/build\n    ports:\n      - 8084:8084\n    environment:\n      <<: *common-variables\n      server.hostname: passport-service\n      security.server.hostname: \"localhost\"\n      registry.server.hostname: \"eureka-service\"\n      spring.zipkin.base-url: http://zipkin-dashboard-service:9411/\n      server.ssl.client-auth: none\n  echo-service:\n    build: applications/echo-service/target/docker/radulecu/echo-service/build\n    ports:\n      - 8090:8090\n    environment:\n      <<: *common-variables\n      server.hostname: echo-service\n      security.server.hostname: \"localhost\"\n      registry.server.hostname: \"eureka-service\"\n      spring.zipkin.base-url: http://zipkin-dashboard-service:9411/\n      server.ssl.client-auth: none\n  nginx-service:\n    image: nginx\n    ports:\n      - \"8080:80\"\n    volumes:\n      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf\n",
            "dockerBuild/Dockerfile": "FROM maven:3.6-jdk-8-slim\nWORKDIR /buildDir\nADD . /buildDir\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}