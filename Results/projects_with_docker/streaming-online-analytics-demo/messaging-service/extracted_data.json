{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.radanalyticsio.datapipeline</groupId>\n    <artifactId>order-processing-service</artifactId>\n    <packaging>jar</packaging>\n    <version>1.0-SNAPSHOT</version>\n    <name>Streaming Online Analytics :: Order Processing Service</name>\n    <properties>\n        <camel.version>2.24.2</camel.version>\n    </properties>\n    <dependencies>\n        <!-- camel -->\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-core</artifactId>\n            <version>${camel.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-spark-rest</artifactId>\n            <version>${camel.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-swagger-java</artifactId>\n            <version>${camel.version}</version>\n        </dependency>\n        <!-- use for json binding -->\n        <dependency>\n            <groupId>org.apache.camel</groupId>\n            <artifactId>camel-jackson</artifactId>\n            <version>${camel.version}</version>\n        </dependency>\n\n        <!-- MongoDB -->\n        <dependency>\n            <groupId>org.mongojack</groupId>\n            <artifactId>mongojack</artifactId>\n            <version>2.6.1</version>\n        </dependency>\n\n        <!-- Kafka utils messaging -->\n        <dependency>\n            <groupId>com.radanalyticsio.datapipeline</groupId>\n            <artifactId>kafka-utils</artifactId>\n            <version>1.0.0-SNAPSHOT</version>\n        </dependency>\n\n        <!-- Jackson JSON processing -->\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.9.10.1</version>\n        </dependency>\n        <!-- Cassandra Support -->\n        <dependency>\n            <groupId>com.datastax.cassandra</groupId>\n            <artifactId>cassandra-driver-core</artifactId>\n            <version>3.0.1</version>\n        </dependency>\n\n    </dependencies>\n    <build>\n        <!-- to run with mvn camel:run -->\n        <plugins>\n            <plugin>\n                <groupId>org.apache.camel</groupId>\n                <artifactId>camel-maven-plugin</artifactId>\n                <version>${camel.version}</version>\n                <configuration>\n                    <mainClass>com.radanalyticsio.camel.App</mainClass>\n                </configuration>\n            </plugin>\n            <plugin>\n                       <groupId>org.apache.maven.plugins</groupId>\n                       <artifactId>maven-assembly-plugin</artifactId>\n                       <version>2.4</version>\n                       <configuration>\n                           <descriptorRefs>\n                               <descriptorRef>jar-with-dependencies</descriptorRef>\n                           </descriptorRefs>\n                           <archive>\n                               <manifest>\n                                   <mainClass>com.radanalyticsio.camel.App</mainClass>\n                               </manifest>\n                           </archive>\n                       </configuration>\n                       <executions>\n                           <execution>\n                               <phase>package</phase>\n                               <goals>\n                                   <goal>single</goal>\n                               </goals>\n                           </execution>\n                       </executions>\n                   </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.2</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        "database": "MongoDB",
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '2'\n\nservices:\n  mongo:\n    image: mongo\n    container_name: mongo\n    volumes:\n      - /data/db:/data/db\n#    ports:\n#      - \"27017:27017\"\n  zookeeper:\n    image: bzcareer/docker-zookeeper\n    container_name: zookeeper-coordination-service\n    ports:\n      - \"2181:2181\"\n      - \"2888:2888\"\n      - \"3888:3888\"\n  kafka:\n    image: bzcareer/docker-kafka\n    container_name: kafka-messaging-service\n    links:\n      - zookeeper:zookeeper\n    environment:\n      - \"KAFKA_SERVICE_SERVICE_HOST=zookeeper\"\n    ports:\n      - \"9092:9092\"\n      - \"9999:9999\"\n  sparkMaster:\n    image: radanalyticsio/openshift-spark\n    container_name: sparkMaster\n    ports:\n      - \"8081:8080\"\n      - \"7077:7077\"\n  sparkWorker1:\n    image: radanalyticsio/openshift-spark\n    container_name: sparkWorker1\n    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://sparkMaster:7077\n    ports:\n      - \"8082:8081\"\n    links:\n      - sparkMaster:sparkMaster\n    environment:\n      - \"SPARK_MASTER_ADDRESS=spark://sparkMaster:7077\"\n      - \"SPARK_USER=bob\"\n  messaging-service:\n    build:\n      context: messaging-service\n      dockerfile: Dockerfile\n    ports:\n      - \"8080:8080\"\n    links:\n      - mongo:mongo\n      - kafka:kafkaETL\n    environment:\n      - \"KAFKA_URI=kafkaETL:9092\"\n      - \"MONGODB_HOST=mongo\"\n      - \"MONGODB_PORT=27017\"\n#  spark-streaming-service:\n#    build:\n#      context: spark-streaming-service\n#      dockerfile: Dockerfile\n#    ports:\n#      - \"4040:4040\"\n#    links:\n#      - kafka:kafkabroker\n#      - sparkMaster:sparkMasterURL\n#      - zookeeper:zookeeperservice\n#    environment:\n#      - \"KAFKA_URI=kafkabroker:9092\"\n#      - \"ZOOKEEPER_URI=zookeeperservice:2181\"\n#      - \"SPARK_MASTER_URL=spark://sparkMasterURL:7077\"\n#      - \"SPARK_USER=bob\"\n  order-web-ui:\n    container_name: order-web-ui\n    build:\n      context: web\n      dockerfile: Dockerfile\n    ports:\n      - \"8181:8181\"\n    links:\n      - messaging-service:messaging-service\n      - mongo:mongodb\n    environment:\n      - \"MONGO_URL=mongodb://mongodb:27017/sampledb\"\n      - \"OPENSHIFT_DATAPIPELINE_CAMEL_URL=http://messaging-service:8080\"\n",
            "messaging-service/Dockerfile": "FROM docker.io/java:8-jdk-alpine\n\nMAINTAINER Zak Hassan zak.hassan1010@gmail.com\n\n##RUN yum install java-1.8.0-openjdk-devel.x86_64\n#ENVIRONMENT VARIABLES: MONGODB_URI, KAFKA_URI\n\nRUN mkdir -p /app\nWORKDIR /app\nADD ./target/order-processing-service-1.0-SNAPSHOT-jar-with-dependencies.jar /app\nRUN chown -Rv 1001:0 /app\nENV JAVA_HOME   /usr/lib/jvm/java-1.8.0\nUSER 1001\n\nEXPOSE 8181\nENTRYPOINT [\"java\",\"-jar\", \"order-processing-service-1.0-SNAPSHOT-jar-with-dependencies.jar\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "Testing123.ipynb",
            "build-docker.sh",
            "entrypoint.sh",
            "make-push.sh",
            "pyorder-processing.py",
            "runContainer.sh",
            "runSparkJob.sh"
        ],
        "folders": []
    }
}