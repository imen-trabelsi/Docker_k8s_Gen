{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"sorry-cypress\",\n  \"version\": \"2.6.0\",\n  \"author\": {\n    \"name\": \"Andrew Goldis\",\n    \"email\": \"agoldis@gmail.com\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/agoldis/sorry-cypress.git\"\n  },\n  \"private\": true,\n  \"license\": \"MIT\",\n  \"workspaces\": [\n    \"packages/*\"\n  ],\n  \"resolutions\": {\n    \"@types/express\": \"4.17.12\",\n    \"undici\": \"5.5.1\",\n    \"ansi-regex\": \"5.0.1\",\n    \"xml2js\": \"0.5.0\",\n    \"json5\": \"2.2.3\",\n    \"node-forge\": \"1.3.0\",\n    \"@types/serve-static\": \"1.13.10\",\n    \"pac-resolver\": \"^7.0.0\",\n    \"loader-utils\": \"^2.0.4\"\n  },\n  \"scripts\": {\n    \"killall\": \"ps -ef | egrep \\\"webpack|node|nodemon\\\" | grep sorry | awk '{ print $2 }' | xargs kill\",\n    \"release\": \"./scripts/release-github.sh\",\n    \"release-packages\": \"wsrun run release --cache-dir=.turbo\",\n    \"build\": \"turbo run build --cache-dir=.turbo\",\n    \"generate\": \"yarn --cwd packages/api generate && yarn --cwd packages/dashboard generate\",\n    \"test\": \"turbo run test\",\n    \"lint\": \"turbo run lint\",\n    \"dev\": \"APOLLO_PLAYGROUND=true turbo run dev\",\n    \"prepare\": \"husky install\"\n  },\n  \"devDependencies\": {\n    \"@types/node\": \"^18.11.19\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.23.0\",\n    \"@typescript-eslint/parser\": \"^5.23.0\",\n    \"eslint\": \"^8.7.0\",\n    \"eslint-config-prettier\": \"^6.12.0\",\n    \"eslint-plugin-jest\": \"^26.1.5\",\n    \"eslint-plugin-react\": \"^7.21.2\",\n    \"husky\": \"^8.0.3\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"prettier\": \"^2.1.2\",\n    \"prettier-plugin-organize-imports\": \"^1.1.1\",\n    \"pretty-quick\": \"^3.0.2\",\n    \"rimraf\": \"^3.0.2\",\n    \"semver\": \"^7.5.2\",\n    \"tsconfig-paths\": \"^4.1.0\",\n    \"turbo\": \"^1.9.1\",\n    \"typescript\": \"^4.0.3\",\n    \"wsrun\": \"^5.2.4\"\n  },\n  \"packageManager\": \"yarn@1.22.19\"\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            ".devcontainer/.env": "# Use in-memory driver that keeps everything in memory\nEXECUTION_DRIVER=../execution/in-memory\n# Use the mongodb driver to save runs in the db\n#EXECUTION_DRIVER=../execution/mongo/driver\n\n# Define the uri for the mongodb to use\nMONGODB_URI=mongodb://localhost:27017\n\n# Use the dummy driver to not record anything\nSCREENSHOTS_DRIVER=../screenshots/dummy.driver\n# Use minio to store the videos/screenshots\n#SCREENSHOTS_DRIVER=../screenshots/minio.driver\n\n# Root user for minio\nMINIO_ACCESS_KEY=MW32h3gd6HvjBEgTRx\nMINIO_SECRET_KEY=t6NgQWUcEyG2AzaDCVkN6sbWcvDCVkN6sGiZ7\n\n# Minio configuration\nMINIO_URL=http://localhost\nMINIO_ENDPOINT=storage\nMINIO_BUCKET=sorry-cypress\n",
            ".devcontainer/docker-compose.yml": "version: '3.6'\n\nservices:\n  mongo:\n    image: mongo:4.4\n    restart: unless-stopped\n    volumes:\n      - mongo_data:/data/db\n  \n  minio:\n    image: minio/minio\n    hostname: 'storage'\n    environment:\n      MINIO_ROOT_USER: $MINIO_ACCESS_KEY\n      MINIO_ROOT_PASSWORD: $MINIO_SECRET_KEY\n    env_file:\n      - .env\n    volumes:\n      - minio_data:/data\n    command: server --console-address \":9090\" /data\n    ports:\n      - 9000:9000\n      - 9090:9090\n\n  createbuckets:\n    image: minio/mc\n    env_file:\n      - .env\n    depends_on:\n      - minio\n    entrypoint: >\n      /bin/sh -c \"\n      sleep 3;\n      /usr/bin/mc config host add myminio http://storage:9000 $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY;\n      /usr/bin/mc rm -r --dangerous --force myminio/sorry-cypress;\n      /usr/bin/mc mb myminio/sorry-cypress;\n      /usr/bin/mc anonymous set download myminio/sorry-cypress;\n      /usr/bin/mc anonymous set public myminio/sorry-cypress;\n      exit 0;\n      \"\n  \n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile\n      args:\n        # These set the ARG values in your Dockerfile\n        USER_UID: 1000\n        USER_GID: 1000\n\n    volumes:\n      - ..:/workspace:cached\n    env_file:\n      - .env\n    # Overrides default command so things don't shut down after the process ends.\n    command: sleep infinity\n    # Runs app on the same network as the database container, allows \"forwardPorts\" in devcontainer.json function.\n    network_mode: service:mongo\n    depends_on:\n      - mongo\n      - minio\n      - createbuckets\n\nvolumes:\n  mongo_data:\n  minio_data:\n",
            ".devcontainer/Dockerfile": "ARG VARIANT=\"bullseye\"\nFROM mcr.microsoft.com/devcontainers/base:${VARIANT}\n\n# Install Node\nRUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \\\n  apt-get update && \\\n  apt-get install -y nodejs && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN npm install -g corepack\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".babelrc",
            ".dockerignore",
            ".eslintignore",
            ".gitignore",
            "Dockerfile",
            "codegen.yml",
            "globalConfig.json",
            "jest-mongodb-config.js",
            "jest.config.js",
            "nodemon.json",
            "package.json",
            "tsconfig.json"
        ],
        "folders": [
            "src"
        ]
    }
}