{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n\t\"name\": \"cimonitor\",\n\t\"version\": \"4.15.0\",\n\t\"description\": \"Monitors all your projects CI automatically\",\n\t\"repository\": \"git@github.com:FuturePortal/CIMonitor.git\",\n\t\"license\": \"MIT\",\n\t\"author\": {\n\t\t\"name\": \"Rick van der Staaij\",\n\t\t\"url\": \"https://rick.nu\"\n\t},\n\t\"contributors\": [\n\t\t{\n\t\t\t\"name\": \"GitHub contributors\",\n\t\t\t\"url\": \"https://github.com/FuturePortal/CIMonitor/graphs/contributors\"\n\t\t}\n\t],\n\t\"scripts\": {\n\t\t\"start\": \"node app/backend/server.js\",\n\t\t\"start-client\": \"node app/backend/module-client.js\",\n\t\t\"build\": \"tsc --project ./backend/tsconfig.json && parcel build --dist-dir dashboard --no-source-maps frontend/index.html\",\n\t\t\"server\": \"nodemon --watch backend --exec ts-node backend/server.ts\",\n\t\t\"module-client\": \"nodemon --watch backend --exec ts-node backend/module-client.ts\",\n\t\t\"dashboard\": \"parcel watch --dist-dir dashboard --hmr-port 3031 frontend/index.html\",\n\t\t\"cypress-run\": \"cypress run\",\n\t\t\"cypress-open\": \"cypress open\",\n\t\t\"postinstall\": \"husky install\"\n\t},\n\t\"dependencies\": {\n\t\t\"axios\": \"^1.5.1\",\n\t\t\"body-parser\": \"^1.20.2\",\n\t\t\"dotenv\": \"^16.3.1\",\n\t\t\"express\": \"^4.18.2\",\n\t\t\"firebase-admin\": \"^10\",\n\t\t\"socket.io\": \"^4.7.2\",\n\t\t\"socket.io-client\": \"^4.7.2\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@futureportal/parcel-transformer-package-version\": \"^1.0.0\",\n\t\t\"@parcel/packager-raw-url\": \"2.10.1\",\n\t\t\"@parcel/transformer-svg-react\": \"^2.10.1\",\n\t\t\"@parcel/transformer-typescript-tsc\": \"^2.10.1\",\n\t\t\"@parcel/transformer-webmanifest\": \"2.10.1\",\n\t\t\"@types/express\": \"^4.17.20\",\n\t\t\"@types/node\": \"^20.8.8\",\n\t\t\"@types/react\": \"^18.2.31\",\n\t\t\"@types/react-dom\": \"^18.2.14\",\n\t\t\"@types/react-redux\": \"^7.1.28\",\n\t\t\"@types/showdown\": \"^2.0.3\",\n\t\t\"@types/socket.io\": \"^3.0.2\",\n\t\t\"@types/socket.io-client\": \"^3.0.0\",\n\t\t\"@types/styled-components\": \"^5.1.29\",\n\t\t\"@typescript-eslint/eslint-plugin\": \"^6.9.0\",\n\t\t\"@typescript-eslint/parser\": \"^6.9.0\",\n\t\t\"buffer\": \"^6.0.3\",\n\t\t\"cypress\": \"^9.5.1\",\n\t\t\"eslint\": \"^8.52.0\",\n\t\t\"eslint-config-prettier\": \"^9.0.0\",\n\t\t\"eslint-plugin-node\": \"^11.1.0\",\n\t\t\"eslint-plugin-prettier\": \"^5.0.1\",\n\t\t\"eslint-plugin-react\": \"^7.33.2\",\n\t\t\"eslint-plugin-simple-import-sort\": \"^10.0.0\",\n\t\t\"husky\": \"^7.0.0\",\n\t\t\"lint-staged\": \"^15.0.2\",\n\t\t\"nodemon\": \"^3.0.1\",\n\t\t\"parcel\": \"^2.10.1\",\n\t\t\"prettier\": \"^3.0.3\",\n\t\t\"process\": \"^0.11.10\",\n\t\t\"react\": \"^18.2.0\",\n\t\t\"react-dom\": \"^18.2.0\",\n\t\t\"react-redux\": \"^8.1.3\",\n\t\t\"showdown\": \"^2.1.0\",\n\t\t\"styled-components\": \"^6.1.0\",\n\t\t\"ts-node\": \"^10.9.1\",\n\t\t\"typescript\": \"^5.2.2\"\n\t}\n}\n"
        },
        "database": "Firebase",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '3.6'\n\nservices:\n\n  server:\n    build:\n      context: docker/server\n      target: server\n    volumes:\n      - .:/CIMonitor\n    user: ${USERID}:${GROUPID}\n    command: sh -c \"npm run server\"\n    ports:\n      - \"3030:3030\"\n\n  module-client:\n    build:\n      context: docker/module-client\n      target: module-client\n    volumes:\n      - .:/CIMonitor\n    user: ${USERID}:${GROUPID}\n    command: sh -c \"npm run module-client\"\n\n  dashboard:\n    build:\n      context: docker/server\n      target: dashboard\n    volumes:\n      - .:/CIMonitor\n    user: ${USERID}:${GROUPID}\n    command: sh -c \"npm run dashboard\"\n    ports:\n      - \"3031:3031\"\n\nnetworks:\n\n  default:\n    name: cimonitor\n",
            "docker/module-client/Dockerfile": "ARG QEMU_BINARY=notset\nARG BASE_IMAGE=node:20-slim\n\n# ==================================\n# Base stage\n# ==================================\n\nFROM ${BASE_IMAGE} as base\n\nWORKDIR /CIMonitor\n\n# ==================================\n# Local development module-client\n# ==================================\n\nFROM base as module-client\n\nENV NODE_PATH=/CIMonitor\n\nCMD [\"npm\", \"run\", \"module-client\"]\n\n# ==================================\n# Production build - QEMU emulator\n# ==================================\n\nFROM base as production-qemu\n\nCOPY ./${QEMU_BINARY}* /usr/bin/\n\nRUN echo \"deb http://deb.debian.org/debian stable main contrib non-free\" >> /etc/apt/sources.list \\\n    && apt-get --yes update \\\n    && apt-get --yes install dumb-init\n\n# ==================================\n# Production\n# ==================================\n\nFROM base as production\n\nENV NODE_ENV=production\nENV NODE_PATH=/CIMonitor/app\n\n# Copy dumb-init from the QEMU stage\nCOPY --from=production-qemu /usr/bin/dumb-init /usr/bin/dumb-init\n\n# Make sure \"yarn build\" is ran before building the production container\nCOPY . /CIMonitor\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n\nCMD [\"npm\", \"run\", \"start-client\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            "Dockerfile"
        ],
        "folders": []
    }
}