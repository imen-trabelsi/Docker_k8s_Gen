{
    "source_code_info": {
        "language": "Python",
        "framework": "Python",
        "dependencies": {
            "setup.py": "# Copyright 2015 Solinea, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nimport setuptools\nfrom setuptools import setup, find_packages\n\nsetuptools.setup(\n    setup_requires=['pbr'],\n    pbr=True,\n    packages=find_packages(),\n)\n"
        },
        "database": null,
        "build_system": "setuptools",
        "config_files": {
            "docker/docker-compose.yml": "# Goldstone Docker Compose Configuration\n# Copyright 2015 Solinea, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nversion: '2'\n\nservices:\n\n  # Goldstone Proxy & Static\n  gsweb:\n    image: solinea/goldstone-web:1.1.3\n    ports:\n      - \"8443:8443\"\n    links:\n      - gsapp:gsapp\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gsweb\"\n\n  # Goldstone Server Container\n  gsapp:\n    image: solinea/goldstone-app:1.1.3\n    env_file: ./config/goldstone-prod.env\n    ports:\n      - \"8000:8000\"\n    links:\n      - gsdb\n      - gssearch\n      - gstaskq\n      - gslog\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gsapp\"\n\n  # Database Container\n  gsdb:\n    image: solinea/goldstone-db:1.1.3\n    env_file: ./config/goldstone-prod.env\n    volumes:\n      - /var/lib/goldstone/sql_data:/var/lib/postgresql/data\n    ports:\n      - \"5432:5432\"\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gsdb\"\n\n  # Logstash Container\n  gslog:\n    image: solinea/goldstone-log:1.1.3\n    ports:\n      - \"5514:5514\"\n      - \"5515:5515\"\n      - \"5516:5516\"\n      - \"5517:5517/udp\"\n    links:\n      - gssearch\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gslog\"\n\n  # Elasticsearch Container\n  gssearch:\n    image: solinea/goldstone-search:1.1.3\n    ports:\n      - \"9200:9200\"\n      - \"9300:9300\"\n    volumes:\n      - /var/lib/goldstone/es_data:/usr/share/elasticsearch/data\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gssearch\"\n\n  # Celery Task Queue Container\n  gstaskq:\n    image: solinea/goldstone-task-queue:1.1.3\n    ports:\n      - \"6379:6379\"\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gstaskq\"\n\n  #\n  # Celery container\n  #\n  gstask:\n    image: solinea/goldstone-task:1.1.3\n    env_file: ./config/goldstone-prod.env\n    links:\n      - gsdb\n      - gssearch\n      - gstaskq\n      - gslog\n    logging:\n      driver: \"syslog\"\n      options:\n        syslog-facility: \"local0\"\n        tag: \"gstask\"\n",
            "docker/goldstone-logtest/Dockerfile": "FROM logstash:2.3.1\n\n# \n# Build arguments not passed to container\n# \n# TEST_SUITE_DIR                    path relative to Dockerfile\n# PATTERN_TARGET_DIR                full path to place grok patterns in docker image\n\nARG TEST_SUITE_DIR=example\nARG EXTRA_PLUGINS=\"logstash-filter-translate logstash-input-http\"\nARG PATTERN_TARGET_DIR=/etc/logstash/patterns\n\n# \n# Environment variables passed into running container\n# \n# TEST_FILTER_SUBSET                path relative to TEST_SUITE_DIR/test/filters or leave empty\n# RUN_CONFIGTEST                    'true' or 'false'\n# TEST_TARGET                       'all', 'patterns', or 'filters'\n# FILTER_FILENAME_REGEX             regular expression to identify filter configuration files\n\nENV TEST_FILTER_SUBSET= \\ \n    RUN_CONFIGTEST=true \\ \n    TEST_TARGET=all \\\n    PATTERN_TARGET_DIR=${PATTERN_TARGET_DIR} \\\n    FILTER_FILE_REGEX=*.filter.conf \\\n    EXTRA_PLUGINS=${EXTRA_PLUGINS}\n\nRUN logstash-plugin install --development\nRUN logstash-plugin install ${EXTRA_PLUGINS}\n\nADD test /test\n# ADD $TEST_SUITE_DIR/config/conf.d /test/spec/filter_config\n# ADD $TEST_SUITE_DIR/config/patterns $PATTERN_TARGET_DIR\nADD $TEST_SUITE_DIR/test/filters /test/spec/filter_data\nADD $TEST_SUITE_DIR/test/patterns /test/spec/pattern_data\n\nENTRYPOINT [\"/test/run-tests.sh\"]\n# ENTRYPOINT [\"bash\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "docker-entrypoint.sh"
        ],
        "folders": [
            "config"
        ]
    }
}