{
    "docker_info": {
        "base_image": "ubuntu:latest",
        "multi_stage_build": false,
        "exposed_ports": [
            "8080"
        ],
        "user": [],
        "labels": [],
        "health_checks": [],
        "build_args": [],
        "envs": [],
        "copy_instructions": [
            "COPY    ./bin                    ~/million-song-library/bin",
            "COPY    ./msl-pages              ~/million-song-library/msl-pages",
            "COPY    ./server                 ~/million-song-library/server",
            "COPY    ./docs                   ~/million-song-library/docs",
            "WORKDIR ~/million-song-library/msl-pages"
        ],
        "execution": [
            {
                "command": "entrypoint",
                "arguments": [
                    "[\"/bin/bash\"]"
                ]
            }
        ],
        "run": [
            [
                "echo -e \"\\n\\033[0;35mCOMPLETED LOADING CONTENTS..................\\033[0m\\n\"",
                ""
            ],
            [
                "echo -e \"\\n\\033[0;35mINSTALLING BASIC OS ........................\\033[0m\\n\"",
                "RUN     apt-get update"
            ],
            [
                "apt-get install -y software-properties-common libpng-dev sudo python default-jdk",
                "RUN     sudo apt-get -y install wget git-core curl"
            ],
            [
                "cd ../bin/provision && sudo chmod +x java-setup.sh && bash java-setup.sh",
                ""
            ],
            [
                "echo -e \"\\n\\033[0;35mRUNNING SETUP SCRIPT........................\\033[0m\\n\"",
                "RUN     cd ../bin/provision && sudo chmod +x validate-requirements.sh"
            ],
            [
                "cd ../bin/provision && sudo chmod +x basic-dep-setup.sh && bash ./basic-dep-setup.sh",
                "RUN     cd ../bin && sudo chmod +x setup.sh && bash setup.sh -n -s -v -y"
            ],
            [
                "echo -e \"\\n\\033[0;35mINSTALLING TOMCAT ........................\\033[0m\\n\"",
                "RUN     sudo apt-get install -y tomcat7"
            ],
            [
                "sudo apt-get install -y tomcat7-docs tomcat7-admin tomcat7-examples",
                "COPY    server/eureka.war       /var/lib/tomcat7/webapps"
            ]
        ]
    }
}