{
    "source_code_info": {
        "language": "Go",
        "framework": "Go",
        "dependencies": {
            "go.mod": "module goTemp\n\ngo 1.16\n\nrequire (\n\tgithub.com/arangodb/go-driver v0.0.0-20200618111046-f3a9751e1cf5\n\tgithub.com/dgrijalva/jwt-go v3.2.0+incompatible\n\tgithub.com/golang/protobuf v1.4.3\n\tgithub.com/google/uuid v1.1.5 // indirect\n\tgithub.com/jackc/pgx/v4 v4.6.0\n\tgithub.com/micro/go-micro/v2 v2.9.1\n\tgithub.com/micro/go-plugins/broker/nats/v2 v2.9.1\n\tgithub.com/micro/go-plugins/store/redis/v2 v2.9.1\n\tgithub.com/onsi/ginkgo v1.14.0 // indirect\n\tgithub.com/prometheus/client_golang v1.10.0\n\tgolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9\n\tgolang.org/x/net v0.0.0-20200707034311-ab3426394381 // indirect\n\tgolang.org/x/sync v0.0.0-20201207232520-09787c993a3a // indirect\n\tgoogle.golang.org/protobuf v1.23.0\n\n)\n"
        },
        "database": "PostgreSQL",
        "build_system": "go mod",
        "config_files": {
            "docker-compose.yml": "version: \"3.7\"\n\nservices:\n  pgdb:\n    image: postgres\n    restart: always\n    container_name: pgdb\n    env_file: ./postgres/docker-compose.env\n    volumes:\n      - ./postgres/postgresDB:/var/lib/postgresql/data\n      - ./postgres/postgresInit:/docker-entrypoint-initdb.d\n    ports:\n      - \"5432:5432\"\n  promotionsrv:\n    build:\n      context: .\n      dockerfile: ./promotion/Dockerfile\n      target: dev\n    depends_on:\n      - pgdb\n      - nats\n      - usersrv\n      - customersrv\n      - redis\n    container_name: promotionsrvcont\n    entrypoint: CompileDaemon --build=\"go build -o promotionServer ./promotion/server/\" --command=./promotionServer\n    env_file: ./promotion/docker-compose.env\n    volumes:\n      - ./promotion/server:/go/src/goTemp/promotion/server\n      - ./globalUtils:/go/src/goTemp/globalUtils\n    ports:\n      - \"50051:50051\"\n      - \"2114:2112\"\n  promotioncli:\n    build:\n      context: .\n      dockerfile: ./promotion/DockerfileCli\n      target: dev\n    depends_on:\n      - usersrv\n    container_name: promotionclicont\n    env_file: ./promotion/docker-compose-cli.env\n    entrypoint: CompileDaemon --build=\"go build -o promotionClient ./promotion/client/\" --command=./promotionClient\n    volumes:\n      - ./promotion/client:/go/src/goTemp/promotion/client\n    ports:\n      - \"50052:50051\"\n  usersrv:\n    build:\n      context: .\n      dockerfile: ./user/Dockerfile\n      target: dev\n    depends_on:\n      - pgdb\n      - nats\n    container_name: usersrvcont\n    entrypoint: CompileDaemon --build=\"go build -o userServer ./user/server/\" --command=./userServer\n    env_file: ./user/docker-compose.env\n    volumes:\n      - ./user/server:/go/src/goTemp/user/server\n      - ./globalUtils:/go/src/goTemp/globalUtils\n      - ./globalMonitoring:/go/src/goTemp/globalMonitoring\n    ports:\n      - \"50053:50053\"\n      - \"2111:2112\"\n  usercli:\n    build:\n      context: .\n      dockerfile: ./user/DockerfileCli\n      target: dev\n    container_name: userclicont\n    env_file: ./user/docker-compose-cli.env\n    entrypoint: CompileDaemon --build=\"go build -o userClient ./user/client/\" --command=./userClient\n    volumes:\n      - ./user/client:/go/src/goTemp/user/client\n    ports:\n      - \"50054:50051\"\n  auditsrv:\n    build:\n      context: .\n      dockerfile: ./audit/Dockerfile\n      target: dev\n    depends_on:\n      - timescaledb\n      - nats\n    container_name: auditsrvcont\n    entrypoint: CompileDaemon --build=\"go build -o auditServer ./audit/server/\" --command=./auditServer\n    env_file: ./audit/docker-compose.env\n    volumes:\n      - ./audit/server:/go/src/goTemp/audit/server\n      - ./globalUtils:/go/src/goTemp/globalUtils\n    ports:\n      - \"50055:50055\"\n      - \"2115:2112\"\n  customersrv:\n    build:\n      context: .\n      dockerfile: ./customer/Dockerfile\n      target: dev\n    depends_on:\n      - arangodb\n      - nats\n      - usersrv\n    container_name: customersrvcont\n    entrypoint: CompileDaemon --build=\"go build -o customerServer ./customer/server/\" --command=./customerServer\n    env_file: ./customer/docker-compose.env\n    volumes:\n      - ./customer/server:/go/src/goTemp/customer/server\n      - ./globalUtils:/go/src/goTemp/globalUtils\n    ports:\n      - \"50057:50057\"\n      - \"2112:2112\"\n  customercli:\n    build:\n      context: .\n      dockerfile: ./customer/DockerfileCli\n      target: dev\n    container_name: customerclicont\n    env_file: ./customer/docker-compose-cli.env\n    entrypoint: CompileDaemon --build=\"go build -o customerClient ./customer/client/\" --command=./customerClient\n    volumes:\n      - ./customer/client:/go/src/goTemp/customer/client\n    ports:\n      - \"50058:50051\"\n  productsrv:\n    build:\n      context: .\n      dockerfile: ./product/Dockerfile\n      target: dev\n    depends_on:\n      - arangodb\n      - nats\n      - usersrv\n    container_name: productsrvcont\n    entrypoint: CompileDaemon --build=\"go build -o productServer ./product/server/\" --command=./productServer\n    env_file: ./product/docker-compose.env\n    volumes:\n      - ./product/server:/go/src/goTemp/product/server\n      - ./globalUtils:/go/src/goTemp/globalUtils\n    ports:\n      - \"50059:50059\"\n      - \"2113:2112\"\n  productcli:\n    build:\n      context: .\n      dockerfile: ./product/DockerfileCli\n      target: dev\n    container_name: productclicont\n    env_file: ./product/docker-compose-cli.env\n    entrypoint: CompileDaemon --build=\"go build -o productClient ./product/client/\" --command=./productClient\n    volumes:\n      - ./product/client:/go/src/goTemp/product/client\n    ports:\n      - \"50060:50051\"\n  nats:\n    build:\n      context: ./nats\n      dockerfile: Dockerfile\n    ports:\n      - \"8222:8222\"\n      - \"4222:4222\"\n      - \"6222:6222\"\n  timescaledb:\n    build:\n      context: ./timescaledb\n      dockerfile: Dockerfile\n    restart: always\n    container_name: timescaledb\n    env_file: ./timescaledb/docker-compose.env\n    volumes:\n      - ./timescaledb/timescaleDB:/var/lib/postgresql/data\n    ports:\n      - \"5433:5432\"\n  arangodb:\n    image: arangodb:3.6.4\n    container_name: arangodbcont\n    env_file: ./arangodb/docker-compose.env\n    ports:\n      - \"8529:8529\"\n    volumes:\n      - ./arangodb/db:/var/lib/arangodb3\n      - ./arangodb/apps_db_system:/var/lib/arangodb3-apps/_db/\n      - ./arangodb/arangodbinit:/docker-entrypoint-initdb.d\n  redis:\n    image: redis\n    container_name: rediscont\n    env_file: ./redis/docker-compose.env\n    volumes:\n    - ./redis/data:/data\n    - ./redis/config:/usr/local/etc/redis/\n#    command: [\"redis-server\",\"/usr/local/etc/redis/redis.conf\", \"--appendonly\", \"yes\"]\n    entrypoint: [\"sh\", \"-c\", \"redis-server --appendonly yes --requirepass $${REDIS_PASS}\"]\n    ports:\n      - \"6379:6379\"\n  microapi:\n    image: micro/micro:v2.9.3\n    container_name: microcont\n    command: api --handler=rpc --namespace=goTemp.api\n    ports:\n    - \"8080:8080\"\n  web:\n    build:\n      context: ./web\n      dockerfile: Dockerfile\n      target: dev\n    depends_on:\n      - microapi\n    container_name: gtweb\n    env_file: ./web/docker-compose.env\n    volumes:\n    - ./web/sapper/src:/goTemp/web/sapper/src\n    ports:\n    - \"3000:3000\"\n    - \"10000:10000\"\n  prometheus:\n    image: prom/prometheus\n    depends_on:\n      - pgdbexporter\n      - redisexporter\n      - natsexporter\n      - timescaleexporter\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus:/etc/prometheus\n  grafana:\n    image: grafana/grafana\n    depends_on:\n      - prometheus\n    env_file: ./grafana/docker-compose.env\n    ports:\n    - \"3001:3000\"\n    volumes:\n    - ./grafana/data:/var/lib/grafana\n    - ./grafana/provisioning:/etc/grafana/provisioning\n  pgdbexporter:\n    image: bitnami/postgres-exporter\n    depends_on:\n      - pgdb\n    env_file: ./prometheus/postgresExporter/docker-compose.env\n    ports:\n    - \"9187:9187\"\n  redisexporter:\n    image: bitnami/redis-exporter\n    depends_on:\n      - redis\n    env_file: ./prometheus/redisExporter/docker-compose.env\n    ports:\n    - \"9121:9121\"\n  natsexporter:\n    image: natsio/prometheus-nats-exporter\n    depends_on:\n      - nats\n    ports:\n    - \"7777:7777\"\n    command: [\"-varz\", \"http://nats:8222\"]\n  timescaleexporter:\n    image: bitnami/postgres-exporter\n    depends_on:\n      - timescaledb\n    env_file: ./prometheus/timescaledbExporter/docker-compose.env\n    ports:\n      - \"9188:9187\"",
            "promotion/Dockerfile": "# Build DEv image with hot rebuild\nFROM golang AS dev\n\nENV SRVDIR=promotion\n\nENV SRVNAME=${SRVDIR}Server\nWORKDIR /go/src/goTemp\nRUN go get github.com/githubnemo/CompileDaemon\nENV GO111MODULE=on\nCOPY ./go.mod ./go.sum ./\nRUN go mod download\nCOPY ./$SRVDIR ./$SRVDIR\nCOPY ./user/proto ./user/proto\nCOPY ./customer/proto ./customer/proto\nCOPY ./globalProtos ./globalProtos\nCOPY ./globalerrors ./globalerrors\nCOPY ./globalUtils ./globalUtils\nCOPY ./globalMonitoring ./globalMonitoring\n#COPY ./go.mod ./go.sum ./\n#RUN go get -d  -v ./...\nRUN go build -o $SRVNAME ./$SRVDIR/server/\nEXPOSE 50051\nEXPOSE 2112\nCMD ./$SRVNAME\n\n# Compile the Alpine version of the application\nFROM dev AS alpBuild\n\nENV SRVDIR=promotion\n\nENV SRVNAME=${SRVDIR}ServerAlp\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o $SRVNAME ./$SRVDIR/server/\n\n# Build the Alpine image\nFROM alpine\n\nENV SRVDIR=promotion\n\nENV SRVNAME=${SRVDIR}ServerAlp\nRUN apk --no-cache add ca-certificates\nWORKDIR /goTemp\nCOPY --from=alpBuild /go/src/goTemp/$SRVNAME $SRVNAME\n#CMD [\"./promotionServerAlp\"]\nCMD ./$SRVNAME"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "docker-compose.env"
        ],
        "folders": [
            "server"
        ]
    }
}