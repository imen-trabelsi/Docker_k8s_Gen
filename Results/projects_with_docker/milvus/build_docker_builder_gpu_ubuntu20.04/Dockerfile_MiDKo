# Define base image
FROM nvidia/cuda:11.8.0-devel-ubuntu20.04

# Add environment variables
ENV VCPKG_FORCE_SYSTEM_BINARIES 1
ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/lib"
ENV GOPATH /go
ENV GOROOT /usr/local/go
ENV GO111MODULE on
ENV PATH $GOPATH/bin:$GOROOT/bin:$PATH
ENV PATH=/root/.cargo/bin:$PATH

# Set working directory
WORKDIR /app

# Copy dependencies
COPY go.mod .

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends wget curl ca-certificates gnupg2 ninja-build && \
wget -qO- "https://cmake.org/files/v3.27/cmake-3.27.5-linux-`uname -m`.tar.gz" | tar --strip-components=1 -xz -C /usr/local &&\
apt-get update && apt-get install -y --no-install-recommends \
g++ gcc gfortran git make ccache libssl-dev zlib1g-dev zip unzip \
clang-format-12 clang-tidy-12 lcov libtool m4 autoconf automake python3 python3-pip \
pkg-config uuid-dev libaio-dev libgoogle-perftools-dev libopenblas-dev && \
apt-get remove --purge -y && \
rm -rf /var/lib/apt/lists/* && \
pip3 install conan==1.64.1 && \
mkdir /opt/vcpkg &&  \
wget -qO- vcpkg.tar.gz https://github.com/microsoft/vcpkg/archive/master.tar.gz | tar --strip-components=1 -xz -C /opt/vcpkg &&\
rm -rf vcpkg.tar.gz &&\
/opt/vcpkg/bootstrap-vcpkg.sh -disableMetrics && ln -s /opt/vcpkg/vcpkg /usr/local/bin/vcpkg && vcpkg version &&\
vcpkg install azure-identity-cpp azure-storage-blobs-cpp gtest &&\
mkdir -p /usr/local/go && wget -qO- "https://go.dev/dl/go1.21.11.linux-$TARGETARCH.tar.gz" | tar --strip-components=1 -xz -C /usr/local/go && \
mkdir -p "$GOPATH/src" "$GOPATH/bin" &&\
curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ${GOROOT}/bin v1.46.2 &&\
go install github.com/ramya-rao-a/go-outline@latest &&\
go install golang.org/x/tools/gopls@latest &&\
go install github.com/uudashr/gopkgs/v2/cmd/gopkgs@latest &&\
go install github.com/go-delve/delve/cmd/dlv@latest &&\
go install honnef.co/go/tools/cmd/staticcheck@2022.1 &&\
go clean --modcache &&\
chmod -R 777 "$GOPATH" && chmod -R a+w $(go env GOTOOLDIR) &&\
ln -s /go/bin/dlv /go/bin/dlv-dap &&\
apt-get update && apt-get install -y --no-install-recommends \
gdb gdbserver &&\
apt-get remove --purge -y &&\
rm -rf /var/lib/apt/lists/* &&\
echo 'root:root' | chpasswd &&\
mkdir -p /home/milvus/.vscode-server/extensions \
/home/milvus/.vscode-server-insiders/extensions && chmod -R 777 /home/milvus &&\
ls -la /entrypoint.sh &&\
wget -qO- "https://github.com/jeffoverflow/autouseradd/releases/download/1.2.0/autouseradd-1.2.0-amd64.tar.gz" | tar xz -C / --strip-components 1 &&\
wget -O /tini https://github.com/krallin/tini/releases/download/v0.19.0/tini && \
chmod +x /tini &&\
curl https://sh.rustup.rs -sSf | \

# Copy application files
COPY . .

# Copy permissions for scripts
COPY --chown=0:0 build/docker/builder/entrypoint.sh /

# Define the start command
ENTRYPOINT [ "/tini", "--", "autouseradd", "--user", "milvus", "--", "/entrypoint.sh" ]
CMD ["tail", "-f", "/dev/null"]
