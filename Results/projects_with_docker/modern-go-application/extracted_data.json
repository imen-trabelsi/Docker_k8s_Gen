{
    "source_code_info": {
        "language": "Go",
        "framework": "Go",
        "dependencies": {
            "go.mod": "module github.com/sagikazarmark/modern-go-application\n\ngo 1.17\n\nrequire (\n\tcontrib.go.opencensus.io/exporter/ocagent v0.7.0\n\tcontrib.go.opencensus.io/exporter/prometheus v0.4.0\n\tcontrib.go.opencensus.io/integrations/ocsql v0.1.6\n\temperror.dev/emperror v0.33.0\n\temperror.dev/errors v0.8.0\n\temperror.dev/handler/logur v0.4.0\n\tentgo.io/ent v0.9.1\n\tgithub.com/99designs/gqlgen v0.14.0\n\tgithub.com/AppsFlyer/go-sundheit v0.2.0\n\tgithub.com/ThreeDotsLabs/watermill v1.1.1\n\tgithub.com/cloudflare/tableflip v1.2.1\n\tgithub.com/go-kit/kit v0.12.0\n\tgithub.com/go-sql-driver/mysql v1.5.1-0.20200311113236-681ffa848bae\n\tgithub.com/golang/protobuf v1.5.2\n\tgithub.com/goph/idgen v0.4.0\n\tgithub.com/gorilla/handlers v1.5.1\n\tgithub.com/gorilla/mux v1.8.0\n\tgithub.com/mccutchen/go-httpbin v0.0.0-20190116014521-c5cb2f4802fa\n\tgithub.com/oklog/run v1.1.0\n\tgithub.com/olekukonko/tablewriter v0.0.5\n\tgithub.com/sagikazarmark/appkit v0.13.0\n\tgithub.com/sagikazarmark/kitx v0.17.0\n\tgithub.com/sagikazarmark/ocmux v0.2.0\n\tgithub.com/sagikazarmark/todobackend-go-kit v0.6.0\n\tgithub.com/sagikazarmark/todobackend-go-kit/api v0.5.0\n\tgithub.com/sirupsen/logrus v1.8.1\n\tgithub.com/spf13/cobra v1.1.3\n\tgithub.com/spf13/pflag v1.0.5\n\tgithub.com/spf13/viper v1.7.1\n\tgithub.com/stretchr/testify v1.7.0\n\tgo.opencensus.io v0.23.0\n\tgoogle.golang.org/genproto v0.0.0-20211117155847-120650a500bb\n\tgoogle.golang.org/grpc v1.42.0\n\tlogur.dev/adapter/logrus v0.5.0\n\tlogur.dev/integration/watermill v0.5.0\n\tlogur.dev/logur v0.17.0\n)\n\nrequire (\n\tgithub.com/agnivade/levenshtein v1.1.1 // indirect\n\tgithub.com/beorn7/perks v1.0.1 // indirect\n\tgithub.com/cenkalti/backoff/v3 v3.0.0 // indirect\n\tgithub.com/census-instrumentation/opencensus-proto v0.2.1 // indirect\n\tgithub.com/cespare/xxhash/v2 v2.1.2 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/felixge/httpsnoop v1.0.2 // indirect\n\tgithub.com/fsnotify/fsnotify v1.4.9 // indirect\n\tgithub.com/go-kit/log v0.2.0 // indirect\n\tgithub.com/go-logfmt/logfmt v0.5.1 // indirect\n\tgithub.com/gogo/protobuf v1.3.2 // indirect\n\tgithub.com/golang/groupcache v0.0.0-20210331224755-41bb18bfe9da // indirect\n\tgithub.com/google/uuid v1.3.0 // indirect\n\tgithub.com/gorilla/websocket v1.4.2 // indirect\n\tgithub.com/grpc-ecosystem/grpc-gateway v1.16.0 // indirect\n\tgithub.com/hashicorp/errwrap v1.0.0 // indirect\n\tgithub.com/hashicorp/go-multierror v1.1.0 // indirect\n\tgithub.com/hashicorp/golang-lru v0.5.4 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.0.0 // indirect\n\tgithub.com/kr/text v0.2.0 // indirect\n\tgithub.com/lithammer/shortuuid/v3 v3.0.4 // indirect\n\tgithub.com/magiconair/properties v1.8.1 // indirect\n\tgithub.com/mattn/go-runewidth v0.0.9 // indirect\n\tgithub.com/matttproud/golang_protobuf_extensions v1.0.1 // indirect\n\tgithub.com/mitchellh/mapstructure v1.4.2 // indirect\n\tgithub.com/moogar0880/problems v0.1.1 // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/oklog/ulid v1.3.1 // indirect\n\tgithub.com/pelletier/go-toml v1.2.0 // indirect\n\tgithub.com/pkg/errors v0.9.1 // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/prometheus/client_golang v1.11.1 // indirect\n\tgithub.com/prometheus/client_model v0.2.0 // indirect\n\tgithub.com/prometheus/common v0.30.0 // indirect\n\tgithub.com/prometheus/procfs v0.7.3 // indirect\n\tgithub.com/prometheus/statsd_exporter v0.21.0 // indirect\n\tgithub.com/spf13/afero v1.1.2 // indirect\n\tgithub.com/spf13/cast v1.3.0 // indirect\n\tgithub.com/spf13/jwalterweatherman v1.0.0 // indirect\n\tgithub.com/subosito/gotenv v1.2.0 // indirect\n\tgithub.com/vektah/gqlparser/v2 v2.2.0 // indirect\n\tgo.uber.org/atomic v1.9.0 // indirect\n\tgo.uber.org/multierr v1.7.0 // indirect\n\tgolang.org/x/net v0.7.0 // indirect\n\tgolang.org/x/sync v0.0.0-20210220032951-036812b2e83c // indirect\n\tgolang.org/x/sys v0.5.0 // indirect\n\tgolang.org/x/text v0.7.0 // indirect\n\tgoogle.golang.org/api v0.30.0 // indirect\n\tgoogle.golang.org/protobuf v1.27.1 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgopkg.in/ini.v1 v1.51.0 // indirect\n\tgopkg.in/yaml.v2 v2.4.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b // indirect\n)\n"
        },
        "database": "MySQL",
        "build_system": "go mod",
        "config_files": {
            "docker-compose.yml": "version: \"3.1\"\n\nservices:\n    db:\n        image: mysql:8.0\n        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci\n        environment:\n            MYSQL_ALLOW_EMPTY_PASSWORD: \"yes\"\n            MYSQL_DATABASE: app\n\n    dockerhost:\n        image: qoomon/docker-host:2.3.0\n        cap_add: [ 'NET_ADMIN', 'NET_RAW' ]\n\n    prometheus:\n        image: prom/prometheus:v2.12.0\n        volumes:\n            - ./etc/local/prometheus/:/etc/prometheus/\n        command:\n            - '--config.file=/etc/prometheus/prometheus.yml'\n            - '--storage.tsdb.path=/prometheus'\n            - '--web.console.libraries=/usr/share/prometheus/console_libraries'\n            - '--web.console.templates=/usr/share/prometheus/consoles'\n            - '--storage.tsdb.retention=200h'\n            - '--web.enable-lifecycle'\n\n    grafana:\n        image: grafana/grafana:6.3.3\n        depends_on:\n            - prometheus\n        environment:\n            GF_USERS_ALLOW_SIGN_UP: \"false\"\n            GF_AUTH_ANONYMOUS_ENABLED: \"true\"\n            GF_AUTH_ANONYMOUS_ORG_ROLE: \"Admin\"\n        volumes:\n            - ./etc/local/grafana/provisioning:/etc/grafana/provisioning\n\n    jaeger:\n        image: jaegertracing/all-in-one:1.13.1\n\n    oc-collector:\n        image: omnition/opencensus-collector:0.1.10\n        command: [\"--config=/etc/opencensus/collector.yaml\"]\n        volumes:\n            - ./etc/local/opencensus/:/etc/opencensus/:ro\n        depends_on:\n            - jaeger\n\n    oc-agent:\n        image: omnition/opencensus-agent:0.1.10\n        command: [\"--config=/etc/opencensus/agent.yaml\"]\n        volumes:\n            - ./etc/local/opencensus/:/etc/opencensus/:ro\n        depends_on:\n            - oc-collector\n",
            "Dockerfile": "FROM golang:1.17-alpine3.14 AS builder\n\nENV GOFLAGS=\"-mod=readonly\"\n\nRUN apk add --update --no-cache ca-certificates make git curl mercurial\n\nRUN mkdir -p /workspace\nWORKDIR /workspace\n\nARG GOPROXY\n\nCOPY go.* ./\nRUN go mod download\n\nARG BUILD_TARGET\n\nCOPY Makefile *.mk ./\n\nRUN if [[ \"${BUILD_TARGET}\" == \"debug\" ]]; then make build-debug-deps; else make build-release-deps; fi\n\nCOPY . .\n\nRUN set -xe && \\\n    if [[ \"${BUILD_TARGET}\" == \"debug\" ]]; then \\\n    cd /tmp; GOBIN=/workspace/build/debug go get github.com/go-delve/delve/cmd/dlv; cd -; \\\n    make build-debug; \\\n    mv build/debug /build; \\\n    else \\\n    make build-release; \\\n    mv build/release /build; \\\n    fi\n\n\nFROM alpine:3.14\n\nRUN apk add --update --no-cache ca-certificates tzdata bash curl\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# set up nsswitch.conf for Go's \"netgo\" implementation\n# https://github.com/gliderlabs/docker-alpine/issues/367#issuecomment-424546457\nRUN test ! -e /etc/nsswitch.conf && echo 'hosts: files dns' > /etc/nsswitch.conf\n\nARG BUILD_TARGET\n\nRUN if [[ \"${BUILD_TARGET}\" == \"debug\" ]]; then apk add --update --no-cache libc6-compat; fi\n\nCOPY --from=builder /build/* /usr/local/bin/\n\nEXPOSE 8000 8001 10000\nCMD [\"modern-go-application\", \"--telemetry-addr\", \":10000\", \"--http-addr\", \":8000\", \"--grpc-addr\", \":8001\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "loadgen.sh",
            "locustfile.py",
            "requirements.txt"
        ],
        "folders": []
    }
}