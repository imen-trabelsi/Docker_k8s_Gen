# Use indicated base image
FROM golang:1.17-alpine3.14

# Allocate appropriate work directory
WORKDIR /workspace

# Copy required files
COPY go.* ./
COPY Makefile *.mk ./
COPY . .

# Build tools and application
RUN apk add --update --no-cache ca-certificates make git curl mercurial && \
    go mod download && \

# Switch between debug and release builds
RUN set -xe && \
    if [[ "${BUILD_TARGET}" == "debug" ]]; then \
        cd /tmp; GOBIN=/workspace/build/debug go get github.com/go-delve/delve/cmd/dlv; cd -; \
        make build-debug; \
        mv build/debug /build; \
    else \
        make build-release; \
        mv build/release /build; \

# Install necessary runtime packages
RUN apk add --update --no-cache ca-certificates tzdata bash curl && \
    test ! -e /etc/nsswitch.conf && echo 'hosts: files dns' > /etc/nsswitch.conf && \

# Environment variables
ENV GOFLAGS="-mod=readonly"
    
# Expose appropriate port
EXPOSE 8000

# Set initial command
CMD ["modern-go-application", "--telemetry-addr", ":10000", "--http-addr", ":8000", "--grpc-addr", ":8001"]
