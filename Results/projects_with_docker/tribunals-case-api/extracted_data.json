{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "build.gradle": "plugins {\n    id 'application'\n    id 'pmd'\n    id 'org.sonarqube' version '6.0.1.5171'\n    id 'jacoco'\n    id 'org.springframework.boot' version '3.4.3'\n    id 'uk.gov.hmcts.java' version '0.12.65'\n    id 'com.gorylenko.gradle-git-properties' version '2.5.0'\n    id 'com.github.ben-manes.versions' version '0.46.0'\n    id 'org.owasp.dependencycheck' version '12.1.0'\n    id 'au.com.dius.pact' version '4.3.15'\n    id 'com.github.hmcts.rse-cft-lib' version '0.19.1612'\n}\n\napply plugin: 'org.springframework.boot'\napply plugin: 'io.spring.dependency-management'\n\ngitProperties {\n    gitPropertiesDir = new File(\"${project.rootDir}/src/main/resources/uk/gov/hmcts/reform/sscs\")\n    keys = ['git.commit.id', 'git.commit.time']\n    dateFormat = \"yyyy-MM-dd'T'HH:mmZ\"\n    dateFormatTimeZone = \"GMT\"\n}\n\n\ngroup = 'uk.gov.hmcts.reform'\nversion = '1.0.0'\n\njava {\n    toolchain {\n        languageVersion = JavaLanguageVersion.of(21)\n    }\n}\n\ncompileJava {\n    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << \"-Xlint:unchecked\"\n}\n\ncompileTestJava {\n    options.compilerArgs << '-Xlint:deprecation'\n}\n\ntasks.withType(Copy).configureEach { duplicatesStrategy DuplicatesStrategy.WARN }\n\napplication {\n    mainClass.set('uk.gov.hmcts.reform.sscs.TribunalsCaseApiApplication')\n    // this is required to force Java running on the Azure Windows Server OS into using\n    // UTF-8 as the default character set instead of windows-1252 which causes issues\n    applicationDefaultJvmArgs = [\"-Dfile.encoding=UTF-8\"]\n}\n\npmd {\n    toolVersion = \"7.11.0\"\n    ignoreFailures = true\n    sourceSets = [sourceSets.main, sourceSets.test]\n    reportsDir = layout.buildDirectory.dir(\"reports/pmd\").get().asFile\n    ruleSetFiles = files(\"config/pmd/ruleset.xml\")\n}\n\nsourceSets {\n    integrationTest {\n        java {\n            compileClasspath += main.output + test.output\n            runtimeClasspath += main.output + test.output\n            srcDir('src/IntegrationTests/java')\n        }\n        resources {\n            srcDir('src/IntegrationTests/resources')\n        }\n    }\n    functionalTest {\n        java {\n            compileClasspath += main.output + test.output\n            runtimeClasspath += main.output + test.output\n            srcDir('src/functionalTest/java')\n        }\n    }\n    contractTest {\n        java {\n            compileClasspath += main.output\n            runtimeClasspath += main.output\n            srcDir file('src/contractTest/java')\n        }\n        resources.srcDir file('src/contractTest/resources')\n    }\n}\n\ndependencies {\n    integrationTestImplementation(sourceSets.test.output)\n    functionalTestImplementation(sourceSets.test.output)\n}\n\ntasks.withType(Test).configureEach {\n    useJUnitPlatform()\n\n    testLogging {\n        exceptionFormat = 'full'\n    }\n}\n\ntasks.register('integration', Test) {\n    jvmArgs = ['-Xms1024m', '-Xmx2048m']\n    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1\n    forkEvery = 10\n    setTestClassesDirs(sourceSets.integrationTest.output.classesDirs)\n    setClasspath(sourceSets.integrationTest.runtimeClasspath)\n}\n\ntasks.register('functional', Test) {\n    group = 'Functional Tests'\n    description = 'Executes non-destructive functional tests in AAT against a running CCD and notification service'\n    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)\n    setClasspath(sourceSets.functionalTest.runtimeClasspath)\n    include \"uk/gov/hmcts/reform/sscs/functional/**\"\n    exclude \"uk/gov/hmcts/reform/sscs/smoke/**\"\n    maxParallelForks = Runtime.runtime.availableProcessors()\n}\n\ntasks.register('verifyNotifications', Test) {\n    group = 'Notifications verification Tests'\n    description = 'Simulates CCD callbacks to generate notifications, then retrieves pdfs from Gov.Notify'\n    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)\n    setClasspath(sourceSets.functionalTest.runtimeClasspath)\n    include \"uk/gov/hmcts/reform/sscs/notifications/**\"\n    exclude \"uk/gov/hmcts/reform/sscs/smoke/**\"\n    maxParallelForks = Runtime.runtime.availableProcessors()\n}\n\ntasks.register('smoke', Test) {\n    group = 'verification'\n    description = 'Executes non-destructive smoke tests against a running Tribunal Case API'\n    setTestClassesDirs(sourceSets.functionalTest.output.classesDirs)\n    setClasspath(sourceSets.functionalTest.runtimeClasspath)\n    include \"uk/gov/hmcts/reform/sscs/smoke/**\"\n    exclude \"uk/gov/hmcts/reform/sscs/functional/**\"\n}\n\ntasks.register('contract', Test) {\n    description = \"Runs the consumer Pact tests\"\n    group = 'Verification'\n    useJUnitPlatform()\n    testClassesDirs = sourceSets.contractTest.output.classesDirs\n    classpath = sourceSets.contractTest.runtimeClasspath\n}\n\ntasks.register('fortifyScan', JavaExec) {\n    mainClass = \"uk.gov.hmcts.fortifyclient.FortifyClientMainApp\"\n    classpath += sourceSets.test.runtimeClasspath\n    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']\n}\n\njacoco {\n    toolVersion = \"0.8.12\"\n}\n\njacocoTestReport {\n    executionData(test, integration)\n    reports {\n        xml.required = true\n        csv.required = false\n        xml.outputLocation = layout.buildDirectory.file(\"reports/jacoco/test/jacocoTestReport.xml\")\n    }\n}\n\ndependencyUpdates.resolutionStrategy = {\n    componentSelection { rules ->\n        rules.all {\n            def isNonStable = { String version ->\n                def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }\n                def regex = /^[0-9,.v-]+(-r)?$/\n                return !stableKeyword && !(version ==~ regex)\n            }\n            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {\n                selection.reject('Release candidate')\n            }\n        }\n    }\n}\n\n// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html\ndependencyCheck {\n    // Specifies if the build should be failed if a CVSS score above a specified level is identified.\n    // range of 7-10 fails the build, anything lower and it doesn't fail the build\n    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild', 'true') == 'true' ? 7.0 : 11\n    suppressionFile = 'config/owasp/suppressions.xml'\n\n    nvd.validForHours = 24\n\n    analyzers {\n        retirejs {\n            enabled = false\n        }\n        ossIndex {\n            enabled = false\n        }\n    }\n}\n\nrepositories {\n\n    mavenLocal()\n    mavenCentral()\n\n    // jitpack should be last resort\n    // see: https://github.com/jitpack/jitpack.io/issues/1939\n    maven { url 'https://jitpack.io' }\n    // Requires authentication, if it gets here the library cannot be found!\n    maven {\n        url 'https://repo.spring.io/libs-milestone'\n    }\n}\n\nprocessResources.dependsOn(generateGitProperties)\n\nproject.tasks.named('sonarqube') {\n    dependsOn test, jacocoTestReport\n}\n\ncheckstyleMain.shouldRunAfter(compileJava)\ntest.shouldRunAfter(checkstyleTest)\n\nsonarqube {\n    properties {\n        property \"sonar.projectName\", \"SSCS - Tribunals Case Api\"\n        property \"sonar.projectKey\", \"SSCSTCA\"\n        property \"sonar.coverage.jacoco.xmlReportPaths\", \"${jacocoTestReport.reports.xml.outputLocation}\"\n        property \"sonar.exclusions\", \"**/CreateCaseException.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/domain/**,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/evidenceshare/domain/**,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/TribunalsCaseApiApplication.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/email/Email.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/config/**/*.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/model/**/*.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/evidenceshare/model/**/*.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/EvidenceUploadService.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/OnlineHearingService.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/data/EvidenceDescriptionPdfData.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/StoreAppellantStatementService.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/StorePdfService.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/servicebus/SessionAwareServiceBusMessagingService.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/coversheet/PdfCoverSheet.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/HmcHearingApiService.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/controllers/CreateCaseController.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/pdf/data/PdfData.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/ccd/presubmit/writefinaldecision/esa/EsaWriteFinalDecisionMidEventValidationHandler.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/evidenceshare/config/**,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/service/servicebus/messaging/**,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/docmosis/domain/**,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/docmosis/config/**,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/EnvironmentPropertiesPrinter.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/controller/FunctionalTestController.java,\" +\n                \"src/main/java/uk/gov/hmcts/reform/sscs/tyanotifications/utils/GetAllTemplatesFromNotify.java,\"\n        property \"sonar.host.url\", \"https://sonar.reform.hmcts.net/\"\n    }\n}\n\nconfigurations {\n    integrationTestImplementation.extendsFrom(testImplementation)\n    integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)\n    functionalTestImplementation.extendsFrom(testImplementation)\n    functionalTestRuntimeOnly.extendsFrom(testRuntimeOnly)\n    contractTestImplementation.extendsFrom(testImplementation)\n    contractTestRuntimeOnly.extendsFrom(testRuntimeOnly)\n}\n\ntasks.register('installLocalGitHook', Copy) {\n    from new File(rootProject.rootDir, 'config/git/pre-commit')\n    into { new File(rootProject.rootDir, '.git/hooks') }\n    fileMode 0775\n}\n\ngenerateGitProperties.dependsOn installLocalGitHook\ncompileJava.dependsOn installLocalGitHook\n\ntasks.register('runGitPreCommitTasks') {\n    dependsOn 'pmdMain'\n    dependsOn 'pmdTest'\n    dependsOn 'checkstyleMain'\n    dependsOn 'checkstyleTest'\n}\n\ndependencyManagement {\n    dependencies {\n        //CVE-2022-25857\n        dependencySet(group: 'org.yaml', version: '2.4') {\n            entry 'snakeyaml'\n        }\n\n        imports {\n            mavenBom \"org.springframework.cloud:spring-cloud-dependencies:2024.0.0\"\n        }\n    }\n}\n\ndef versions = [\n        springsecurity : '6.4.3',\n        jackson        : '2.17.2',\n        lombok         : '1.18.36',\n        commonsio      : '2.18.0'\n]\n\ndependencies {\n    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: springBoot.class.package.implementationVersion\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: springBoot.class.package.implementationVersion\n\n    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springsecurity\n    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: versions.springsecurity\n    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springsecurity\n    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springsecurity\n\n    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'\n    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.11'\n    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'\n    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.5'\n\n    implementation group: 'com.google.guava', name: 'guava', version: '33.4.0-jre'\n    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.17.28'\n\n    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.0'\n    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.3'\n    implementation group: 'com.github.hmcts', name: 'ccd-client', version: '5.0.3'\n\n    implementation group: 'net.objectlab.kit', name: 'datecalc-jdk8', version: '1.4.8'\n\n    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.5'\n\n    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '13.5'\n    implementation group: 'io.github.openfeign', name: 'feign-hc5', version: '13.5'\n    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'\n    implementation group: 'com.squareup.okio', name: 'okio-jvm', version: '3.10.2'\n\n    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '3.0.6'\n\n    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.0'\n\n    implementation group: 'com.github.hmcts', name: 'java-logging', version: '6.1.8'\n    implementation group: 'com.microsoft.azure', name: 'applicationinsights-web', version: '3.7.1'\n    implementation group: 'com.github.hmcts', name: 'doc-assembly-client', version: '2.0.3'\n    implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: '1.8.1'\n    //remove when secure doc store is live\n    implementation group: 'com.github.hmcts', name: 'document-management-client', version: '7.0.1'\n    implementation group: 'com.github.hmcts', name: 'cmc-pdf-service-client', version: '8.0.1'\n\n\n    implementation group: 'com.mchange', name: 'c3p0', version: '0.10.2'\n    implementation group: 'org.flywaydb', name: 'flyway-core', version: '11.3.4'\n    implementation group: 'org.flywaydb', name: 'flyway-database-postgresql', version: '11.3.4'\n\n    implementation group: 'com.github.hmcts', name: 'sscs-common', version: '6.0.9'\n\n    // sscs-pdf-email-common\n    implementation group: 'com.github.sps.junidecode', name: 'junidecode', version: '0.3'\n    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'\n    implementation group: 'com.twelvemonkeys.imageio', name: 'imageio-tiff', version: '3.12.0'\n    implementation group: 'pl.touk', name: 'throwing-function', version: '1.3'\n    // sscs-pdf-email-common\n\n    implementation group: 'com.azure', name: 'azure-core', version: '1.55.3'\n    implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.17.9'\n\n    implementation group: 'io.projectreactor', name: 'reactor-core', version: '3.7.3'\n\n    implementation group:'org.overviewproject', name: 'mime-types', version: '1.0.4'\n\n    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson\n    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson\n    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson\n    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson\n    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: versions.jackson\n\n    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'\n    implementation group: 'org.springframework', name: 'spring-jms'\n    implementation group: 'com.azure', name: 'azure-servicebus-jms', version: '2.0.0'\n\n    implementation group: 'com.github.hmcts', name: 'sscs-job-scheduler', version: '2.0.0'\n    implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.5.0'\n    implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '5.2.1-RELEASE'\n    implementation group: 'org.commonmark', name: 'commonmark', version: '0.24.0'\n\n    implementation group: 'commons-io', name: 'commons-io', version:  versions.commonsio\n\n    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'\n    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'\n    implementation group: 'org.apache.pdfbox', name: 'xmpbox', version: '2.0.33'\n    implementation group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.33'\n    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.9.3'\n    implementation group: 'org.apache.tika', name: 'tika-parsers', version: '2.9.3'\n\n    implementation group: 'org.json', name: 'json', version: '20250107'\n\n    implementation group: 'com.opencsv', name: 'opencsv', version: '5.7.1'\n\n    implementation group: \"com.networknt\", name: \"json-schema-validator\", version: \"1.0.81\"\n\n    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '10.1.26'\n\n    //evidence-share depenedencies\n    implementation group: 'com.github.hmcts', name: 'cmc-pdf-service-client', version: '8.0.1'\n    implementation group: 'com.github.hmcts', name: 'send-letter-client', version: '5.0.1'\n    // Remove this dependency once the secure doc-store is in use\n    implementation group: 'com.github.hmcts', name: 'document-management-client', version: '7.0.1'\n    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '7.7.0'\n    implementation group: 'com.github.hmcts', name: 'befta-fw', version: '9.2.3', {\n        exclude group: 'org.apache.commons', module: 'commons-compress'\n        exclude group: 'com.google.guava', module: 'guava'\n        exclude group: 'org.apache.poi', module: 'poi-ooxml'\n        exclude group: 'org.apache.poi', module: 'poi'\n        exclude group: 'com.launchdarkly', module: 'launchdarkly-java-server-sdk'\n        exclude group: 'org.codehaus.groovy', module: 'groovy-xml'\n    }\n\n    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n\n    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {\n        exclude group: 'com.vaadin.external.google', module: 'android-json'\n    }\n\n    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '5.5.1'\n    testImplementation group: 'io.rest-assured', name: 'xml-path', version: '5.5.1'\n    testImplementation group: 'io.rest-assured', name: 'json-path', version: '5.5.1'\n    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.7', classifier: 'all', {\n        exclude group: 'commons-io', module: 'commons-io'\n    }\n\n    testImplementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5-fluent', version: '5.4.2'\n\n    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.15.2'\n    testImplementation group: 'net.javacrumbs.json-unit', name: 'json-unit', version: '4.1.0'\n    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.15.2'\n    testImplementation group: 'net.javacrumbs.json-unit', name: 'json-unit-fluent', version: '4.1.0'\n\n    testImplementation group: 'io.github.artsok', name: 'rerunner-jupiter', version: '2.1.6'\n\n    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'\n\n    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-quartz', version: springBoot.class.package.implementationVersion\n\n    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n    functionalTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n\n    testImplementation platform(group: 'org.junit', name: 'junit-bom', version: '5.9.3')\n    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter'\n    testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine'\n    testImplementation group: 'com.h2database', name: 'h2', version: '2.3.232'\n\n    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'\n    // https://mvnrepository.com/artifact/org.awaitility/awaitility\n    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.3.0'\n\n    testImplementation 'org.wiremock.integrations:wiremock-spring-boot:3.6.0'\n\n    //pact contract testing\n    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.3.16'\n    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: '4.1.7'\n    contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'junit5', version: '4.3.16'\n    contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'java8',  version: '4.1.7'\n\n    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBoot.class.package.implementationVersion\n\n    contractTestImplementation sourceSets.main.runtimeClasspath\n    contractTestImplementation sourceSets.test.runtimeClasspath\n\n    cftlibImplementation group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBoot.class.package.implementationVersion\n    cftlibAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok\n\n}\n\nbootJar {\n    archiveFileName = 'tribunals-case-api.jar'\n    manifest {\n        attributes 'Implementation-Title': project.name,\n                'Implementation-Version': project.version\n    }\n}\n\nproject.ext {\n    pacticipant = 'sscs_tribunalsCaseApi'\n    pacticipantVersion = getCheckedOutGitCommitHash()\n}\n\ntasks.register('runAndPublishConsumerPactTests', Test) {\n    logger.lifecycle(\"Runs pact Tests\")\n    testClassesDirs = sourceSets.contractTest.output.classesDirs\n    classpath = sourceSets.contractTest.runtimeClasspath\n}\n\nrunAndPublishConsumerPactTests.dependsOn contract\n\nrunAndPublishConsumerPactTests.finalizedBy pactPublish\n\npact {\n    broker {\n        pactBrokerUrl = System.getenv(\"PACT_BROKER_FULL_URL\") ?: 'http://localhost:80'\n    }\n    publish {\n        pactDirectory = 'pacts'\n        tags = [System.getenv(\"PACT_BRANCH_NAME\") ?:'Dev']\n        version = project.pacticipantVersion\n    }\n}\n\n\nstatic def getCheckedOutGitCommitHash() {\n    'git rev-parse --verify --short HEAD'.execute().text.trim()\n}\n\nrun {\n    def debug = System.getProperty(\"debug\")\n    if (debug == 'true') {\n        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006']\n    }\n}\n\n\ntasks.register('generateXls', Exec) {\n    commandLine project.file('./bin/create-xlsx.sh').path, 'benefit', 'dev', 'local'\n}\n\nbootWithCCD {\n    group 'application'\n    dependsOn generateXls\n    authMode = uk.gov.hmcts.rse.AuthMode.Local\n\n    doFirst() {\n        if (!project.file('./.aat-env').exists()) {\n            new ByteArrayOutputStream().withStream { os ->\n                exec {\n                    commandLine 'az', 'keyvault', 'secret', 'show', '--vault-name', 'sscs-aat', '-o', 'tsv', '--query', 'value', '--name', 'sscs-tribunals-case-api-dot-env'\n                    standardOutput = os\n                }\n                project.file('./.aat-env').write(new String(os.toString().replace('\\n', '').decodeBase64(), java.nio.charset.StandardCharsets.UTF_8))\n            }\n        }\n\n        project.file('./.aat-env').readLines().each() {\n            def index = it.indexOf(\"=\")\n            def key = it.substring(0, index)\n            def value = it.substring(index + 1)\n            environment key, value\n        }\n    }\n\n    //---Debug-----\n    //Uncomment to launch with debug\n    //jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5006']\n\n    //---Extra ccd loging----\n    //Uncomment for ccd callback logging\n    //environment 'LOG_CALLBACK_DETAILS', '*'\n\n    def fileLogger = [ onOutput: {\n        File logfile = new File('gradle-build.log')\n        logfile << it\n    }\n    ] as org.gradle.api.logging.StandardOutputListener\n\n    logging.addStandardOutputListener(fileLogger)\n\n    gradle.taskGraph.whenReady { taskGraph ->\n        taskGraph.allTasks.each { Task t ->\n            t.doFirst {\n                logging.addStandardOutputListener(fileLogger)\n            }\n        }\n    }\n}\n\n\ntask yarnInstall(type:Exec) {\n    workingDir = file(\"${project.projectDir}/definitions/test\")\n    commandLine 'yarn', 'install'\n}\n\ntask runE2eTests(type: Exec) {\n    dependsOn yarnInstall\n    workingDir = file(\"${project.projectDir}/definitions/test\")\n    commandLine 'yarn', 'test:' + System.getenv('ENVIRONMENT')\n}\n\ntask runE2eTestsNightly(type: Exec) {\n    dependsOn yarnInstall\n    workingDir = file(\"${project.projectDir}/definitions/test\")\n    commandLine 'yarn', 'test:nightly'\n}\n\ntask runAccessibilityTestsNightly(type: Exec) {\n    dependsOn yarnInstall\n    workingDir = file(\"${project.projectDir}/definitions/test\")\n    commandLine 'yarn', 'test:accessibility'\n}\n\ntask highLevelDataSetup(type: JavaExec) {\n    mainClass = \"uk.gov.hmcts.reform.sscs.config.HighLevelDataSetupApp\"\n    classpath += sourceSets.main.runtimeClasspath\n    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']\n}\n\ndef dbHost = System.env.JOB_SCHEDULER_DB_HOST ?: \"localhost\"\ndef dbPort = System.env.JOB_SCHEDULER_DB_PORT ?: 5432\ndef dbName = System.env.JOB_SCHEDULER_DB_NAME ?: \"sscsjobscheduler\"\ndef dbUser = System.env.JOB_SCHEDULER_DB_USERNAME ?: \"sscsjobscheduler\"\ndef dbPass = System.env.JOB_SCHEDULER_DB_PASSWORD ?: \"sscsjobscheduler\"\n"
        },
        "database": "PostgreSQL",
        "build_system": "Gradle",
        "config_files": {
            ".env": "SERVER_PORT=8008\n\n# Database\nexport DB_EXTERNAL_PORT=6432\n\n# Data store\nDATA_STORE_DB_USERNAME=ccd\nDATA_STORE_DB_PASSWORD=ccd\nDATA_STORE_DB_USE_SSL=false\n\n# Definition store\nDEFINITION_STORE_DB_USERNAME=ccd\nDEFINITION_STORE_DB_PASSWORD=ccd\nDEFINITION_STORE_DB_USE_SSL=false\n\n# User profile\nUSER_PROFILE_DB_USERNAME=ccd\nUSER_PROFILE_DB_PASSWORD=ccd\nUSER_PROFILE_DB_USE_SSL=false\n\n# IDAM Keys\nIDAM_KEY_CCD_DEFINITION_STORE=AAAAAAAAAAAAAAAA\nIDAM_KEY_CCD_DATA_STORE=AAAAAAAAAAAAAAAB\nIDAM_KEY_CCD_GATEWAY=AAAAAAAAAAAAAAAC\n\n# IDAM OAuth2 secrets\nOAUTH2_CLIENT_CCD_GATEWAY=OOOOOOOOOOOOOOOO\n\n# Microsoft Insights Key\nAPPINSIGHTS_INSTRUMENTATIONKEY=SomeRandomStringForLocalDocker\n\n# DM Store Storage Account\nDM_STORE_STORAGEACCOUNT_PRIMARY_CONNECTION_STRING=\"DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azure-storage-emulator-azurite:10000/devstoreaccount1\"\n\n# Work Allocation\n# export AZURE_SERVICE_BUS_CONNECTION_STRING=\"Endpoint=sb://ccd-servicebus-demo.servicebus.windows.net/;SharedAccessKeyName=SendAndRecieveCCDMessage;SharedAccessKey=REPLACEME\"\nexport AZURE_SERVICE_BUS_TOPIC_NAME=ccd-case-events\nexport AZURE_SERVICE_BUS_MESSAGE_AUTHOR=sscs-local-1\nexport AZURE_SERVICE_BUS_SUBSCRIPTION_NAME=ccd-case-events-ft\nexport AZURE_SERVICE_BUS_CCD_CASE_EVENTS_SUBSCRIPTION_NAME=ccd-case-events-ft\n\n#Launch Darkly Key\n# export LAUNCH_DARKLY_SDK_KEY=REPLACEME\n# export LAUNCH_DARKLY_ACCESS_TOKEN=REPLACEME\n\n# URLs\nexport WIREMOCK_URL=http://localhost:8084\nexport CCD_URL=http://localhost:4452/\nexport CCD_DEFINITION_STORE=http://localhost:4451\nexport CCD_CASE_MANAGEMENT_WEB_URL=http://localhost:4454\nexport XUI_URL=http://localhost:4454\nexport IDAM_URL=http://rse-idam-simulator:5062\nexport IDAM_API_URL=http://rse-idam-simulator:5062\nexport S2S_URL=http://localhost:4502/\nexport CCD_GW_URL=http://ccd-api-gateway\nexport OPEN_ID_IDAM_URL=http://host.docker.internal:5062\nexport ROLE_ASSIGNMENT_URL=http://localhost:4096\nexport CAMUNDA_URL=http://localhost:8999/engine-rest\nexport TASK_MANAGEMENT_API_URL=http://localhost:8087\nexport DM_STORE_URL=http://localhost:5005\nexport DOCUMENT_STORE_URL=http://localhost:5005\n\n#WA Users\nexport WA_SYSTEM_USERNAME=wa-system-user@fake.hmcts.net\nexport WA_SYSTEM_PASSWORD=System01\n\nexport CITIZEN_USERNAME=sscs-citizen@hmcts.net\nexport CITIZEN_PASSWORD=password\n\nexport SYSTEMUPDATE_USERNAME=system.update@hmcts.net\nexport SYSTEMUPDATE_PASSWORD=password\n\nexport SUPERUSER_USERNAME=super-user@example.com\nexport SUPERUSER_PASSWORD=password\n\nexport CASEWORKER_USERNAME=local.test@example.com\nexport CASEWORKER_PASSWORD=password\n\nexport CTSC_ADMINISTRATOR_USERNAME=ctsc-administrator@hmcts.net\nexport CTSC_ADMINISTRATOR_PASSWORD=password\n\nexport REGIONAL_CENTRE_ADMIN_USERNAME=regional-centre-admin@fake.hmcts.net\nexport REGIONAL_CENTRE_ADMIN_PASSWORD=password\n\nexport JUDGE_USERNAME=judge@example.com\nexport JUDGE_PASSWORD=password\n\nexport REGIONAL_CENTRE_ADMIN_USERNAME=regional-centre-admin@fake.hmcts.net\nexport REGIONAL_CENTRE_ADMIN_PASSWORD=password\n\nexport TRIBUNAL_MEMBER_1_USERNAME=tribunal-member-1@fake.hmcts.net\nexport TRIBUNAL_MEMBER_1_PASSWORD=password\n\nexport TRIBUNAL_MEMBER_2_USERNAME=tribunal-member-2@fake.hmcts.net\nexport TRIBUNAL_MEMBER_2_PASSWORD=password\n\nexport TRIBUNAL_MEMBER_3_USERNAME=tribunal-member-3@fake.hmcts.net\nexport TRIBUNAL_MEMBER_3_PASSWORD=password\n\nexport WA_CASEOFFICER_USERNAME=wa-caseofficer-user@fake.hmcts.net\nexport WA_CASEOFFICER_PASSWORD=System01\n\nexport TEST_WA_CASEOFFICER_A_USERNAME=wa-test-caseofficer-a@fake.hmcts.net\nexport TEST_WA_CASEOFFICER_A_PASSWORD=London01\n\nexport TEST_WA_CASEOFFICER_B_USERNAME=wa-test-caseofficer-b@fake.hmcts.net\nexport TEST_WA_CASEOFFICER_B_PASSWORD=London02\n\nexport TEST_WA_LAW_FIRM_USERNAME=wa-test-lawfirm@fake.hmcts.net\nexport TEST_WA_LAW_FIRM_PASSWORD=London03\n\nexport TEST_LAW_FIRM_SHARE_CASE_ORG_USERNAME=wa-test-lawfirm@fake.hmcts.net\nexport TEST_LAW_FIRM_SHARE_CASE_ORG_PASSWORD=London03\n\nexport TEST_WA_CASEOFFICER_PUBLIC_A_USERNAME=wa-caseofficer-public-a@fake.hmcts.net\nexport TEST_WA_CASEOFFICER_PUBLIC_A_PASSWORD=London01\n\nexport TEST_WA_CASEOFFICER_PUBLIC_B_USERNAME=wa-caseofficer-public-b@fake.hmcts.net\nexport TEST_WA_CASEOFFICER_PUBLIC_B_PASSWORD=London02\n\nexport TEST_WA_CASEOFFICER_PUBLIC_C_USERNAME=wa-caseofficer-public-c@fake.hmcts.net\nexport TEST_WA_CASEOFFICER_PUBLIC_C_PASSWORD=London03\n\nexport TEST_WA_CASEOFFICER_PUBLIC_D_USERNAME=wa-caseofficer-public-d@fake.hmcts.net\nexport TEST_WA_CASEOFFICER_PUBLIC_D_PASSWORD=London04\n\nexport TEST_WA_DLQ_PROCESS_USERNAME=wa-dlq-user@fake.hmcts.net\nexport TEST_WA_DLQ_PROCESS_PASSWORD=London05\n",
            "docker-compose.yml": "version: \"3.0\"\nservices:\n\n  ccd-user-profile-api:\n    image: hmcts/ccd-user-profile-api\n    environment:\n      USER_PROFILE_DB_HOST: ccd-user-profile-database\n      USER_PROFILE_DB_PORT: 5432\n      USER_PROFILE_DB_USERNAME:\n      USER_PROFILE_DB_PASSWORD:\n      USER_PROFILE_DB_USE_SSL:\n      USER_PROFILE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_definition,sscs\n      IDAM_S2S_URL: http://service-auth-provider-api:8080\n      REFORM_SERVICE_NAME: ccd-user-profile-api\n      REFORM_TEAM: ccd\n      REFORM_ENVIRONMENT: local\n      APPINSIGHTS_INSTRUMENTATIONKEY: key\n    ports:\n      - 4453:4453\n    depends_on:\n      - ccd-user-profile-database\n    links:\n      - ccd-user-profile-database\n      - service-auth-provider-api\n\n  ccd-user-profile-database:\n    image: \"docker.artifactory.reform.hmcts.net/ccd/ccd-user-profile-database:${BRANCH:-master}\"\n    healthcheck:\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    environment:\n      USER_PROFILE_DB_USERNAME:\n      USER_PROFILE_DB_PASSWORD:\n    ports:\n      - 5453:5432\n    volumes:\n      - ccd-user-profile-database-data:/var/lib/postgresql/data\n\n  ccd-definition-store-api:\n    image: hmcts/ccd-definition-store-api\n    environment:\n      DEFINITION_STORE_DB_HOST: ccd-definition-store-database\n      DEFINITION_STORE_DB_PORT: 5432\n      DEFINITION_STORE_DB_USERNAME:\n      DEFINITION_STORE_DB_PASSWORD:\n      DEFINITION_STORE_DB_USE_SSL:\n      DEFINITION_STORE_IDAM_KEY: \"${IDAM_KEY_CCD_DEFINITION_STORE}\"\n      DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,sscs\n      USER_PROFILE_HOST: http://ccd-user-profile-api:4453\n      IDAM_USER_URL: http://idam-api:8080\n      IDAM_S2S_URL: http://service-auth-provider-api:8080\n      REFORM_SERVICE_NAME: ccd-definition-store-api\n      REFORM_TEAM: ccd\n      REFORM_ENVIRONMENT: local\n      APPINSIGHTS_INSTRUMENTATIONKEY: key\n    ports:\n      - 4451:4451\n    depends_on:\n      - ccd-definition-store-database\n      - ccd-user-profile-api\n    links:\n      - ccd-definition-store-database\n      - ccd-user-profile-api\n      - idam-api\n      - service-auth-provider-api\n\n  ccd-definition-store-database:\n    image: \"docker.artifactory.reform.hmcts.net/ccd/ccd-definition-store-database:${BRANCH:-master}\"\n    healthcheck:\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    environment:\n      DEFINITION_STORE_DB_USERNAME:\n      DEFINITION_STORE_DB_PASSWORD:\n    ports:\n      - 5451:5432\n    volumes:\n      - ccd-definition-store-database-data:/var/lib/postgresql/data\n\n  ccd-data-store-api:\n    image: hmcts/ccd-data-store-api\n    environment:\n      DATA_STORE_DB_HOST: ccd-data-store-database\n      DATA_STORE_DB_PORT: 5432\n      DATA_STORE_DB_USERNAME:\n      DATA_STORE_DB_PASSWORD:\n      DATA_STORE_DB_USE_SSL:\n      DATA_STORE_IDAM_KEY: \"${IDAM_KEY_CCD_DATA_STORE}\"\n      DATA_STORE_TOKEN_SECRET: iuasbcuasdcbasdgcasdgcuysachjsacyasdgjcgasdj\n      DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,sscs\n      DEFINITION_STORE_HOST: http://ccd-definition-store-api:4451\n      USER_PROFILE_HOST: http://ccd-user-profile-api:4453\n      IDAM_USER_URL: http://idam-api:8080\n      IDAM_S2S_URL: http://service-auth-provider-api:8080\n      REFORM_SERVICE_NAME: ccd-data-store-api\n      REFORM_TEAM: ccd\n      REFORM_ENVIRONMENT: local\n      APPINSIGHTS_INSTRUMENTATIONKEY: key\n    ports:\n      - 4452:4452\n    depends_on:\n      - ccd-data-store-database\n      - ccd-user-profile-api\n      - ccd-definition-store-api\n    links:\n      - ccd-data-store-database\n      - ccd-user-profile-api\n      - ccd-definition-store-api\n      - idam-api\n      - service-auth-provider-api\n\n  ccd-data-store-database:\n    image: \"docker.artifactory.reform.hmcts.net/ccd/ccd-data-store-database:${BRANCH:-master}\"\n    healthcheck:\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    environment:\n      DATA_STORE_DB_USERNAME:\n      DATA_STORE_DB_PASSWORD:\n    ports:\n      - 5452:5432\n    volumes:\n      - ccd-data-store-database-data:/var/lib/postgresql/data\n\n  idam-api:\n    image: docker.artifactory.reform.hmcts.net/auth/idam-api:latest\n    healthcheck:\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    environment:\n      IDAM_SUPERUSER_EMAIL: ccd@hmcts.net\n      SPRING_DATASOURCE_URL: jdbc:postgresql://idam-database:5432/idam\n      SPRING_MAIL_HOST: smtp-server\n      IDAM_TESTING_SUPPORT_ENABLED: \"true\"\n      NOTIFY_API_KEY: AAAAAAAAAAAAAAAA\n      NOTIFY_CMC_ACTIVATE_USER_TEMPLATE: 76aa8695-64e8-4afd-ae13-bc8385302b1f\n      IDAM_SECRET: idam_test_secret\n      IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_CCD_GATEWAY: \"${OAUTH2_CLIENT_CCD_GATEWAY}\"\n      IDAM_CCD_WHITELIST: http://localhost:3451/oauth2redirect\n      NOTIFY: \"false\"\n      NOTIFY_CMC_WELCOME_USER_TEMPLATE: fake\n      NOTIFY_DIVORCE_WELCOME_USER_TEMPLATE: fake\n      NOTIFY_SSCS_WELCOME_USER_TEMPLATE: fake\n      NOTIFY_RESET_PASSWORD_TEMPLATE: \"${NOTIFY_RESET_PASSWORD_TEMPLATE:fake}\"\n      NOTIFY_PROBATE_ACTIVATE_USER_TEMPLATE: fake\n      NOTIFY_DIVORCE_ACTIVATE_USER_TEMPLATE: fake\n      NOTIFY_SSCS_ACTIVATE_USER_TEMPLATE: fake\n      NOTIFY_CCD_ACTIVATE_USER_TEMPLATE: fake\n      REFORM_SERVICE_NAME: idam-api\n      REFORM_TEAM: idam\n      REFORM_ENVIRONMENT: local\n      http_proxy:\n      https_proxy:\n      no_proxy:\n      IDAM_API_OAUTH2_CLIENT_CLIENT_SECRETS_SSCS: QM5RQQ53LZFOSIXJ\n      LOGGING_LEVEL_UK_GOV_HMCTS_IDAM: DEBUG\n    ports:\n      - 4501:8080\n    links:\n      - smtp-server\n      - idam-database\n    depends_on:\n      - idam-database\n      - smtp-server\n  idam-database:\n    image: docker.artifactory.reform.hmcts.net/auth/idam-database:latest\n    ports:\n      - 5501:5432\n    volumes:\n      - idam-database:/var/lib/postgresql/data\n\n  service-auth-provider-api:\n    image: hmcts/service-auth-provider-app\n    healthcheck:\n      interval: 10s\n      timeout: 10s\n      retries: 10\n    ports:\n      - 4502:8080\n    environment:\n      SERVER_PORT: 8080\n      AUTH_PROVIDER_SERVICE_SERVER_JWT_KEY: wThK0f0/lh3FlxFcL4xUWDMI5C1J9KyQBgXV4wseh1e5J1uYJIjvTvArHxQDrYoHJ23xFxjHkOnvNbR5dXRoxA==\n      AUTH_PROVIDER_SERVICE_SERVER_MICROSERVICE_KEYS_CCD_DATA: \"${IDAM_KEY_CCD_DATA_STORE}\"\n      AUTH_PROVIDER_SERVICE_SERVER_MICROSERVICE_KEYS_CCD_GW: \"${IDAM_KEY_CCD_GATEWAY}\"\n      AUTH_PROVIDER_SERVICE_SERVER_MICROSERVICE_KEYS_CCD_DEFINITION: \"${IDAM_KEY_CCD_DEFINITION_STORE}\"\n      AUTH_PROVIDER_SERVICE_TESTING_SUPPORT_ENABLED: \"true\"\n      AUTH_PROVIDER_SERVICE_SERVER_MICROSERVICE_KEYS_SSCS: \"${IDAM_KEY_CCD_GATEWAY}\"\n\n  smtp-server:\n    image: mailhog/mailhog\n    ports:\n      - 1025:1025\n\n  pdf-service-api:\n    image: docker.artifactory.reform.hmcts.net/reform/pdf-service-api\n    environment:\n      - JAVA_OPTS=-Xms8m -Xmx256m -Djava.security.egd=file:/dev/./urandom -XX:MaxMetaspaceSize=128m\n      - S2S_URL=http://service-auth-provider-api:8080\n      - ROOT_APPENDER\n      - JSON_CONSOLE_PRETTY_PRINT\n      - ROOT_LOGGING_LEVEL\n      - REFORM_SERVICE_NAME=pdf-service\n      - REFORM_TEAM\n      - REFORM_ENVIRONMENT\n    ports:\n      - 5500:5500\n    healthcheck:\n      retries: 40\n\n  tribunals-case-api:\n    build:\n      context: .\n      args:\n        - http_proxy\n        - https_proxy\n        - no_proxy\n    image: hmcts/tribunals-case-api\n    environment:\n      PDF_API_URL: http://pdf-service-api:5500\n      IDAM_API_URL: http://idam-api:8080\n      IDAM_S2S-AUTH_TOTP_SECRET: \"${IDAM_KEY_CCD_GATEWAY}\"\n      IDAM_S2S-AUTH_MICROSERVICE: sscs\n      IDAM_S2S-AUTH: http://service-auth-provider-api:8080\n      IDAM_SSCS_SYSTEMUPDATE_USER: SSCS_SYSTEM_UPDATE\n      IDAM_SSCS_SYSTEMUPDATE_PASSWORD: \"${IDAM_SSCS_SYSTEMUPDATE_PASSWORD:SSCS_SYSTEM_UPDATE}\"\n      IDAM_OAUTH2_CLIENT_ID: sscs\n      IDAM_OAUTH2_CLIENT_SECRET: QM5RQQ53LZFOSIXJ\n      IDAM_SSCS_URL: https://localhost:9000/poc\n      CORE_CASE_DATA_API_URL: http://ccd-data-store-api:4452\n      CORE_CASE_DATA_JURISDICTION_ID: SSCS\n      CORE_CASE_DATA_CASE_TYPE_ID: Benefit\n    ports:\n      - 8080:8080\n    depends_on:\n      - idam-api\n      - service-auth-provider-api\n      - pdf-service-api\n      - smtp-server\n      - ccd-data-store-api\n\nvolumes:\n  ccd-user-profile-database-data:\n  ccd-definition-store-database-data:\n  ccd-data-store-database-data:\n  idam-database:\n",
            "Dockerfile": " # renovate: datasource=github-releases depName=microsoft/ApplicationInsights-Java\nARG APP_INSIGHTS_AGENT_VERSION=3.7.1\nFROM hmctspublic.azurecr.io/base/java:21-distroless\n\nCOPY lib/applicationinsights.json /opt/app/\nCOPY build/libs/tribunals-case-api.jar /opt/app/\n\nEXPOSE 8008\n\nCMD [\"tribunals-case-api.jar\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".env",
            ".gitignore",
            "CODEOWNERS",
            "Dockerfile",
            "Jenkinsfile_CNP",
            "Jenkinsfile_nightly",
            "Jenkinsfile_parameterized",
            "LICENSE.md",
            "README.md",
            "audit.json",
            "build.gradle",
            "catalog-info.yaml",
            "cleanPreview.py",
            "docker-compose.yml",
            "docker-pactbroker-compose.yml",
            "gradle.properties",
            "gradlew",
            "gradlew.bat",
            "lombok.config",
            "settings.gradle"
        ],
        "folders": [
            ".github",
            "assets",
            "bin",
            "charts",
            "config",
            "definitions",
            "functional-output",
            "gradle",
            "infrastructure",
            "lib",
            "src"
        ]
    }
}