{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"my-app2\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@material-ui/core\": \"^4.11.0\",\n    \"@material-ui/icons\": \"^4.9.1\",\n    \"@testing-library/jest-dom\": \"^4.2.4\",\n    \"@testing-library/react\": \"^9.5.0\",\n    \"@testing-library/user-event\": \"^7.2.1\",\n    \"@types/node\": \"^14.11.2\",\n    \"axios\": \"^0.21.2\",\n    \"env-cmd\": \"^10.1.0\",\n    \"font-awesome\": \"^4.7.0\",\n    \"fontsource-roboto\": \"^3.0.3\",\n    \"jquery\": \"^3.4.1\",\n    \"node-sass\": \"^8.0.0\",\n    \"oidc-client\": \"^1.8.2\",\n    \"react\": \"^16.13.1\",\n    \"react-dom\": \"^16.13.1\",\n    \"react-router-bootstrap\": \"^0.25.0\",\n    \"react-router-dom\": \"^5.0.1\",\n    \"react-scripts\": \"5.0.1\",\n    \"reactstrap\": \"^8.0.0\"\n  },\n  \"scripts\": {\n    \"start\": \"env-cmd -f .env.localhost react-scripts start\",\n    \"start-localhost\": \"env-cmd -f .env.localhost react-scripts start\",\n    \"start-development\": \"env-cmd -f .env.development react-scripts start\",\n    \"start-docker\": \"env-cmd -f .env.docker react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"react-app\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "nginx/Dockerfile": "FROM nginx:latest\n\nCOPY nginx.conf /etc/nginx/nginx.conf",
            "nginx/nginx.conf": "worker_processes 1;\n\nevents { \n    worker_connections 1024; \n}\n\nhttp {\n    sendfile on;\n\n    server {\n        listen 80;\n\n        location / {\n            return 301 https://$host$request_uri;\n        }\n    }\n\n    server {\n        listen 443 ssl;\n\n        ssl_certificate /etc/ssl/certs/localhost.crt;\n        ssl_certificate_key /etc/ssl/private/localhost.key;\n\n        proxy_http_version 1.1;\n        proxy_cache_bypass $http_upgrade;\n        proxy_set_header   Upgrade $http_upgrade;\n        proxy_set_header   Connection keep-alive;\n        proxy_set_header   Host $host;\n        proxy_set_header   X-Real-IP $remote_addr;\n        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n        proxy_set_header   X-Forwarded-Host $server_name;\n\n        location /identity-server {\n            rewrite /identity-server/?(.*) /$1 break;\n            proxy_pass         https://identity-server;\n        }\n\n        location /accounts-api {\n            rewrite /accounts-api/?(.*) /$1 break;\n            proxy_pass         https://accounts-api;\n        }\n\n        location / {\n            proxy_pass         http://wallet-spa:3000;\n        }\n    }\n}"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile"
        ],
        "folders": []
    }
}