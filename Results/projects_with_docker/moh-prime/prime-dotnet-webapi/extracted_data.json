{
    "source_code_info": {
        "language": "Python",
        "framework": "Flask",
        "dependencies": {
            "requirements.txt": "blinker==1.8.2\ncached_property==1.5.1\nclick==8.1.7\ncolorama==0.4.6\nfactory-boy==2.12.0\nFlask==2.3.2\nFlask-APScheduler==1.11.0\nFlask-Caching==2.0.2\nFlask-Cors==4.0.1\nflask-compress==1.4.0\nFlask-Migrate==2.5.2\nflask-restx==1.1.0\nFlask-SQLAlchemy==3.0.5\nflask_jwt_oidc==0.1.5\nitsdangerous==2.2.0\nJinja2==3.1.4\nMarkupSafe==2.1.5\npostgres==3.0.0\npsycopg2==2.9.6\npsycopg2-binary==2.9.6\npy-healthcheck==1.10.1\npytest==4.5.0\npytest-cov==2.7.1\npython-dateutil==2.8.0\npython-dotenv==0.10.2\npython-magic==0.4.18\nredis==3.2.1\nrequests==2.32.0\nSQLAlchemy==2.0.19\nuwsgi==2.0.23\nuwsgitop==0.11\nWerkzeug==3.0.3\n"
        },
        "database": "PostgreSQL",
        "build_system": "pip",
        "config_files": {
            "prime-dotnet-webapi/appsettings.json": "{\n  \"Name\": \"local\",\n  \"FrontendUrl\": \"localhost:4200\",\n  \"BackendUrl\": \"http://localhost:5000/api\",\n  \"ConnectionStrings\": {\n    \"PrimeDatabase\": \"Host=localhost;Port=5432;Database=postgres;Username=postgres;Password=postgres\"\n  },\n  \"DocumentManager\": {\n    \"Url\": \"http://localhost:6001\",\n    \"ClientId\": \"PRIME-DOCUMENT-MANAGER\",\n    \"ClientSecret\": \"<redacted>\"\n  },\n  \"PrimeKeycloak\": {\n    \"RealmUrl\": \"https://common-logon-test.hlth.gov.bc.ca/auth/realms/moh_applications\",\n    \"KeycloakClientId\": \"PRIME-APPLICATION-LOCAL\",\n    \"AdministrationUrl\": \"https://placeholder.ca\",\n    \"AdministrationClientId\": \"keycloak-service-account\",\n    \"AdministrationClientSecret\": \"<redacted>\"\n  },\n  \"MohKeycloak\": {\n    \"RealmUrl\": \"https://common-logon-dev.hlth.gov.bc.ca/auth/realms/moh_applications\",\n    \"GisClientId\": \"GIS\",\n    \"GisUserRole\": \"GISUSER\",\n    \"AdministrationUrl\": \"https://user-management-dev.api.hlth.gov.bc.ca\",\n    \"AdministrationClientId\": \"PRIME-WEBAPP-ENROLLMENT-SERVICE\",\n    \"AdministrationClientSecret\": \"<redacted>\"\n  },\n  \"MailServer\": {\n    \"Url\": \"localhost\",\n    \"Port\": 1025\n  },\n  \"PharmanetApi\": {\n    \"Url\": \"Not used in local development\",\n    \"Username\": \"Not used in local development\",\n    \"Password\": \"Not used in local development\",\n    \"SslCertFilename\": \"Not used in local development\",\n    \"SslCertPassword\": \"Not used in local development\"\n  },\n  \"ChesApi\": {\n    \"Enabled\": false,\n    \"Url\": \"https://ches-dev.api.gov.bc.ca/api/v1\",\n    \"ClientId\": \"<redacted>\",\n    \"ClientSecret\": \"<redacted>\",\n    \"TokenUrl\": \"https://dev.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect\",\n    \"RetryWithinHours\": 48\n  },\n  \"VerifiableCredentialApi\": {\n    \"Url\": \"http://agent:8024/\",\n    \"Key\": \"<redacted>\",\n    \"WebhookKey\": \"<redacted>\",\n    \"SchemaName\": \"enrollee\",\n    \"SchemaVersion\": \"2.2\"\n  },\n  \"AddressAutocompleteApi\": {\n    \"Url\": \"https://ws1.postescanada-canadapost.ca/AddressComplete/Interactive/\",\n    \"Key\": \"<redacted>\"\n  },\n  \"MetabaseApi\": {\n    \"Url\": \"https://metabase-test.pharmanetenrolment.gov.bc.ca\",\n    \"Key\": \"<redacted>\",\n    \"DashboardId\": 4\n  },\n  \"PlrIntegration\": {\n    \"ClientCertThumbprint\": \"Not used in local development\"\n  },\n  \"LdapApi\": {\n    \"Url\": \"https://common-logon-dev.hlth.gov.bc.ca/ldap\"\n  },\n  \"Sentry\": {\n    \"Dsn\": \"\"\n  },\n  \"ProviderEnrolmentTeam\": {\n    \"EmailAddress\": \"local_providerteam1@email.com;local_providerteam2@email.com\"\n  }\n}",
            "docker-compose.yml": "version: \"3\"\n\nservices:\n###############################################################################\n###                     PostgreSQL Database Definition                      ###\n###############################################################################\n  postgres:\n    restart: always\n    container_name: primedb\n    image: postgres:10.6\n    environment:\n      POSTGRES_PASSWORD: postgres\n      POSTGRES_USERNAME: postgres\n      POSTGRES_DB: postgres\n    ports:\n      - \"5432:5432\"\n    volumes:\n      - local_postgres_data:/var/lib/postgresql/data\n    networks:\n      - prime-net\n\n###############################################################################\n###                           MongoDB Definition                            ###\n###############################################################################\n  mongo:\n    restart: always\n    container_name: prime-mongodb\n    image: mongo:3\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: root\n      MONGO_INITDB_ROOT_PASSWORD: prime\n    ports:\n      - 8081:8081\n    volumes:\n      - local_mongodb_data:/var/lib/mongodb/data\n    networks:\n      - prime-net\n\n###############################################################################\n###                            Redis Definition                             ###\n###############################################################################\n  redis:\n    image: redis:3.2-alpine\n    container_name: prime-redis\n    restart: always\n    command: redis-server --requirepass redis-password\n    ports:\n      - \"6379:6379\"\n    networks:\n      - prime-net\n\n###############################################################################\n##                      Verifiable Credential Agent Definition               ##\n###############################################################################\n  # agent:\n  #   image: bcgovimages/aries-cloudagent:py36-1.16-1_0.7.0\n  #   environment:\n  #     ACAPY_LABEL: ${AGENT_NAME}\n  #     ACAPY_ENDPOINT: ${AGENT_ENDPOINT}\n  #     ACAPY_GENESIS_URL: ${LEDGER_URL}/genesis\n  #     ACAPY_WALLET_NAME: ${AGENT_WALLET_NAME}\n  #     ACAPY_WALLET_TYPE: \"indy\"\n  #     ACAPY_WALLET_KEY: ${AGENT_WALLET_ENCRYPTION_KEY}\n  #     ACAPY_WALLET_SEED: ${AGENT_WALLET_SEED}\n  #     ACAPY_WALLET_STORAGE_TYPE: ${AGENT_WALLET_STORAGE_TYPE}\n  #     ACAPY_AUTO_PROVISION: \"true\"\n  #     ACAPY_WEBHOOK_URL: ${AGENT_WEBHOOK_URL}\n  #     ACAPY_LOG_LEVEL: ${AGENT_LOG_LEVEL}\n  #     ACAPY_AUTO_ACCEPT_INVITES: \"true\"\n  #     ACAPY_AUTO_ACCEPT_REQUESTS: \"true\"\n  #     ACAPY_AUTO_PING_CONNECTION: \"true\"\n  #     ACAPY_AUTO_RESPOND_MESSAGES: \"true\"\n  #     ACAPY_TAILS_SERVER_BASE_URL: ${TAILS_SERVER_URL}\n  #     AGENT_HTTP_IN_PORT: ${AGENT_HTTP_IN_PORT}\n  #     AGENT_WS_IN_PORT: ${AGENT_WS_IN_PORT}\n  #     AGENT_ADMIN_PORT: ${AGENT_ADMIN_PORT}\n  #     WALLET_HOST: ${WALLET_HOST}\n  #     WALLET_PORT: ${WALLET_PORT}\n  #     WALLET_USER: ${WALLET_USER}\n  #     WALLET_PASSWORD: ${WALLET_PASSWORD}\n  #   networks:\n  #     - prime-net\n  #   ports:\n  #     - ${AGENT_HTTP_IN_PORT}:${AGENT_HTTP_IN_PORT}\n  #     - ${AGENT_WS_IN_PORT}:${AGENT_WS_IN_PORT}\n  #     - ${AGENT_ADMIN_PORT}:${AGENT_ADMIN_PORT}\n  #   depends_on:\n  #     - wallet\n  #   entrypoint: /bin/bash\n  #   command: [\n  #       \"-c\",\n  #       \"curl -d '{\\\"seed\\\":\\\"${AGENT_WALLET_SEED}\\\", \\\"role\\\":\\\"ENDORSER\\\", \\\"alias\\\":\\\"${AGENT_WALLET_NAME}\\\"}' -X POST ${LEDGER_URL}/register; \\\n  #       sleep 5; \\\n  #       aca-py start \\\n  #       --inbound-transport http '0.0.0.0' ${AGENT_HTTP_IN_PORT} \\\n  #       --inbound-transport ws '0.0.0.0' ${AGENT_WS_IN_PORT} \\\n  #       --outbound-transport ws \\\n  #       --outbound-transport http \\\n  #       --wallet-storage-config '{\\\"url\\\":\\\"${WALLET_HOST}:${WALLET_PORT}\\\",\\\"max_connections\\\":5}' \\\n  #       --wallet-storage-creds '{\\\"account\\\":\\\"${WALLET_USER}\\\",\\\"password\\\":\\\"${WALLET_PASSWORD}\\\",\\\"admin_account\\\":\\\"${WALLET_USER}\\\",\\\"admin_password\\\":\\\"${WALLET_PASSWORD}\\\"}' \\\n  #       --admin '0.0.0.0' ${AGENT_ADMIN_PORT} \\\n  #       --${AGENT_ADMIN_MODE}\",\n  #     ]\n\n#######################################################################################\n##                      Verifiable Credential Wallet Definition                      ##\n#######################################################################################\n  # wallet:\n  #   image: postgres:12-alpine\n  #   environment:\n  #     POSTGRES_USER: DB_USER\n  #     POSTGRES_PASSWORD: DB_PASSWORD\n  #   networks:\n  #     - prime-net\n  #   ports:\n  #     - 5434:5432\n  #   volumes:\n  #     - wallet:/var/lib/postgresql/data\n\n###############################################################################\n##                        API Backend Definition                             ##\n###############################################################################\n  dotnet-webapi:\n    container_name: prime-webapi-backend\n    restart: always\n    build:\n      context: prime-dotnet-webapi/\n      args:\n        DB_HOST: primedb\n        PGPASSWORD: postgres\n        POSTGRESQL_ADMIN_PASSWORD: postgres\n        POSTGRESQL_USERNAME: postgres\n        POSTGRESQL_DATABASE: postgres\n        DB_CONNECTION_STRING: \"host=primedb;port=5432;database=postgres;username=postgres;password=postgres\"\n        ASPNETCORE_HTTPS_PORT: \"5001\"\n        ASPNETCORE_ENVIRONMENT: \"Development\"\n        ASPNETCORE_URLS: \"http://+:8080\"\n        DOTNET_CLI_HOME: \"/tmp/DOTNET_CLI_HOME\"\n    environment:\n      DB_HOST: primedb\n      PGPASSWORD: postgres\n      POSTGRESQL_ADMIN_PASSWORD: postgres\n      POSTGRESQL_USERNAME: postgres\n      POSTGRESQL_DATABASE: postgres\n      DB_CONNECTION_STRING: \"host=primedb;port=5432;database=postgres;username=postgres;password=postgres\"\n      ASPNETCORE_HTTPS_PORT: \"5001\"\n      ASPNETCORE_ENVIRONMENT: \"Development\"\n      ASPNETCORE_URLS: \"http://+:8080\"\n      DOTNET_CLI_HOME: \"/tmp/DOTNET_CLI_HOME\"\n    volumes:\n      - ./prime-dotnet-webapi/:/app\n      - prime-dotnet-webapi-bin:/app/bin\n      - prime-dotnet-webapi-obj:/app/obj\n      - ${APPDATA}/Microsoft/UserSecrets/2144bc8e-373b-4888-a0ca-b0ff7798bd81:/root/.microsoft/usersecrets/2144bc8e-373b-4888-a0ca-b0ff7798bd81\n      # Use the following instead if developing on Mac/Linux:\n      # - ${HOME}/.microsoft/usersecrets/2144bc8e-373b-4888-a0ca-b0ff7798bd81:/root/.microsoft/usersecrets/2144bc8e-373b-4888-a0ca-b0ff7798bd81\n    ports:\n      - \"5000:8080\"\n      - \"5001:5001\"\n    networks:\n      - prime-net\n    depends_on:\n      - postgres\n    entrypoint: /bin/bash\n    command: [\n      \"-c\",\n      \"echo Waiting for Database...;\n      sleep 15;\n      echo \\\"Running Database Migrations...\\\";\n      dotnet ef database update;\n      echo \\\"Starting API...\\\";\n      dotnet watch run --urls=http://+:8080\"\n    ]\n\n###############################################################################\n###                         Web Frontend Definition                         ###\n###############################################################################\n  nginx-angular:\n    container_name: prime-frontend\n    build:\n      context: ./prime-angular-frontend/\n      dockerfile: openshift.dockerfile\n      args:\n        KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}\n        KEYCLOAK_REALM: ${KEYCLOAK_REALM}\n        KEYCLOAK_URL: ${KEYCLOAK_URL}\n        REDIRECT_URL: ${REDIRECT_URL}\n        JWT_WELL_KNOWN_CONFIG: ${JWT_WELL_KNOWN_CONFIG}\n    # command: \"nginx -g 'daemon off;'\"\n    restart: always\n    ports:\n       - \"8080:8080\"\n       - \"4200:8080\"\n    expose:\n       - \"8080\"\n       - \"4200\"\n    networks:\n      - prime-net\n    depends_on:\n      - dotnet-webapi\n\n###############################################################################\n###                      Local SMTP Server Definition                       ###\n###############################################################################\n  mailhog:\n    container_name: mailhog\n    restart: always\n    image: mailhog/mailhog:latest\n    ports:\n      - 25:1025\n      - 1025:1025\n      - 8025:8025 # Visit localhost:8025 to see the list of captured emails\n    networks:\n      - prime-net\n\n###############################################################################\n###                     Database Inspection Definition                      ###\n###############################################################################\n  schema-spy:\n    container_name: schema-spy\n    build:\n      context: schemaspy/\n    image: openjdk:jre-alpine\n    ports:\n      - \"8069:8069\"\n      - \"80:8069\"\n    depends_on:\n      - postgres\n    networks:\n      - prime-net\n\n###############################################################################\n###                            Backup Definition                            ###\n###############################################################################\n  backup:\n    container_name: backup\n    build:\n      context: prime-database-backup\n    ports:\n      - 6432:5432\n      - 9081:8081\n    depends_on:\n      - postgres\n      - mongo\n    volumes:\n      - db_backup_data:/opt/backup\n      - local_postgres_data:/var/lib/postgresql/data\n    networks:\n      - prime-net\n\n###############################################################################\n###                       Document Manager Definition                       ###\n###############################################################################\n  document_manager_backend:\n    restart: always\n    container_name: document-manager-backend\n    build:\n      context: document-manager/backend\n    ports:\n      - 6001:6001\n    volumes:\n      - ./document-manager/backend/:/app/\n    depends_on:\n      - postgres\n      - redis\n      - document_manager_migrate\n    env_file: ./document-manager/backend/.env-local\n    networks:\n      - prime-net\n\n  document_manager_migrate:\n    restart: on-failure\n    container_name: document-manager-migrate\n    build:\n      context: document-manager/backend\n      dockerfile: Dockerfile.migrate\n    depends_on:\n      - postgres\n      - redis\n    volumes:\n      - ./document-manager/backend/:/app/\n    env_file: ./document-manager/backend/.env-local\n    networks:\n      - prime-net\n\n###############################################################################\n###                           Networks Definition                           ###\n###############################################################################\nnetworks:\n  prime-net:\n    driver: bridge\n\n###############################################################################\n###                            Volumes Definition                           ###\n###############################################################################\nvolumes:\n  local_postgres_data:\n  local_mongodb_data:\n  db_backup_data:\n  wallet:\n  prime-dotnet-webapi-bin:\n  prime-dotnet-webapi-obj:\n",
            "prime-dotnet-webapi/Dockerfile": "FROM mcr.microsoft.com/dotnet/sdk:5.0\nARG DB_HOST\nARG PGPASSWORD\nARG POSTGRESQL_ADMIN_PASSWORD\nARG POSTGRESQL_USERNAME\nARG POSTGRESQL_DATABASE\nARG DB_CONNECTION_STRING\nARG ASPNETCORE_HTTPS_PORT\nARG ASPNETCORE_ENVIRONMENT\nARG ASPNETCORE_URLS\n\nENV DB_HOST ${DB_HOST}\nENV PGPASSWORD ${POSTGRESQL_PASSWORD}\nENV POSTGRESQL_ADMIN_PASSWORD ${POSTGRESQL_PASSWORD}\nENV POSTGRESQL_USERNAME ${POSTGRESQL_USERNAME}\nENV POSTGRESQL_DATABASE ${POSTGRESQL_DATABASE}\nENV DB_CONNECTION_STRING \"host=${DB_HOST};port=5432;database=${POSTGRESQL_DATABASE};username=${POSTGRESQL_USERNAME};password=${POSTGRESQL_DATABASE}\"\nENV ASPNETCORE_HTTPS_PORT ${ASPNETCORE_HTTPS_PORT}\nENV ASPNETCORE_ENVIRONMENT ${ASPNETCORE_ENVIRONMENT}\nENV ASPNETCORE_URLS ${ASPNETCORE_URLS}\nENV DOTNET_CLI_HOME \"/tmp/DOTNET_CLI_HOME\"\n\n\nWORKDIR /vsdbg\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    unzip \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -sSL https://aka.ms/getvsdbgsh \\\n    | bash /dev/stdin -v latest -l /vsdbg \\\n    && apt-get update && apt-get install -y apt-utils libgdiplus libc6-dev \\\n    && apt install -y procps\n\nRUN dotnet tool install --global dotnet-ef --version 5.0.6\nENV PATH=\"${PATH}:/root/.dotnet/tools\"\n\nENV DOTNET_USE_POLLING_FILE_WATCHER 1\nENV API_PORT 8080\n\nWORKDIR /app\n\nEXPOSE 8080 5001 5000\n\nENTRYPOINT dotnet watch run --urls=http://+:8080\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "parse_api_response.py",
            "populate-practitioner-table.cron.yml",
            "populate-transaction-log-temp.cron.yml",
            "refresh-materialized-view.cron.yml",
            "rerun-enrollee-application-rules.cron.yml",
            "retrieve-pnet-logs.cron.yml",
            "retrieve-pnet-logs.sh",
            "send-renewal-emails.cron.yml",
            "send-unsigned-toa-emails.cron.yml",
            "update-email-statuses.cron.yml",
            "update-practitioner-table.cron.yml"
        ],
        "folders": []
    }
}