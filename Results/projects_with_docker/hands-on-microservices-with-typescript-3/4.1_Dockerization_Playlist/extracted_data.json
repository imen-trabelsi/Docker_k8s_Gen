{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"stage1\",\n  \"version\": \"1.0.0\",\n  \"description\": \"a sample service\",\n  \"main\": \"app.js\",\n  \"scripts\": {\n    \"test-mocha\": \"node_modules/.bin/ts-mocha ./test/*.ts\",\n    \"test-jest\": \"node_modules/.bin/jest\",\n    \"test-jasmine\": \"ts-node node_modules/jasmine/bin/jasmine ./test/*.ts\",\n    \"start\": \"node dist/app.js\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@types/cors\": \"^2.8.4\",\n    \"@types/express\": \"^4.16.0\",\n    \"@types/node\": \"^10.12.2\",\n    \"cors\": \"^2.8.5\",\n    \"express\": \"^4.16.4\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^4.1.7\",\n    \"@types/mocha\": \"^5.2.5\",\n    \"@types/request\": \"^2.48.1\",\n    \"chai\": \"^4.2.0\",\n    \"del\": \"^3.0.0\",\n    \"gulp\": \"^4.0.0\",\n    \"gulp-tslint\": \"^8.1.3\",\n    \"gulp-typescript\": \"^5.0.0-alpha.3\",\n    \"mocha\": \"^5.2.0\",\n    \"ts-mocha\": \"^2.0.0\",\n    \"request\": \"^2.88.0\",\n    \"ts-node\": \"^7.0.1\",\n    \"tslint\": \"^5.11.0\",\n    \"typescript\": \"^3.2.1\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "4.1_Dockerization/Playlist/config.json": "{\n    \"logLevel\": \"debug\"\n}",
            "4.1_Dockerization/docker-compose.yml": "version: '2'\nservices:\n\n  songs:\n    image: songs\n    ports:\n      - \"3000:3000\"\n    restart: always\n    networks:\n      - test-net\n    depends_on:\n      - mongo\n    \n  frontend:\n    image: frontend\n    ports:\n      - \"3001:3001\"\n    restart: always\n    networks:\n      - test-net\n    depends_on:\n      - songs\n      - playlist\n      \n  playlist:\n    image: playlist\n    ports:\n      - \"3002:3002\"\n    restart: always\n    networks:\n      - test-net\n        \n  mongo:\n    image: mongo\n    restart: always\n    ports:\n      - 3017:27017\n    #environment:\n      #MONGO_INITDB_ROOT_USERNAME: root\n      #MONGO_INITDB_ROOT_PASSWORD: example\n    networks:\n      - test-net\n\n  mongo-express:\n    image: mongo-express\n    restart: always\n    ports:\n      - 3018:8081\n    #environment:\n      #ME_CONFIG_MONGODB_ADMINUSERNAME: root\n      #ME_CONFIG_MONGODB_ADMINPASSWORD: example\n    networks:\n      - test-net\n  \n  nginx:\n    image: mynginx\n    networks:\n      - test-net\n    ports:\n      - 3080:3080\n    command: [nginx, '-g', 'daemon off;']\n    depends_on:\n      - songs\n      - playlist\n      - frontend\n  redis:\n    image: redis\n    ports:\n      - 3020:6379\n    command: redis-server --appendonly yes\n    restart: always\n    networks:\n      - test-net\n\n  etcd:\n    image: bitnami/etcd\n    ports:\n      - 3021:2379\n    restart: always\n    networks:\n      - test-net\n    environment:\n      - ALLOW_NONE_AUTHENTICATION=yes\n    volumes:\n      - etcd_data:/bitnami\n\nvolumes:\n  etcd_data:\n    driver: local\n\nnetworks:\n  test-net:\n    driver: bridge",
            "4.1_Dockerization/Playlist/Dockerfile": "FROM node:8.13-slim AS build-env\n\n# Create app directory\nRUN mkdir -p /opt/my-musik/\nWORKDIR /opt/my-musik/\nRUN npm install typescript -g\n\nCOPY ./gulpfile.js .\nCOPY ./package.json .\nCOPY ./tsconfig.json .\nCOPY ./tslint.json .\nCOPY ./config.json .\nCOPY ./Dockerfile .\n\n# Install app dependencies\nRUN npm install --no-optional\n\n# Bundle app source\nCOPY ./src ./src\n\nRUN \"node_modules/.bin/gulp\"\n\n\n# final stage\nFROM node:8.13-slim\nRUN mkdir -p /opt/my-musik/\nWORKDIR /opt/my-musik/\nCOPY --from=build-env /opt/my-musik/dist ./dist\nCOPY --from=build-env /opt/my-musik/package.json ./\nCOPY --from=build-env /opt/my-musik/config.json ./\nRUN npm install --no-optional --only=prod\n\nEXPOSE 3002\n\nCMD [ \"node\", \"dist/app.js\" ]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "4.0.0-dev",
            "Dockerfile",
            "config.json",
            "gulpfile.js",
            "package-lock.json",
            "package.json",
            "songs.json",
            "tsconfig.json",
            "tslint.json"
        ],
        "folders": [
            "src",
            "test"
        ]
    }
}