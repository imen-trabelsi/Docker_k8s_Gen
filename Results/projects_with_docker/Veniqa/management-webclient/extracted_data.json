{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"veniqa\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\",\n    \"dev-build\": \"vue-cli-service build --mode dev\",\n    \"lint\": \"vue-cli-service lint --fix\"\n  },\n  \"dependencies\": {\n    \"@fortawesome/fontawesome-svg-core\": \"^1.2.8\",\n    \"@fortawesome/free-solid-svg-icons\": \"^5.5.0\",\n    \"@fortawesome/vue-fontawesome\": \"^0.1.2\",\n    \"animate.css\": \"^3.7.0\",\n    \"autocomplete-vue\": \"^1.1.0\",\n    \"axios\": \"^0.18.1\",\n    \"bootstrap-vue\": \"^2.4.0\",\n    \"epic-spinners\": \"^1.0.4\",\n    \"lodash\": \"^4.17.15\",\n    \"luxon\": \"^1.23.0\",\n    \"moment\": \"^2.23.0\",\n    \"tiptap\": \"^1.7.0\",\n    \"tiptap-extensions\": \"^1.7.0\",\n    \"vue\": \"^2.5.17\",\n    \"vue-analytics\": \"^5.16.2\",\n    \"vue-croppa\": \"^1.3.8\",\n    \"vue-datetime\": \"^1.0.0-beta.10\",\n    \"vue-js-toggle-button\": \"^1.3.1\",\n    \"vue-notification\": \"^1.3.13\",\n    \"vue-router\": \"^3.0.1\",\n    \"vue-scrollto\": \"^2.13.0\",\n    \"vue-tag-selector\": \"^0.2.4\",\n    \"vuex\": \"^3.0.1\",\n    \"vuex-persist\": \"^2.0.0\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"^3.2.0\",\n    \"@vue/cli-plugin-eslint\": \"^3.2.0\",\n    \"@vue/cli-service\": \"^3.2.0\",\n    \"@vue/eslint-config-airbnb\": \"^4.0.0\",\n    \"babel-eslint\": \"^10.0.1\",\n    \"eslint\": \"^5.8.0\",\n    \"eslint-config-prettier\": \"^3.6.0\",\n    \"eslint-plugin-vue\": \"^5.0.0-0\",\n    \"node-sass\": \"^4.13.1\",\n    \"sass-loader\": \"^7.0.1\",\n    \"vue-template-compiler\": \"^2.5.17\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "management-webclient/.env": "VUE_APP_API_BASE_URL=http://localhost:4202/",
            "management-webclient/.env.production": "VUE_APP_API_BASE_URL=https://admin-server.veniqa.com",
            "docker-compose.yml": "version: '3'\nservices:\n  mongo: \n    build:\n      context: ./mongo\n      dockerfile: Dockerfile-mongo\n    ports:\n      - 27000:27017\n    volumes:\n      - \"dbconfig:/data/configdb\"\n      - \"dbdata:/data/db\"\n\n  redis:\n    image: \"redis:alpine\"\n    container_name: cache\n\n    command: redis-server --requirepass SOME_PASSWORD\n\n    ports:\n      - 6379:6379\n\n    environment:\n      - REDIS_REPLICATION_MODE=master\n\n  shopping-server:\n    build:\n      context: ./shopping-server\n      dockerfile: Dockerfile-local\n    volumes:\n      - './shopping-server:/app'\n      - '/app/node_modules'\n    ports:\n      - 4201:3000\n    depends_on: \n      - mongo\n      - redis\n    environment:\n      NODE_ENV: development\n      VENIQA_ENV: local\n      VENIQA_MONGODB_DB: veniqa-prod-db\n      VENIQA_MONGODB_URL: mongodb://mongo:27017/veniqa-prod-db\n      VENIQA_REDIS_HOST: redis://cache\n      VENIQA_REDIS_PORT: 6379\n      VENIQA_REDIS_PASSWORD: SOME_PASSWORD\n      VENIQA_REDIS_DB_NUMBER: 0\n      VENIQA_SESSION_SECRET_KEY: SECRET_KEY\n      VENIQA_CRYPTO_SECRET_KEY: CRYPTO_SECRET\n\n  management-server:\n    build:\n      context: ./management-server\n      dockerfile: Dockerfile-local\n    volumes:\n      - './management-server:/app'\n      - '/app/node_modules'\n    ports:\n      - 4202:3000\n    depends_on: \n      - mongo\n      - redis\n    environment:\n      NODE_ENV: development\n      VENIQA_ENV: local\n      VENIQA_MONGODB_DB: veniqa-prod-db\n      VENIQA_MONGODB_URL: mongodb://mongo:27017/veniqa-prod-db\n      VENIQA_REDIS_HOST: redis://cache\n      VENIQA_REDIS_PORT: 6379\n      VENIQA_REDIS_PASSWORD: SOME_PASSWORD\n      VENIQA_REDIS_DB_NUMBER: 1\n      VENIQA_SESSION_SECRET_KEY: SECRET_KEY\n      VENIQA_CRYPTO_SECRET_KEY: CRYPTO_SECRET\n\n  shopping-webclient:\n    build:\n      context: ./shopping-webclient\n      dockerfile: Dockerfile-local\n    volumes:\n      - './shopping-webclient:/app'\n      - '/app/node_modules'\n    ports:\n      - 5201:5201\n    \n  management-webclient:\n    build:\n      context: ./management-webclient\n      dockerfile: Dockerfile-local\n    volumes:\n      - './management-webclient:/app'\n      - '/app/node_modules'\n    ports:\n      - 5202:5202\n\nvolumes:\n  dbdata:\n  dbconfig:",
            "management-webclient/Dockerfile": "FROM node:lts-alpine\n\n# install simple http server for serving static content\nRUN npm install -g http-server\n\n# make the 'app' folder the current working directory\nWORKDIR /app\n\n# copy both 'package.json' and 'package-lock.json' (if available)\nCOPY package*.json ./\n\n# install project dependencies\nRUN npm install\n\n# copy project files and folders to the current working directory (i.e. 'app' folder)\nCOPY . .\n\n# build app for production with minification\nRUN npm run build\n\nEXPOSE 3000\n\n# http-server by default launches it on port 8080\nCMD [ \"http-server\", \"dist\" ]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".browserslistrc",
            ".dockerignore",
            ".editorconfig",
            ".env",
            ".env.dev",
            ".env.production",
            ".eslintrc.js",
            ".gitignore",
            ".prettierrc.js",
            "Dockerfile",
            "Dockerfile-local",
            "README.md",
            "babel.config.js",
            "package-lock.json",
            "package.json",
            "postcss.config.js",
            "vue.config.js"
        ],
        "folders": [
            "public",
            "src"
        ]
    }
}