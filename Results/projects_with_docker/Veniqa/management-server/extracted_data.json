{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"veniqa-admin-server\",\n  \"author\": \"Vivek Pandey (EJ)\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"build\": \"rimraf build/ && babel ./ --out-dir build/ --ignore ./node_modules,./.babelrc,./package.json,./npm-debug.log --copy-files\",\n    \"start\": \"npm install && npm run build && node ./build/bin/www\",\n    \"devstart\": \"nodemon --exec babel-node ./bin/www\"\n  },\n  \"dependencies\": {\n    \"@sendgrid/mail\": \"^6.3.1\",\n    \"aws-sdk\": \"^2.372.0\",\n    \"axios\": \"^0.18.1\",\n    \"bcrypt-nodejs\": \"0.0.3\",\n    \"compression\": \"^1.7.3\",\n    \"config\": \"^3.0.1\",\n    \"connect-redis\": \"^3.4.0\",\n    \"cookie-parser\": \"~1.4.3\",\n    \"cors\": \"^2.8.5\",\n    \"debug\": \"~2.6.9\",\n    \"dotenv\": \"^6.2.0\",\n    \"express\": \"~4.16.0\",\n    \"express-rate-limit\": \"^3.3.2\",\n    \"express-session\": \"^1.15.6\",\n    \"helmet\": \"^3.21.2\",\n    \"http-errors\": \"~1.6.2\",\n    \"http-status-codes\": \"1.3.0\",\n    \"jade\": \"~1.11.0\",\n    \"joi\": \"^14.3.0\",\n    \"jsonwebtoken\": \"^8.4.0\",\n    \"lodash\": \"^4.17.19\",\n    \"mongodb\": \"^3.5.2\",\n    \"mongoose\": \"^5.11.5\",\n    \"mongoose-paginate\": \"^5.0.3\",\n    \"morgan\": \"~1.9.0\",\n    \"nodemailer\": \"^4.7.0\",\n    \"passport\": \"^0.4.0\",\n    \"passport-local\": \"^1.0.0\",\n    \"rate-limit-redis\": \"^1.6.0\",\n    \"redis\": \"^2.8.0\",\n    \"tunnel-ssh\": \"^4.1.4\",\n    \"uuid\": \"^3.3.2\",\n    \"validator\": \"^10.9.0\",\n    \"winston\": \"^3.1.0\",\n    \"winston-mongodb\": \"^5.0.3\"\n  },\n  \"devDependencies\": {\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.3\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"nodemon\": \"1.18.7\",\n    \"rimraf\": \"^2.6.2\"\n  }\n}\n"
        },
        "database": "MongoDB",
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '3'\nservices:\n  mongo: \n    build:\n      context: ./mongo\n      dockerfile: Dockerfile-mongo\n    ports:\n      - 27000:27017\n    volumes:\n      - \"dbconfig:/data/configdb\"\n      - \"dbdata:/data/db\"\n\n  redis:\n    image: \"redis:alpine\"\n    container_name: cache\n\n    command: redis-server --requirepass SOME_PASSWORD\n\n    ports:\n      - 6379:6379\n\n    environment:\n      - REDIS_REPLICATION_MODE=master\n\n  shopping-server:\n    build:\n      context: ./shopping-server\n      dockerfile: Dockerfile-local\n    volumes:\n      - './shopping-server:/app'\n      - '/app/node_modules'\n    ports:\n      - 4201:3000\n    depends_on: \n      - mongo\n      - redis\n    environment:\n      NODE_ENV: development\n      VENIQA_ENV: local\n      VENIQA_MONGODB_DB: veniqa-prod-db\n      VENIQA_MONGODB_URL: mongodb://mongo:27017/veniqa-prod-db\n      VENIQA_REDIS_HOST: redis://cache\n      VENIQA_REDIS_PORT: 6379\n      VENIQA_REDIS_PASSWORD: SOME_PASSWORD\n      VENIQA_REDIS_DB_NUMBER: 0\n      VENIQA_SESSION_SECRET_KEY: SECRET_KEY\n      VENIQA_CRYPTO_SECRET_KEY: CRYPTO_SECRET\n\n  management-server:\n    build:\n      context: ./management-server\n      dockerfile: Dockerfile-local\n    volumes:\n      - './management-server:/app'\n      - '/app/node_modules'\n    ports:\n      - 4202:3000\n    depends_on: \n      - mongo\n      - redis\n    environment:\n      NODE_ENV: development\n      VENIQA_ENV: local\n      VENIQA_MONGODB_DB: veniqa-prod-db\n      VENIQA_MONGODB_URL: mongodb://mongo:27017/veniqa-prod-db\n      VENIQA_REDIS_HOST: redis://cache\n      VENIQA_REDIS_PORT: 6379\n      VENIQA_REDIS_PASSWORD: SOME_PASSWORD\n      VENIQA_REDIS_DB_NUMBER: 1\n      VENIQA_SESSION_SECRET_KEY: SECRET_KEY\n      VENIQA_CRYPTO_SECRET_KEY: CRYPTO_SECRET\n\n  shopping-webclient:\n    build:\n      context: ./shopping-webclient\n      dockerfile: Dockerfile-local\n    volumes:\n      - './shopping-webclient:/app'\n      - '/app/node_modules'\n    ports:\n      - 5201:5201\n    \n  management-webclient:\n    build:\n      context: ./management-webclient\n      dockerfile: Dockerfile-local\n    volumes:\n      - './management-webclient:/app'\n      - '/app/node_modules'\n    ports:\n      - 5202:5202\n\nvolumes:\n  dbdata:\n  dbconfig:",
            "management-server/Dockerfile": "FROM mhart/alpine-node:8\n\nWORKDIR /app\n\nCOPY package*.json /app/\n\nRUN npm install\n\nRUN npm run build\n\nCOPY . /app/\n\nEXPOSE 3000\n\nCMD [ \"npm\", \"start\" ]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".browserslistrc",
            ".dockerignore",
            ".editorconfig",
            ".env",
            ".env.dev",
            ".env.production",
            ".eslintrc.js",
            ".gitignore",
            ".prettierrc.js",
            "Dockerfile",
            "Dockerfile-local",
            "README.md",
            "babel.config.js",
            "package-lock.json",
            "package.json",
            "postcss.config.js",
            "vue.config.js"
        ],
        "folders": [
            "public",
            "src"
        ]
    }
}