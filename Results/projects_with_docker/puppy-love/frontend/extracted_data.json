{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.0.0\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve --proxy proxy.conf.json\",\n    \"build\": \"ng build --prod --build-optimizer\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^5.2.0\",\n    \"@angular/cdk\": \"^5.1.0\",\n    \"@angular/common\": \"^5.2.0\",\n    \"@angular/compiler\": \"^5.2.0\",\n    \"@angular/core\": \"^5.2.0\",\n    \"@angular/flex-layout\": \"^2.0.0-beta.12\",\n    \"@angular/forms\": \"^5.2.0\",\n    \"@angular/http\": \"^5.2.0\",\n    \"@angular/material\": \"^5.1.0\",\n    \"@angular/platform-browser\": \"^5.2.0\",\n    \"@angular/platform-browser-dynamic\": \"^5.2.0\",\n    \"@angular/router\": \"^5.2.0\",\n    \"@angular/service-worker\": \"^5.2.0\",\n    \"@swimlane/ngx-charts\": \"^7.0.1\",\n    \"core-js\": \"^2.4.1\",\n    \"d3\": \"^4.13.0\",\n    \"hammerjs\": \"^2.0.8\",\n    \"moment\": \"^2.20.1\",\n    \"rxjs\": \"^5.5.6\",\n    \"sjcl\": \"^1.0.8\",\n    \"zone.js\": \"^0.8.19\"\n  },\n  \"devDependencies\": {\n    \"@angular/cli\": \"1.6.7\",\n    \"@angular/compiler-cli\": \"^5.2.0\",\n    \"@angular/language-service\": \"^5.2.0\",\n    \"@types/jasmine\": \"~2.8.3\",\n    \"@types/jasminewd2\": \"~2.0.2\",\n    \"@types/node\": \"~6.0.60\",\n    \"codelyzer\": \"^4.0.1\",\n    \"jasmine-core\": \"~2.8.0\",\n    \"jasmine-spec-reporter\": \"~4.2.1\",\n    \"karma\": \"~2.0.0\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"^1.2.1\",\n    \"karma-jasmine\": \"~1.1.0\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"protractor\": \"~5.1.2\",\n    \"ts-node\": \"~4.1.0\",\n    \"tslint\": \"~5.9.1\",\n    \"typescript\": \"~2.5.3\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '3'\n\nservices:\n    mongo:\n      image: mongo\n      networks:\n        - mynet\n\n    results:\n      image: pclub/puppy-love:results\n      env_file:\n        - .backend.env\n      links:\n        - mongo\n      networks:\n        - mynet\n\n    signup:\n      image: pclub/puppy-love:signup\n      env_file:\n        - .backend.env\n        - .mail.env\n      ports:\n        - \"3001\"\n      links:\n        - mongo\n      networks:\n        - mynet\n\n    backend:\n      image: pclub/puppy-love:backend\n      env_file:\n        - .backend.env\n        - .pass.env\n      ports:\n        - \"34770:3000\"\n      links:\n        - mongo\n        - signup\n      networks:\n        - mynet\n\n    frontend:\n      image: pclub/puppy-love:frontend\n      ports:\n        - \"34771:80\"\n\nnetworks:\n  mynet:\n",
            "Dockerfile": "FROM golang:alpine as builder\n\nRUN apk --no-cache add openssl wget git\nENV GOPATH=/go\nRUN wget -O /usr/local/bin/dep https://github.com/golang/dep/releases/download/v0.4.1/dep-$(go env GOOS)-$(go env GOHOSTARCH) && chmod +x /usr/local/bin/dep\n\nRUN mkdir -p /go/src/github.com/pclubiitk/puppy-love\nWORKDIR /go/src/github.com/pclubiitk/puppy-love\n\nCOPY Gopkg.toml Gopkg.lock ./\n# copies the Gopkg.toml and Gopkg.lock to WORKDIR\n\nRUN dep ensure -v -vendor-only\n\nCOPY . .\nRUN go build\n\nFROM alpine\nRUN mkdir -p /go/bin\nCOPY --from=builder /go/src/github.com/pclubiitk/puppy-love/puppy-love /go/bin\n\nEXPOSE 3000\nENTRYPOINT [\"/go/bin/puppy-love\"]\n\n",
            "frontend/nginx.conf": "worker_processes 4;\n\nevents { worker_connections 1024;  }\n\nhttp {\n\tserver {\n\t\tinclude  /etc/nginx/mime.types;\n\t\tlisten 80;\n\t\tlocation / {\n\t\t\tindex index.html;\n\t\t\troot /src/dist;\n                        try_files $uri /index.html;\n\t\t}\n\t}\n}\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".angular-cli.json",
            ".dockerignore",
            ".editorconfig",
            ".gitignore",
            "Dockerfile",
            "README.md",
            "karma.conf.js",
            "nginx.conf",
            "package-lock.json",
            "package.json",
            "protractor.conf.js",
            "proxy.conf.json",
            "tsconfig.json",
            "tslint.json",
            "yarn.lock"
        ],
        "folders": [
            "e2e",
            "src"
        ]
    }
}