{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>3.3.4</version>\n\t\t<relativePath /> <!-- lookup parent from repository -->\n\t</parent>\n\n\t<groupId>com.lakesidemutual</groupId>\n\t<artifactId>spring-boot-admin</artifactId>\n\t<version>0.0.2-SNAPSHOT</version>\n\t<packaging>jar</packaging>\n\t<name>spring-boot-admin</name>\n\t<description>Spring Boot Admin</description>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>21</java.version>\n\n\t\t<!-- Other Dependency Versions -->\n\t\t<spring-boot-admin-starter-server.version>3.3.4</spring-boot-admin-starter-server.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<!-- Spring Dependencies -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>de.codecentric</groupId>\n\t\t\t<artifactId>spring-boot-admin-starter-server</artifactId>\n\t\t\t<version>${spring-boot-admin-starter-server.version}</version>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-dependency-plugin</artifactId>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>unpack</id>\n\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>unpack</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t<artifactItems>\n\t\t\t\t\t\t\t\t<artifactItem>\n\t\t\t\t\t\t\t\t\t<groupId>${project.groupId}</groupId>\n\t\t\t\t\t\t\t\t\t<artifactId>${project.artifactId}</artifactId>\n\t\t\t\t\t\t\t\t\t<version>${project.version}</version>\n\t\t\t\t\t\t\t\t</artifactItem>\n\t\t\t\t\t\t\t</artifactItems>\n\t\t\t\t\t\t</configuration>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n\t<repositories>\n\t\t<repository>\n\t\t\t<id>sonatype-nexus-snapshots</id>\n\t\t\t<name>Sonatype Nexus Snapshots</name>\n\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n\t\t\t<snapshots>\n\t\t\t\t<enabled>true</enabled>\n\t\t\t</snapshots>\n\t\t\t<releases>\n\t\t\t\t<enabled>false</enabled>\n\t\t\t</releases>\n\t\t</repository>\n\t</repositories>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "#\n# This is a docker-compose file to build and start all Lakeside Mutual\n# applications in a single command. Note that the applications will all\n# run in production mode, so there won't be any live-reloading of changes\n# or other development features. For development, we recommend to start\n# the applications invidually or use the run_all_applications scripts.\n#\n# To build the Docker images:\n#   docker-compose build\n#\n# To run the applications:\n#   docker-compose up\n#\n# Note that you might have to adjust the REACT_APP_ and VUE_APP environment\n# variables pointing to the backend services, depending on your hosting\n# environment. By default, they point to localhost, which is fine when running \n# the services locally. In a cloud deployment, these should be changed to the \n# public domainname of the respective backend service.\n# \n# To shut down the applications, simply terminate the previous command.\n#\n\nversion: \"3\"\nservices:\n  spring-boot-admin:\n    build: spring-boot-admin\n    image: lakesidemutual/spring-boot-admin\n    ports:\n      - \"9000:9000\"\n\n  customer-core:\n    build: customer-core\n    image: lakesidemutual/customer-core\n    environment:\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8110:8110\"\n\n  customer-management-backend:\n    build: customer-management-backend\n    image: lakesidemutual/customer-management-backend\n    depends_on:\n      - customer-core\n    environment:\n      - \"CUSTOMERCORE_BASEURL=http://customer-core:8110\"\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8100:8100\"\n\n  customer-management-frontend:\n    build: customer-management-frontend\n    image: lakesidemutual/customer-management-frontend\n    depends_on:\n      - customer-management-backend\n    environment:\n      - \"REACT_APP_CUSTOMER_SELF_SERVICE_BACKEND=http://localhost:8080\"\n      - \"REACT_APP_CUSTOMER_MANAGEMENT_BACKEND=http://localhost:8100\"\n      - \"REACT_APP_POLICY_MANAGEMENT_FRONTEND=http://localhost:3010\"\n    ports:\n      - \"3020:80\"\n\n  policy-management-backend:\n    build: policy-management-backend\n    image: lakesidemutual/policy-management-backend\n    depends_on:\n      - customer-core\n    environment:\n      - \"CUSTOMERCORE_BASEURL=http://customer-core:8110\"\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8090:8090\"\n      - \"61613:61613\"\n      - \"61616:61616\"\n\n  policy-management-frontend:\n    build: policy-management-frontend\n    image: lakesidemutual/policy-management-frontend\n    depends_on:\n      - policy-management-backend\n    environment:\n      - \"VUE_APP_POLICY_MANAGEMENT_BACKEND=http://localhost:8090\"\n    ports:\n      - \"3010:80\"\n\n  customer-self-service-backend:\n    build: customer-self-service-backend\n    image: lakesidemutual/customer-self-service-backend\n    depends_on:\n      - customer-core\n      - policy-management-backend\n    environment:\n      - \"CUSTOMERCORE_BASEURL=http://customer-core:8110\"\n      - \"POLICYMANAGEMENT_TCPBROKERBINDADDRESS=tcp://policy-management-backend:61616\"\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8080:8080\"\n\n  customer-self-service-frontend:\n    build: customer-self-service-frontend\n    image: lakesidemutual/customer-self-service-frontend\n    depends_on:\n      - customer-self-service-backend\n      - customer-management-backend\n      - policy-management-backend\n    environment:\n      - \"REACT_APP_CUSTOMER_SELF_SERVICE_BACKEND=http://localhost:8080\"\n      - \"REACT_APP_POLICY_MANAGEMENT_BACKEND=http://localhost:8090\"\n      - \"REACT_APP_CUSTOMER_MANAGEMENT_BACKEND=http://localhost:8100\"\n    ports:\n      - \"3000:80\"\n      \n  risk-management-server:\n    build: risk-management-server\n    image: lakesidemutual/risk-management-server\n    depends_on:\n      - policy-management-backend\n    environment:\n      - \"ACTIVEMQ_HOST=policy-management-backend\"\n      - \"ACTIVEMQ_PORT=61613\"\n    ports:\n      - \"50051:50051\"\n",
            "spring-boot-admin/Dockerfile": "FROM openjdk:21-slim-buster as build\n\nCOPY .mvn .mvn\nCOPY mvnw .\nCOPY pom.xml .\n\nRUN ./mvnw -B dependency:go-offline                          \n\nCOPY src src\n\nRUN ./mvnw -B package                                        \n\nFROM openjdk:21-slim-buster\n\nCOPY --from=build target/spring-boot-admin-0.0.2-SNAPSHOT.jar .\n\nEXPOSE 9000\n\nENTRYPOINT [\"java\", \"-jar\", \"spring-boot-admin-0.0.2-SNAPSHOT.jar\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "LICENSE.md",
            "README.md",
            "mvnw",
            "mvnw.cmd",
            "pom.xml"
        ],
        "folders": [
            ".mvn",
            "nginx-loadbalancing",
            "src"
        ]
    }
}