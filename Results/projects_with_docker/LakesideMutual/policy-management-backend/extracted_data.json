{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>3.3.4</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n\n    <groupId>com.lakesidemutual</groupId>\n    <artifactId>policy-management-backend</artifactId>\n    <version>0.0.2-SNAPSHOT</version>\n    <packaging>jar</packaging>\n    <name>policy-management-backend</name>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>21</java.version>\n\n        <!-- Other Dependency Versions -->\n        <domaindrivendesign-library.version>0.2.4</domaindrivendesign-library.version>\n        <jjwt-api.version>0.12.6</jjwt-api.version>\n        <springdoc-openapi-starter-webmvc-ui.version>2.6.0</springdoc-openapi-starter-webmvc-ui.version>\n        <spring-boot-admin-starter-client.version>3.3.3</spring-boot-admin-starter-client.version>\n        <commons-text.version>1.12.0</commons-text.version>\n        <e-adr.version>1.0.0</e-adr.version>\n        <!-- Test Dependency Versions -->\n        <archunit-junit5.version>1.3.0</archunit-junit5.version>\n    </properties>\n\n    <dependencies>\n        <!-- Spring Dependencies -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.hateoas</groupId>\n            <artifactId>spring-hateoas</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-activemq</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-context-support</artifactId>\n        </dependency>\n\n        <!-- Other Dependencies -->\n        <dependency>\n            <groupId>org.microservice-api-patterns</groupId>\n            <artifactId>domaindrivendesign-library</artifactId>\n            <version>${domaindrivendesign-library.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt-api</artifactId>\n            <version>${jjwt-api.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springdoc</groupId>\n            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\n            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>de.codecentric</groupId>\n            <artifactId>spring-boot-admin-starter-client</artifactId>\n            <version>${spring-boot-admin-starter-client.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-text</artifactId>\n            <version>${commons-text.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.github.adr</groupId>\n            <artifactId>e-adr</artifactId>\n            <version>${e-adr.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.activemq</groupId>\n            <artifactId>activemq-broker</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.activemq</groupId>\n            <artifactId>activemq-stomp</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.activemq</groupId>\n            <artifactId>activemq-kahadb-store</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.quartz-scheduler</groupId>\n            <artifactId>quartz</artifactId>\n        </dependency>\n\n        <!-- Test Dependencies -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.tngtech.archunit</groupId>\n            <artifactId>archunit-junit5</artifactId>\n            <version>${archunit-junit5.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>build-info</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>unpack</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>unpack</goal>\n                        </goals>\n                        <configuration>\n                            <artifactItems>\n                                <artifactItem>\n                                    <groupId>${project.groupId}</groupId>\n                                    <artifactId>${project.artifactId}</artifactId>\n                                    <version>${project.version}</version>\n                                </artifactItem>\n                            </artifactItems>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <repositories>\n        <repository>\n            <id>sonatype-nexus-snapshots</id>\n            <name>Sonatype Nexus Snapshots</name>\n            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n        </repository>\n        <repository>\n            <id>spring-snapshots</id>\n            <name>Spring Snapshots</name>\n            <url>https://repo.spring.io/snapshot</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>spring-milestones</id>\n            <name>Spring Milestones</name>\n            <url>https://repo.spring.io/milestone</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>jcenter-snapshots</id>\n            <name>jcenter</name>\n            <url>https://jcenter.bintray.com/</url>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>spring-snapshots</id>\n            <name>Spring Snapshots</name>\n            <url>https://repo.spring.io/snapshot</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </pluginRepository>\n        <pluginRepository>\n            <id>spring-milestones</id>\n            <name>Spring Milestones</name>\n            <url>https://repo.spring.io/milestone</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n\n\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "#\n# This is a docker-compose file to build and start all Lakeside Mutual\n# applications in a single command. Note that the applications will all\n# run in production mode, so there won't be any live-reloading of changes\n# or other development features. For development, we recommend to start\n# the applications invidually or use the run_all_applications scripts.\n#\n# To build the Docker images:\n#   docker-compose build\n#\n# To run the applications:\n#   docker-compose up\n#\n# Note that you might have to adjust the REACT_APP_ and VUE_APP environment\n# variables pointing to the backend services, depending on your hosting\n# environment. By default, they point to localhost, which is fine when running \n# the services locally. In a cloud deployment, these should be changed to the \n# public domainname of the respective backend service.\n# \n# To shut down the applications, simply terminate the previous command.\n#\n\nversion: \"3\"\nservices:\n  spring-boot-admin:\n    build: spring-boot-admin\n    image: lakesidemutual/spring-boot-admin\n    ports:\n      - \"9000:9000\"\n\n  customer-core:\n    build: customer-core\n    image: lakesidemutual/customer-core\n    environment:\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8110:8110\"\n\n  customer-management-backend:\n    build: customer-management-backend\n    image: lakesidemutual/customer-management-backend\n    depends_on:\n      - customer-core\n    environment:\n      - \"CUSTOMERCORE_BASEURL=http://customer-core:8110\"\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8100:8100\"\n\n  customer-management-frontend:\n    build: customer-management-frontend\n    image: lakesidemutual/customer-management-frontend\n    depends_on:\n      - customer-management-backend\n    environment:\n      - \"REACT_APP_CUSTOMER_SELF_SERVICE_BACKEND=http://localhost:8080\"\n      - \"REACT_APP_CUSTOMER_MANAGEMENT_BACKEND=http://localhost:8100\"\n      - \"REACT_APP_POLICY_MANAGEMENT_FRONTEND=http://localhost:3010\"\n    ports:\n      - \"3020:80\"\n\n  policy-management-backend:\n    build: policy-management-backend\n    image: lakesidemutual/policy-management-backend\n    depends_on:\n      - customer-core\n    environment:\n      - \"CUSTOMERCORE_BASEURL=http://customer-core:8110\"\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8090:8090\"\n      - \"61613:61613\"\n      - \"61616:61616\"\n\n  policy-management-frontend:\n    build: policy-management-frontend\n    image: lakesidemutual/policy-management-frontend\n    depends_on:\n      - policy-management-backend\n    environment:\n      - \"VUE_APP_POLICY_MANAGEMENT_BACKEND=http://localhost:8090\"\n    ports:\n      - \"3010:80\"\n\n  customer-self-service-backend:\n    build: customer-self-service-backend\n    image: lakesidemutual/customer-self-service-backend\n    depends_on:\n      - customer-core\n      - policy-management-backend\n    environment:\n      - \"CUSTOMERCORE_BASEURL=http://customer-core:8110\"\n      - \"POLICYMANAGEMENT_TCPBROKERBINDADDRESS=tcp://policy-management-backend:61616\"\n      - \"SPRING_BOOT_ADMIN_CLIENT_URL=http://spring-boot-admin:9000\"\n    ports:\n      - \"8080:8080\"\n\n  customer-self-service-frontend:\n    build: customer-self-service-frontend\n    image: lakesidemutual/customer-self-service-frontend\n    depends_on:\n      - customer-self-service-backend\n      - customer-management-backend\n      - policy-management-backend\n    environment:\n      - \"REACT_APP_CUSTOMER_SELF_SERVICE_BACKEND=http://localhost:8080\"\n      - \"REACT_APP_POLICY_MANAGEMENT_BACKEND=http://localhost:8090\"\n      - \"REACT_APP_CUSTOMER_MANAGEMENT_BACKEND=http://localhost:8100\"\n    ports:\n      - \"3000:80\"\n      \n  risk-management-server:\n    build: risk-management-server\n    image: lakesidemutual/risk-management-server\n    depends_on:\n      - policy-management-backend\n    environment:\n      - \"ACTIVEMQ_HOST=policy-management-backend\"\n      - \"ACTIVEMQ_PORT=61613\"\n    ports:\n      - \"50051:50051\"\n",
            "policy-management-backend/Dockerfile": "FROM openjdk:21-slim-buster as build\n\nCOPY .mvn .mvn\nCOPY mvnw .\nCOPY pom.xml .\n\nRUN ./mvnw -B dependency:go-offline                          \n\nCOPY src src\n\nRUN ./mvnw -B package                                        \n\nFROM openjdk:21-slim-buster\n\nCOPY --from=build target/policy-management-backend-0.0.2-SNAPSHOT.jar .\n\nEXPOSE 8090\nEXPOSE 61613\nEXPOSE 61616\n\nENTRYPOINT [\"java\", \"-jar\", \"policy-management-backend-0.0.2-SNAPSHOT.jar\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "LICENSE.md",
            "README.md",
            "mvnw",
            "mvnw.cmd",
            "pom.xml"
        ],
        "folders": [
            ".mvn",
            "nginx-loadbalancing",
            "src"
        ]
    }
}