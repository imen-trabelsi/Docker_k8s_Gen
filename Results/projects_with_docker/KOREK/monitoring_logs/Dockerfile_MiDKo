# Use base image
FROM ubuntu:bionic

# Copy the current directory contents into the container
COPY . /app
COPY log_nginx.sh /log_nginx.sh

# Set the working directory in image
WORKDIR /app

# Run installation and clean up after
RUN apt-get update && apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/* && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && \
    apt-key fingerprint 0EBFCD88 && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" && \
    apt-get update && apt-get install -y docker-ce docker-ce-cli containerd.io && \
    rm -rf /usr/share/doc/* && \
    rm -rf /usr/share/info/* && \
    rm -rf /tmp/* && \

# Install dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Ensure the Python output is sent straight to terminal without being buffered
ENV PYTHONUNBUFFERED 1

# Expose port for the application
EXPOSE <YOUR_APP_PORT_HERE>

# Make nginx script executable
RUN chmod +x /log_nginx.sh

# Run the command on container startup
CMD ["bash", "-c", "/log_nginx.sh, &, tail, -f, /dev/null"]
