{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.example</groupId>\n    <artifactId>friend-service</artifactId>\n    <version>0.0.2-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <name>friend-service</name>\n\n    <parent>\n        <groupId>io.example</groupId>\n        <artifactId>event-sourcing-microservices-example</artifactId>\n        <version>0.0.1-SNAPSHOT</version>\n        <relativePath>../</relativePath>\n    </parent>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-stream-kafka</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-r2dbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.liquibase</groupId>\n            <artifactId>liquibase-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.testcontainers</groupId>\n            <artifactId>postgresql</artifactId>\n            <version>1.9.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.testcontainers</groupId>\n            <artifactId>kafka</artifactId>\n            <version>1.9.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.projectreactor</groupId>\n            <artifactId>reactor-core</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>io.projectreactor</groupId>\n            <artifactId>reactor-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-webflux</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.sun.jersey</groupId>\n                    <artifactId>jersey-client</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.sun.jersey</groupId>\n                    <artifactId>jersey-core</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.sun.jersey.contribs</groupId>\n                    <artifactId>jersey-apache-client4</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>r2dbc-postgresql</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.kafka</groupId>\n            <artifactId>spring-kafka-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.projectreactor.addons</groupId>\n            <artifactId>reactor-extra</artifactId>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>com.spotify</groupId>\n                <artifactId>dockerfile-maven-plugin</artifactId>\n                <version>1.4.9</version>\n                <executions>\n                    <execution>\n                        <id>default</id>\n                        <goals>\n                            <goal>build</goal>\n                            <goal>push</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <repository>${docker.user}/${project.name}</repository>\n                    <tag>${project.version}</tag>\n                    <buildArgs>\n                        <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>\n                    </buildArgs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>11</source>\n                    <target>11</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n\n</project>\n"
        },
        "database": "PostgreSQL",
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: \"3.3\"\n\nservices:\n\n  discovery-service:\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n      PROMETHEUS_URL: \"prometheus-pushgateway:9091\"\n    image: hyperskale/discovery-service:0.0.1-SNAPSHOT\n    ports:\n      - \"8761:8761/tcp\"\n    deploy:\n      replicas: 1\n\n  edge-service:\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n      PROMETHEUS_URL: \"prometheus-pushgateway:9091\"\n    image: hyperskale/edge-service:0.0.1-SNAPSHOT\n    ports:\n      - \"9000:9000/tcp\"\n    deploy:\n      replicas: 1\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: '1000mb'\n        reservations:\n          cpus: '0.1'\n          memory: '250mb'\n\n  friend-service:\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n      PROMETHEUS_URL: \"prometheus-pushgateway:9091\"\n    image: hyperskale/friend-service:0.0.2-SNAPSHOT\n    deploy:\n      replicas: 1\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: '1000mb'\n        reservations:\n          cpus: '0.1'\n          memory: '250mb'\n\n  user-service:\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n      PROMETHEUS_URL: \"prometheus-pushgateway:9091\"\n    image: hyperskale/user-service:0.0.2-SNAPSHOT\n    deploy:\n      replicas: 1\n      resources:\n        limits:\n          memory: '1000mb'\n          cpus: '0.5'\n        reservations:\n          cpus: '0.1'\n          memory: '250mb'\n\n  recommendation-service:\n    environment:\n      SPRING_PROFILES_ACTIVE: docker\n      PROMETHEUS_URL: \"prometheus-pushgateway:9091\"\n    image: hyperskale/recommendation-service:0.0.1-SNAPSHOT\n    deploy:\n      replicas: 1\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: '1000mb'\n        reservations:\n          cpus: '0.1'\n          memory: '250mb'\n\n  kafka:\n    environment:\n      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092\n      KAFKA_BROKER_ID: 1\n      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181\n    image: confluentinc/cp-kafka:latest\n    ports:\n      - \"29092:29092/tcp\"\n    deploy:\n      replicas: 1\n\n  zookeeper:\n    environment:\n      ZOOKEEPER_CLIENT_PORT: 32181\n      ZOOKEEPER_TICK_TIME: 2000\n    image: confluentinc/cp-zookeeper:latest\n    ports:\n      - \"32181:32181/tcp\"\n    deploy:\n      replicas: 1\n\n  friend-db:\n    image: postgres:latest\n    environment:\n      POSTGRES_PASSWORD: example\n    ports:\n      - \"54321:5432/tcp\"\n    deploy:\n      replicas: 1\n\n  user-db:\n    image: postgres:latest\n    environment:\n      POSTGRES_PASSWORD: example\n    ports:\n      - \"54322:5432/tcp\"\n    deploy:\n      replicas: 1\n\n  neo4j:\n    environment:\n      NEO4J_AUTH: none\n    image: neo4j:3.5.0\n    ports:\n      - \"7474:7474/tcp\"\n      - \"7687:7687/tcp\"\n    deploy:\n      replicas: 1\n",
            "Dockerfile": "FROM openjdk:8-alpine\n\nRUN wget -O /usr/local/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64 && \\\nchmod 755 /usr/local/bin/dumb-init\n\nRUN mkdir -p /opt/app\n\nWORKDIR /opt/app\n\nEXPOSE 8080\n\nCMD [\"-jar\", \"event-sourcing-microservices-basics.jar\"]\n\nENTRYPOINT [\"/usr/local/bin/dumb-init\", \"java\", \"-XX:+UnlockExperimentalVMOptions\", \"-XX:+UseCGroupMemoryLimitForHeap\", \"-Xmx256m\", \"-Djava.security.egd=file:/dev/urandom\"]\n\nCOPY target/event-sourcing-microservices-basics.jar event-sourcing-microservices-basics.jar\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}