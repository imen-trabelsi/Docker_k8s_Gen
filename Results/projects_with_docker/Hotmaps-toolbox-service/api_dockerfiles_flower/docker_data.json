{
    "docker_info": {
        "base_image": "geographica/gdal2:latest",
        "multi_stage_build": false,
        "exposed_ports": [
            "5000"
        ],
        "user": [],
        "labels": [],
        "health_checks": [],
        "build_args": [],
        "envs": [
            "ENV CELERY_BROKER_URL amqp://admin:mypass@rabbit:5672/",
            "ENV CELERY_RESULT_BACKEND redis://redis:6379/0",
            "ENV C_FORCE_ROOT true"
        ],
        "copy_instructions": [
            "WORKDIR /api"
        ],
        "execution": [
            {
                "command": "entrypoint",
                "arguments": [
                    "celery",
                    "-A",
                    "celery_worker.celery",
                    "worker",
                    "--loglevel=info"
                ]
            }
        ],
        "run": [
            [
                "mkdir -p /data",
                "VOLUME /data"
            ],
            [
                "mkdir -p /var/hotmaps/users",
                ""
            ],
            [
                "apt-get update && apt-get dist-upgrade -y && apt-get autoremove -y",
                ""
            ],
            [
                "apt-get update \\",
                "&& apt-get upgrade -y",
                "&& apt-get install -y",
                "build-essential",
                "software-properties-common",
                "wget",
                "gdal-bin",
                "ca-certificates",
                "curl",
                "gcc",
                "git",
                "libpq-dev",
                "libgeos-dev",
                "libgdal-dev",
                "python-gdal",
                "make",
                "python-pip",
                "ssh",
                "&& apt-get autoremove",
                "&& apt-get clean"
            ],
            [
                "mkdir -p /data",
                "COPY .. /api"
            ],
            [
                "ls",
                ""
            ],
            [
                "apt-get update \\",
                "&& apt-get upgrade -y",
                "&& apt-get install -y",
                "build-essential",
                "software-properties-common",
                "wget"
            ],
            [
                "wget https://bootstrap.pypa.io/get-pip.py",
                "RUN python3 get-pip.py"
            ],
            [
                "pip3 install gunicorn",
                ""
            ],
            [
                "pip3 install -r requirements/flower/requirements.txt",
                "# Install required python modules"
            ]
        ]
    }
}