{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.alibaba.edas</groupId>\n    <artifactId>sc-zuul</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.0.RELEASE</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>1.8</java.version>\n        <spring-cloud.version>Greenwich.SR3</spring-cloud.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n            <version>2.1.1.RELEASE</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n\n\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: \"3\"\nservices:\n  nacos:\n    hostname: nacos\n    image: nacos/nacos-server:latest\n    container_name: nacos-standalone\n    environment:\n      - PREFER_HOST_MODE=hostname\n      - MODE=standalone\n    ports:\n      - \"8848:8848\"\n\n  #  currency-mysql:\n  #    image: mysql:5.6\n  #    ports:\n  #      - 3306\n  #    command: [\n  #      --character-set-server=utf8mb4,\n  #      --collation-server=utf8mb4_unicode_ci\n  #    ]\n  #    environment:\n  #      MYSQL_ROOT_PASSWORD: currencyservice\n  #      MYSQL_DATABASE: currency\n\n  checkout-mysql:\n    image: mysql:5.6\n    ports:\n      - 3306\n    command: [\n      --character-set-server=utf8mb4,\n      --collation-server=utf8mb4_unicode_ci\n    ]\n    environment:\n      MYSQL_ROOT_PASSWORD: checkoutservice\n      MYSQL_DATABASE: checkout\n\n  product-mysql:\n    image: mysql:5.6\n    ports:\n      - 3306\n    command: [\n      --character-set-server=utf8mb4,\n      --collation-server=utf8mb4_unicode_ci\n    ]\n    environment:\n      MYSQL_ROOT_PASSWORD: productservice\n      MYSQL_DATABASE: product\n\n  cart-redis:\n    image: redis\n    ports:\n      - 6379:6379\n\n  frontend:\n    build: ./src/frontend\n    image: frontend:1.0.0-SNAPSHOT\n    container_name: frontend\n    #    restart: always\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - \"nacos\"\n\n  cartservice:\n    build: ./src/cartservice\n    image: cartservice:1.0.0-SNAPSHOT\n    container_name: cartservice\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    depends_on:\n      - \"nacos\"\n      - \"cart-redis\"\n\n  checkoutservice:\n    build: ./src/checkoutservice\n    image: checkoutservice:1.0.0-SNAPSHOT\n    container_name: checkoutservice\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    depends_on:\n      - \"nacos\"\n      - \"checkout-mysql\"\n\n  prdoctservice:\n    build: ./src/productservice\n    image: productservice:1.0.0-SNAPSHOT\n    container_name: productservice\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    depends_on:\n      - \"nacos\"\n      - \"product-mysql\"\n\n  loadgenerator:\n    build: ./src/loadgenerator\n    image: registry.cn-shanghai.aliyuncs.com/microservice_demo/loadgenerator:1.0.0-SNAPSHOT\n    container_name: loadgenerator\n\n#  adservice:\n#    build: ./src/adservice\n#    image: adservice:1.0.0-SNAPSHOT\n#    container_name: adservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#\n#\n#  currencyservice:\n#    build: ./src/productservice\n#    image: currencyservice:1.0.0-SNAPSHOT\n#    container_name: currencyservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  emailservice:\n#    build: ./src/emailservice\n#    image: emailservice:1.0.0-SNAPSHOT\n#    container_name: emailservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  paymentservice:\n#    build: ./src/paymentservice\n#    image: paymentservice:1.0.0-SNAPSHOT\n#    container_name: paymentservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  recomendationservice:\n#    build: ./src/recomendationservice\n#    image: recomendationservice:1.0.0-SNAPSHOT\n#    container_name: recomendationservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  shippingservice:\n#    build: ./src/shippingservice\n#    image: shippingservice:1.0.0-SNAPSHOT\n#    container_name: shippingservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"",
            "microservice-doc-demo/traffic-management/sc-zuul/Dockerfile": "FROM openjdk:8-jre-alpine\nWORKDIR /app\nCOPY /target/sc-zuul-1.0-SNAPSHOT.jar /app\n\nEXPOSE 8080\nENTRYPOINT [\"sh\", \"-c\"]\nCMD [\"java -jar /app/sc-zuul-1.0-SNAPSHOT.jar\"]"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "build.sh",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}