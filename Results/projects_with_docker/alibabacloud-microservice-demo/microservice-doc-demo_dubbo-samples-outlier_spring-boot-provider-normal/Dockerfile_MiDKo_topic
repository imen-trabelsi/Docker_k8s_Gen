# Use openjdk:8-jre-alpine as base image as specified by the user.
FROM openjdk:8-jre-alpine

# Set working directory in the docker image
WORKDIR /app

# Copy maven executable to the image
COPY mvnw .
COPY .mvn .mvn

# Copy pom.xml and source code to the image
COPY pom.xml .
COPY src src

# Look in the .m2 folders in the system and download dependencies if not found there
RUN ./mvnw dependency:go-offline -B

# Build the project and clean the created .jar files from target folder
RUN ./mvnw package -DskipTests

# Set arguments provided by the user.
ARG JAR_FILE=target/*.jar

# Copy the assembled jar file to the image
COPY ${JAR_FILE} app.jar

# Expose port 8080 to outer networks
EXPOSE 8080

# Clean up project files
RUN rm -rf /target

# Execute command
ENTRYPOINT ["java","-jar","/app/app.jar"]
