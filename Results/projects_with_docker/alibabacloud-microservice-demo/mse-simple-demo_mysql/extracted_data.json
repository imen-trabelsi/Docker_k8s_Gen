{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.alibabacloud.hipsershop</groupId>\n    <artifactId>alibabacloud-microservice-demo</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <modules>\n        <module>src/cartservice</module>\n        <module>src/productservice</module>\n        <module>src/frontend</module>\n        <module>src/paymentservice</module>\n        <module>src/adservice</module>\n        <module>src/checkoutservice</module>\n        <module>src/currencyservice</module>\n        <module>src/emailservice</module>\n        <module>src/recomendationservice</module>\n        <module>src/shippingservice</module>\n        <module>src/exception-mock</module>\n        <module>src/zuul-gateway</module>\n    </modules>\n\n    <packaging>pom</packaging>\n    <description>The demo to showcase EDAS micro service</description>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <image>\n                        <builder>paketobuildpacks/builder:tiny</builder>\n                        <env>\n                            <BP_BOOT_NATIVE_IMAGE>1</BP_BOOT_NATIVE_IMAGE>\n                            <!-- See https://github.com/spring-projects/spring-boot/issues/23132 -->\n                            <BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>\n                                -Dspring.spel.ignore=true\n                                -Dspring.native.remove-yaml-support=true\n                            </BP_BOOT_NATIVE_IMAGE_BUILD_ARGUMENTS>\n                        </env>\n                    </image>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n    <repositories>\n        <repository>\n            <id>central</id>\n            <url>https://repo.maven.apache.org/maven2</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>spring-release</id>\n            <name>Spring release</name>\n            <url>https://repo.spring.io/release</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>spring-snapshot</id>\n            <name>Spring Snapshots</name>\n            <url>https://repo.spring.io/snapshot</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n        <repository>\n            <id>spring-milestone</id>\n            <name>Spring Milestone</name>\n            <url>https://repo.spring.io/milestone</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>central</id>\n            <url>https://repo.maven.apache.org/maven2</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </pluginRepository>\n        <pluginRepository>\n            <id>spring-release</id>\n            <name>Spring release</name>\n            <url>https://repo.spring.io/release</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </pluginRepository>\n        <pluginRepository>\n            <id>spring-snapshot</id>\n            <name>Spring Snapshots</name>\n            <url>https://repo.spring.io/snapshot</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </pluginRepository>\n        <pluginRepository>\n            <id>spring-milestone</id>\n            <name>Spring Milestone</name>\n            <url>https://repo.spring.io/milestone</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </pluginRepository>\n    </pluginRepositories>\n\n</project>"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: \"3\"\nservices:\n  nacos:\n    hostname: nacos\n    image: nacos/nacos-server:latest\n    container_name: nacos-standalone\n    environment:\n      - PREFER_HOST_MODE=hostname\n      - MODE=standalone\n    ports:\n      - \"8848:8848\"\n\n  #  currency-mysql:\n  #    image: mysql:5.6\n  #    ports:\n  #      - 3306\n  #    command: [\n  #      --character-set-server=utf8mb4,\n  #      --collation-server=utf8mb4_unicode_ci\n  #    ]\n  #    environment:\n  #      MYSQL_ROOT_PASSWORD: currencyservice\n  #      MYSQL_DATABASE: currency\n\n  checkout-mysql:\n    image: mysql:5.6\n    ports:\n      - 3306\n    command: [\n      --character-set-server=utf8mb4,\n      --collation-server=utf8mb4_unicode_ci\n    ]\n    environment:\n      MYSQL_ROOT_PASSWORD: checkoutservice\n      MYSQL_DATABASE: checkout\n\n  product-mysql:\n    image: mysql:5.6\n    ports:\n      - 3306\n    command: [\n      --character-set-server=utf8mb4,\n      --collation-server=utf8mb4_unicode_ci\n    ]\n    environment:\n      MYSQL_ROOT_PASSWORD: productservice\n      MYSQL_DATABASE: product\n\n  cart-redis:\n    image: redis\n    ports:\n      - 6379:6379\n\n  frontend:\n    build: ./src/frontend\n    image: frontend:1.0.0-SNAPSHOT\n    container_name: frontend\n    #    restart: always\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    ports:\n      - \"8080:8080\"\n    depends_on:\n      - \"nacos\"\n\n  cartservice:\n    build: ./src/cartservice\n    image: cartservice:1.0.0-SNAPSHOT\n    container_name: cartservice\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    depends_on:\n      - \"nacos\"\n      - \"cart-redis\"\n\n  checkoutservice:\n    build: ./src/checkoutservice\n    image: checkoutservice:1.0.0-SNAPSHOT\n    container_name: checkoutservice\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    depends_on:\n      - \"nacos\"\n      - \"checkout-mysql\"\n\n  prdoctservice:\n    build: ./src/productservice\n    image: productservice:1.0.0-SNAPSHOT\n    container_name: productservice\n    environment:\n      - dubbo.registry.address=nacos://nacos-server:8848\n      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n      - spring.cloud.nacos.config.server-addr=nacos-server:8848\n    depends_on:\n      - \"nacos\"\n      - \"product-mysql\"\n\n  loadgenerator:\n    build: ./src/loadgenerator\n    image: registry.cn-shanghai.aliyuncs.com/microservice_demo/loadgenerator:1.0.0-SNAPSHOT\n    container_name: loadgenerator\n\n#  adservice:\n#    build: ./src/adservice\n#    image: adservice:1.0.0-SNAPSHOT\n#    container_name: adservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#\n#\n#  currencyservice:\n#    build: ./src/productservice\n#    image: currencyservice:1.0.0-SNAPSHOT\n#    container_name: currencyservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  emailservice:\n#    build: ./src/emailservice\n#    image: emailservice:1.0.0-SNAPSHOT\n#    container_name: emailservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  paymentservice:\n#    build: ./src/paymentservice\n#    image: paymentservice:1.0.0-SNAPSHOT\n#    container_name: paymentservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  recomendationservice:\n#    build: ./src/recomendationservice\n#    image: recomendationservice:1.0.0-SNAPSHOT\n#    container_name: recomendationservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"\n#\n#  shippingservice:\n#    build: ./src/shippingservice\n#    image: shippingservice:1.0.0-SNAPSHOT\n#    container_name: shippingservice\n#    environment:\n#      - dubbo.registry.address=nacos://nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#      - spring.cloud.nacos.discovery.server-addr=nacos-server:8848\n#    depends_on:\n#      - \"nacos\"",
            "mse-simple-demo/mysql/Dockerfile": "FROM mysql:5.7\nWORKDIR /docker-entrypoint-initdb.d\nENV LANG=C.UTF-8\nADD init.sql .",
            "mse-simple-demo/Jenkinsfile": "#!groovy\npipeline {\n\n    // \u5b9a\u4e49\u672c\u6b21\u6784\u5efa\u4f7f\u7528\u54ea\u4e2a\u6807\u7b7e\u7684\u6784\u5efa\u73af\u5883\uff0c\u672c\u793a\u4f8b\u4e2d\u4e3a \u201cslave-pipeline\u201d\n    agent{\n        node{\n          label 'slave-pipeline'\n        }\n    }\n\n    //\u5e38\u91cf\u53c2\u6570\uff0c\u521d\u59cb\u786e\u5b9a\u540e\u4e00\u822c\u4e0d\u9700\u66f4\u6539\n    environment{\n        IMAGE = sh(returnStdout: true,script: 'echo registry.$image_region.aliyuncs.com/$image_namespace/$image_reponame:$image_tag').trim()\n        BRANCH =  sh(returnStdout: true,script: 'echo $branch').trim()\n    }\n    options {\n        //\u4fdd\u6301\u6784\u5efa\u7684\u6700\u5927\u4e2a\u6570\n        buildDiscarder(logRotator(numToKeepStr: '10')) \n    }\n    \n    parameters {\n        string(name: 'image_region', defaultValue: 'cn-shanghai')\n        string(name: 'image_namespace', defaultValue: 'yizhan')\n        string(name: 'image_reponame', defaultValue: 'spring-cloud-a')\n        string(name: 'image_tag', defaultValue: 'gray')\n        string(name: 'branch', defaultValue: 'master')\n        string(name: 'number_of_pods', defaultValue: '2')\n    }\n\n    //pipeline\u7684\u5404\u4e2a\u9636\u6bb5\u573a\u666f\n    stages {\n\n        stage('\u4ee3\u7801\u6253\u5305') {\n            steps{\n                container(\"maven\") {\n                    echo \"\u955c\u50cf\u6784\u5efa......\"\n                    sh \"cd A && mvn clean package\"\n                }\n                \n            }\n        }\n\n\n        stage('\u955c\u50cf\u6784\u5efa\u53ca\u53d1\u5e03'){\n          steps{\n              container(\"kaniko\") {\n                  sh \"kaniko -f `pwd`/A/Dockerfile -c `pwd`/A --destination=${IMAGE} --skip-tls-verify\"\n              }\n          }\n        }\n\n        stage('\u7070\u5ea6\u90e8\u7f72') {\n            steps{\n                container('kubectl') {\n                    echo \"\u7070\u5ea6\u90e8\u7f72......\"\n                    sh \"cd A && sed -i -E \\\"s/${env.image_reponame}:.+/${env.image_reponame}:${env.image_tag}/\\\" A-gray-deployment.yaml\"\n                    sh \"cd A && sed -i -E \\\"s/replicas:.+/replicas: ${env.number_of_pods}/\\\" A-gray-deployment.yaml\"\n                    sh \"kubectl apply -f A/A-gray-deployment.yaml -n default\"\n                }\n            }\n        }\n        \n        stage('\u7ed3\u675f\u7070\u5ea6') {\n            input {\n                message \"\u8bf7\u786e\u8ba4\u662f\u5426\u5168\u91cf\u53d1\u5e03\"\n                ok \"\u786e\u8ba4\"\n                parameters {\n                    string(name: 'continue', defaultValue: 'true', description: 'true\u4e3a\u5168\u91cf\u53d1\u5e03\uff0c\u5176\u4ed6\u4e3a\u56de\u6eda')\n                }\n            }\n            steps{\n                script {\n                    env.continue = sh (script: 'echo ${continue}', returnStdout: true).trim()\n                    if (env.continue.equals('true')) {\n                        container('kubectl') {\n                            echo \"\u5168\u91cf\u53d1\u5e03......\"\n                            sh \"cd A && sed -i -E \\\"s/${env.image_reponame}:.+/${env.image_reponame}:${env.image_tag}/\\\" A-deployment.yaml\"\n                            sh \"cd A && sed -i -E \\\"s/replicas:.+/replicas: ${env.number_of_pods}/\\\" A-deployment.yaml\"\n                            sh \"kubectl apply -f A/A-deployment.yaml -n default\"\n                        }\n                    } else {\n                        echo '\u56de\u6eda'\n                    }\n                    container('kubectl') {\n                        sh \"kubectl delete -f A/A-gray-deployment.yaml -n default\"\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "build.sh",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}