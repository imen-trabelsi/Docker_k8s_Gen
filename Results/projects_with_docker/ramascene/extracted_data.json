{
    "source_code_info": {
        "language": "Python",
        "framework": "Django",
        "dependencies": {
            "requirements.txt": "aioredis==1.0.0\nalabaster==0.7.10\namqp==2.2.2\nasgiref==2.3.2\nasync-generator==1.10\nasync-timeout==2.0.1\natomicwrites==1.2.1\nattrs==18.2.0\nautobahn==18.8.1\nAutomat==0.7.0\nBabel==2.5.3\nbilliard==3.5.0.3\ncelery==4.1.0\ncertifi==2018.4.16\nchannels==2.1.5\nchannels-redis==2.3.2\nchardet==3.0.4\nconstantly==15.1.0\ndaphne==2.2.2\nDjango==2.1\ndjango-celery-results==1.0.1\ndjango-cors-headers==2.4.0\ndjango-webpack-loader==0.5.0\ndocutils==0.14\nflower==0.9.2\ngunicorn==19.9.0\nhiredis==0.2.0\nhyperlink==18.0.0\nidna==2.7\nimagesize==1.0.0\nincremental==17.5.0\nJinja2==2.10\nkombu==4.1.0\nMarkupSafe==1.1.1\nmore-itertools==4.3.0\nmsgpack==0.5.4\nmsgpack-python==0.5.4\nnumpy==1.14.1\npackaging==17.1\npathlib2==2.3.3\npluggy==0.8.0\npockets==0.6.2\npy==1.7.0\nPygments==2.2.0\nPyHamcrest==1.9.0\npyparsing==2.2.0\npytest==4.0.1\npytest-asyncio==0.9.0\npytest-django==3.4.4\npytz==2018.5\nredis==2.10.6\nrequests==2.27.1\nsix==1.11.0\nsnowballstemmer==1.2.1\nSphinx==1.7.4\nsphinx-rtd-theme==0.3.1\nsphinxcontrib-napoleon==0.6.1\nsphinxcontrib-websupport==1.0.1\ntornado==4.5.3\nTwisted==18.7.0\ntxaio==18.7.1\nurllib3==1.22\nvine==1.1.4\nxlrd==1.1.0\nzope.interface==4.7.2\n"
        },
        "database": "Redis",
        "build_system": "pip",
        "config_files": {
            ".env": "COMPOSE_FILE=docker-compose.yml\nCOMPOSE_PROJECT_NAME=rama-scene\n\nDEBUG=false\nDJANGO_SETTINGS_MODULE='ramasceneMasterProject.config.production'\nSECRET_KEY='ThisTokenIsNotSoSecretChangeIt'\nRABBITMQ_VHOST=ramascene\nRABBITMQ_USERNAME=ramascene\nRABBITMQ_PASSWORD=ramascene\nDATABASE_NAME=db.sqlite3\nDATASETS_VERSION='v4'",
            "docker-compose.yml": "version: '3'\nservices:\n  reverse_proxy:\n    build:\n      context: ./\n      target: nginx\n      args:\n        DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n        PUBLIC_DIR: public\n        HOST: www.ramascene.eu\n        WS_HOST: www.ramascene.eu\n        PROTOCOL: http\n        WS_PROTOCOL: ws\n        BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n        REDIS_HOST: cache\n        SECRET_KEY: $SECRET_KEY\n        DATABASE_NAME: $DATABASE_NAME\n        DATASETS_VERSION: $DATASETS_VERSION\n    container_name: rama-scene-nginx\n    depends_on:\n      - webapp\n    environment:\n      NGINX_BACKEND_HOST: webapp\n      NGINX_BACKEND_PORT: 8000\n      NGINX_CONF_INCLUDE: conf.d/ramascene_vhost.conf\n      NGINX_VHOST_PRESET: django\n    ports:\n      - 80:80\n    restart: unless-stopped\n  webapp:\n    build:\n      context: ./\n      target: python\n      args:\n        DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n        PUBLIC_DIR: public\n        HOST: www.ramascene.eu\n        WS_HOST: www.ramascene.eu\n        PROTOCOL: http\n        WS_PROTOCOL: ws\n        BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n        REDIS_HOST: cache\n        SECRET_KEY: $SECRET_KEY\n        DATABASE_NAME: $DATABASE_NAME\n        DATASETS_VERSION: $DATASETS_VERSION\n    container_name: rama-scene-daphne\n    depends_on:\n      - cache\n      - message_broker\n    environment:\n      DEBUG: $DEBUG\n      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n      PUBLIC_DIR: public\n      HOST: www.ramascene.eu\n      WS_HOST: www.ramascene.eu\n      PROTOCOL: http\n      WS_PROTOCOL: ws\n      BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n      REDIS_HOST: cache\n      SECRET_KEY: $SECRET_KEY\n      DATABASE_NAME: $DATABASE_NAME\n      DATASETS_VERSION: $DATASETS_VERSION\n    ports:\n      - 8000:8000\n    restart: unless-stopped\n    volumes:\n      - .:/mnt/data\n      - ../datasets:/mnt/datasets:ro\n  analyser:\n    build:\n      context: ./\n      target: python\n      args:\n        DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n        PUBLIC_DIR: public\n        HOST: www.ramascene.eu\n        WS_HOST: www.ramascene.eu\n        PROTOCOL: http\n        WS_PROTOCOL: ws\n        BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n        REDIS_HOST: cache\n        SECRET_KEY: $SECRET_KEY\n        DATABASE_NAME: $DATABASE_NAME\n        DATASETS_VERSION: $DATASETS_VERSION\n        OPENBLAS_NUM_THREADS: 1\n    command: [\"celery\", \"-A\", \"ramasceneMasterProject\", \"worker\", \"-l\", \"info\", \"--concurrency\", \"1\", \"--max-tasks-per-child\", \"1\", \"--queue\", \"calc_default\", \"-n\", \"worker1.%h\"]\n    container_name: rama-scene-analyser\n    depends_on:\n      - cache\n      - message_broker\n    environment:\n      DEBUG: $DEBUG\n      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n      PUBLIC_DIR: public\n      HOST: www.ramascene.eu\n      WS_HOST: www.ramascene.eu\n      PROTOCOL: http\n      WS_PROTOCOL: ws\n      BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n      REDIS_HOST: cache\n      SECRET_KEY: $SECRET_KEY\n      DATABASE_NAME: $DATABASE_NAME\n      DATASETS_VERSION: $DATASETS_VERSION\n      OPENBLAS_NUM_THREADS: 2\n    restart: unless-stopped\n    volumes:\n      - .:/mnt/data\n      - ../datasets:/mnt/datasets:ro\n  modeller:\n    build:\n      context: ./\n      target: python\n      args:\n        DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n        PUBLIC_DIR: public\n        HOST: www.ramascene.eu\n        WS_HOST: www.ramascene.eu\n        PROTOCOL: http\n        WS_PROTOCOL: ws\n        BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n        REDIS_HOST: cache\n        SECRET_KEY: $SECRET_KEY\n        DATABASE_NAME: $DATABASE_NAME\n        DATASETS_VERSION: $DATASETS_VERSION\n        OPENBLAS_NUM_THREADS: 1\n    command: [\"celery\", \"-A\", \"ramasceneMasterProject\", \"worker\", \"-l\", \"info\", \"--concurrency\", \"1\", \"--max-tasks-per-child\", \"1\", \"--queue\", \"modelling\", \"-n\", \"worker2.%h\"]\n    container_name: rama-scene-modeller\n    depends_on:\n      - cache\n      - message_broker\n    environment:\n      DEBUG: $DEBUG\n      DJANGO_SETTINGS_MODULE: $DJANGO_SETTINGS_MODULE\n      PUBLIC_DIR: public\n      HOST: www.ramascene.eu\n      WS_HOST: www.ramascene.eu\n      PROTOCOL: http\n      WS_PROTOCOL: ws\n      BROKER_URL: amqp://$RABBITMQ_USERNAME:$RABBITMQ_PASSWORD@message_broker:5672/$RABBITMQ_VHOST\n      REDIS_HOST: cache\n      SECRET_KEY: $SECRET_KEY\n      DATABASE_NAME: $DATABASE_NAME\n      DATASETS_VERSION: $DATASETS_VERSION\n      OPENBLAS_NUM_THREADS: 1\n    restart: unless-stopped\n    volumes:\n      - .:/mnt/data\n      - ../datasets:/mnt/datasets:ro\n  message_broker:\n    image: rabbitmq:3.9.11-management-alpine\n    container_name: rama-scene-rabbitmq\n    environment:\n      HOSTNAME: 'rabbitmq'\n      RABBITMQ_DEFAULT_PASS: $RABBITMQ_PASSWORD\n      RABBITMQ_DEFAULT_USER: $RABBITMQ_USERNAME\n      RABBITMQ_DEFAULT_VHOST: $RABBITMQ_VHOST\n    hostname: 'rabbitmq'\n    ports:\n      - 5672:5672\n      - 15672:15672\n    restart: unless-stopped\n    volumes:\n      - ramascene_rabbitmq:/var/lib/rabbitmq/mnesia/\n  cache:\n    image: redis:7.0-alpine\n    container_name: rama-scene-redis\n    ports:\n      - 6379:6379\n    restart: unless-stopped\nvolumes:\n  ramascene_rabbitmq:",
            "Dockerfile": "# --- TARGET node ---\nARG NODE_VERSION=12.22-dev\nARG PYTHON_VER=3.6\nARG NGINX_VERSION=1.21\n\nFROM wodby/node:${NODE_VERSION} AS node\n\n# copy sources\nCOPY package.json yarn.lock webpack.config.js ./\nCOPY --chown=node:node assets ./assets\n\n# install all node packages\nRUN npm install\n\n# build reactjs bundle\nARG HOST\nARG WS_HOST\nARG PROTOCOL\nARG WS_PROTOCOL\n\nRUN ./node_modules/.bin/webpack --config webpack.config.js\n\n# --- END TARGET node ---\n\n\n# --- TARGET build ---\nARG PYTHON_VER\nARG NGINX_VERSION\n\nFROM wodby/python:${PYTHON_VER}-dev AS build\n\n# copy all webpack files\nCOPY --from=node --chown=wodby:wodby /usr/src/app/assets/bundles ./assets/bundles\nCOPY --from=node --chown=wodby:wodby /usr/src/app/webpack-stats.json ./\n\n# copy sources\nCOPY --chown=wodby:wodby ramascene ./ramascene\nCOPY --chown=wodby:wodby ramasceneMasterProject ./ramasceneMasterProject\nCOPY --chown=wodby:wodby static_assets ./static_assets\nCOPY --chown=wodby:wodby templates ./templates\nCOPY --chown=wodby:wodby .env manage.py requirements.txt rtd_requirements.txt  ./\n\n# Install all python packages & clean up\nRUN pip install --retries 3 --no-cache-dir --disable-pip-version-check --no-python-version-warning -r requirements.txt\n\n# Install gettext\n# USER root\n# RUN set -ex; \\\n#     apk add --update --no-cache gettext\n# USER wodby\n\n# compile localized strings\n# RUN python manage.py compilemessages\n\n# compile all assets\nARG DJANGO_SETTINGS_MODULE\nARG HOST\nARG DATASETS_VERSION\nARG SECRET_KEY\nARG BROKER_URL\nARG PUBLIC_DIR\nARG WS_HOST\nARG PROTOCOL\nARG WS_PROTOCOL\nARG REDIS_HOST\nARG DATABASE_NAME\n\nRUN python manage.py collectstatic\n\n# --- END TARGET build ---\n\n\n# --- TARGET python ---\nARG PYTHON_VER\nARG NGINX_VERSION\n\nFROM wodby/python:${PYTHON_VER} AS python\n\nARG DJANGO_SETTINGS_MODULE\nARG HOST\nARG DATASETS_VERSION\nARG SECRET_KEY\nARG BROKER_URL\nARG PUBLIC_DIR\nARG WS_HOST\nARG PROTOCOL\nARG WS_PROTOCOL\nARG REDIS_HOST\nARG DATABASE_NAME\n\nENV PYTHONUNBUFFERED=1\n\n# create directories\nUSER root\nRUN install -o wodby -g wodby -d ./logs\nRUN install -o wodby -g wodby -d /mnt/data\nRUN install -o wodby -g wodby -d /mnt/datasets\nUSER wodby\n\n# Copy all packages\nCOPY --from=build --chown=wodby:wodby /home/wodby/.local /home/wodby/.local\nCOPY --from=build --chown=wodby:wodby /usr/src/app/webpack-stats.json ./\n\n# Copy all source files\nCOPY --chown=wodby:wodby python_ini ./python_ini\nCOPY --chown=wodby:wodby ramascene ./ramascene\nCOPY --chown=wodby:wodby ramasceneMasterProject ./ramasceneMasterProject\nCOPY --chown=wodby:wodby templates ./templates\nCOPY manage.py .env LICENSE README.md ./\n\nENV DATABASES_DEFAULT_NAME=/mnt/data/${DATABASE_NAME}\nENV DATASETS_DIR=/mnt/datasets\n\nRUN python manage.py makemigrations\nRUN python manage.py migrate\nRUN python manage.py populateHierarchies\n\nEXPOSE 8000\nCMD [\"daphne\", \"ramasceneMasterProject.asgi:application\", \"-b\", \"0.0.0.0\", \"-p\", \"8000\"]\n\n# --- END TARGET python ---\n\n\n# --- TARGET reverse proxy ---\nARG NGINX_VERSION\n\nFROM wodby/nginx:${NGINX_VERSION} as nginx\n\nRUN { \\\n        echo \"map \\$http_upgrade \\$connection_upgrade {\" ; \\\n        echo \"    default upgrade;\" ; \\\n        echo \"    '' close;\" ; \\\n        echo \"}\" ; \\\n        echo \"include upstream.conf;\" ; \\\n        echo \"server {\" ; \\\n        echo \"    listen 80 default_server;\" ; \\\n        echo \"    server_name default;\" ; \\\n        echo \"    root /var/www/html;\" ; \\\n        echo \"    include preset.conf;\" ; \\\n\n        echo \"    location /ws/ {\" ; \\\n        echo \"        proxy_pass http://app_server/;\" ; \\\n        echo \"        proxy_http_version 1.1;\" ; \\\n        echo \"        proxy_set_header Upgrade \\$http_upgrade;\" ; \\\n        echo \"        proxy_set_header Connection \\$connection_upgrade;\" ; \\\n        echo \"        proxy_set_header Host \\$http_host;\" ; \\\n        echo \"        proxy_redirect off;\" ; \\\n        echo \"    }\" ; \\\n\n        echo \"    include defaults.conf;\" ; \\\n        echo \"}\" ; \\\n    } > /etc/nginx/conf.d/ramascene_vhost.conf;\n\n# Copy all static files\nCOPY --from=build --chown=wodby:wodby /usr/src/app/public/ /var/www/html/\n\n# --- END TARGET nginx ---\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            ".env",
            ".gitignore",
            "Capfile",
            "Dockerfile",
            "Gemfile",
            "Gemfile.lock",
            "LICENSE",
            "README.md",
            "conftest.py",
            "contributors.txt",
            "db.sqlite3",
            "db.sqlite3-shm",
            "db.sqlite3-wal",
            "dev-webpack.config.js",
            "docker-compose.yml",
            "manage.py",
            "package.json",
            "pytest.ini",
            "requirements.txt",
            "rtd_requirements.txt",
            "sample-dev-env.sh",
            "sample-prod-env.sh",
            "setup.py",
            "webpack-stats.json",
            "webpack.config.js",
            "yarn.lock"
        ],
        "folders": [
            "assets",
            "config",
            "docs",
            "launch",
            "logs",
            "python_ini",
            "ramascene",
            "ramasceneMasterProject",
            "static_assets",
            "templates"
        ]
    }
}