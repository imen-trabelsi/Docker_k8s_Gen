{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>io.confluent</groupId>\n        <artifactId>rest-utils-parent</artifactId>\n        <version>7.9.0</version>\n    </parent>\n\n    <artifactId>clients-example</artifactId>\n    <packaging>jar</packaging>\n\n    <organization>\n        <name>Confluent, Inc.</name>\n        <url>http://confluent.io</url>\n    </organization>\n    <url>http://confluent.io</url>\n    <description>\n        Kafka Java clients examples for CCloud.\n    </description>\n\n    <licenses>\n        <license>\n            <name>Apache License 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <repositories>\n        <repository>\n            <id>confluent</id>\n            <name>Confluent</name>\n            <url>https://packages.confluent.io/maven/</url>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <id>confluent</id>\n            <url>https://packages.confluent.io/maven/</url>\n        </pluginRepository>\n    </pluginRepositories>\n\n\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.kafka</groupId>\n            <artifactId>kafka-clients</artifactId>\n            <version>${kafka.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.confluent</groupId>\n            <artifactId>kafka-avro-serializer</artifactId>\n            <version>${confluent.version.range}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.confluent</groupId>\n            <artifactId>kafka-streams-avro-serde</artifactId>\n            <version>${confluent.version.range}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.kafka</groupId>\n            <artifactId>kafka-streams</artifactId>\n            <version>${kafka.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.kafka</groupId>\n            <artifactId>connect-runtime</artifactId>\n            <version>${kafka.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.confluent</groupId>\n            <artifactId>kafka-json-serializer</artifactId>\n            <version>${confluent.version.range}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>${slf4j-api.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n            <version>${reload4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n            <version>${slf4j-reload4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>${jackson.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.code.gson</groupId>\n            <artifactId>gson</artifactId>\n            <version>${gson.version}</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <inherited>true</inherited>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <configuration>\n                    <descriptorRefs>\n                        <descriptorRef>jar-with-dependencies</descriptorRef>\n                    </descriptorRefs>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>1.2.1</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>java</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.jasig.maven</groupId>\n                <artifactId>maven-notice-plugin</artifactId>\n                <version>1.0.6.1</version>\n                <configuration>\n                    <licenseMapping>\n                        <param>../../license-mappings.xml</param>\n                    </licenseMapping>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>io.confluent</groupId>\n                <artifactId>kafka-schema-registry-maven-plugin</artifactId>\n                <version>${confluent.version.range}</version>\n                <configuration>\n                    <schemaRegistryUrls>\n                        <param>${schemaRegistryUrl}</param>\n                    </schemaRegistryUrls>\n                    <userInfoConfig>${schemaRegistryBasicAuthUserInfo}</userInfoConfig>\n                    <subjects>\n                        <test2-value>${schemaLocal}</test2-value>\n                    </subjects>\n                    <schemaTypes>\n                        <test2-value>AVRO</test2-value>\n                    </schemaTypes>\n                </configuration>\n                <goals>\n                    <goal>test-compatibility</goal>\n                </goals>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <executions>\n                    <!--\n                     This declaration merges with the one in the parent, rather\n                     than overriding it, so we need to disable the \"validate\" phase\n                     execution that the parent declares and declare our own\n                     during \"test-compile\".\n\n                     One reason for this is that avro codegen runs during compile,\n                     and while it's not strictly a precondition, it's\n                     confusing to address style violations while the IDE is telling you\n                     that some generated class doesn't exist. Test-compile is the first phase\n                     that's guaranteed to run after compile and before any unit or integration\n                     tests.\n\n                     Also, we want to disable the parent's configuration because it declares stuff\n                     we don't care about, like suppressions. (Honestly, it shouldn't)\n                     -->\n                    <execution>\n                        <id>validate</id>\n                        <phase>none</phase>\n                        <configuration>\n                            <skip>true</skip>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>test-compile</id>\n                        <phase>test-compile</phase>\n                        <configuration>\n                            <encoding>UTF-8</encoding>\n                            <consoleOutput>true</consoleOutput>\n                            <failsOnError>true</failsOnError>\n                            <failOnViolation>true</failOnViolation>\n                            <includeResources>false</includeResources>\n                            <includeTestResources>false</includeTestResources>\n                            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                            <excludes>io/confluent/examples/clients/cloud/**</excludes>\n                            <configLocation>checkstyle.xml</configLocation>\n                        </configuration>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "ccloud-observability/docker-compose.yml": "version: '2.3'\nvolumes:\n  database:\n\nx-network: &cap-add\n  cap_add:\n    - NET_ADMIN\n\n# Note: src code and dependencies are built into cnfldemos/ccloud-observability-client\n#       the Dockerfile for cnfldemos/ccloud-observability-client can be found in this directory--called Dockerfile\nx-client-base: &client-base\n  image: cnfldemos/ccloud-observability-client:0.2.0\n  restart: always\n  ports:\n    - 1234\n  volumes:\n    - ./$CONFIG_FILE:/tmp/client.config\n    - ./monitoring_configs/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar\n    - ./monitoring_configs/jmx-exporter/kafka_client.yml:/usr/share/jmx-exporter/kafka_client.yml\n    - ./:/tmp/java/\n  environment:\n    MAVEN_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=1234:/usr/share/jmx-exporter/kafka_client.yml\n\nservices:\n  node-exporter:\n    image: prom/node-exporter:v0.18.1\n    container_name: node-exporter\n    volumes:\n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /:/rootfs:ro\n    command:\n      - \"--path.procfs=/host/proc\"\n      - \"--path.sysfs=/host/sys\"\n      - \"--collector.filesystem.ignored-mount-points\"\n      - \"^(aufs|proc|nsfs|shm|cgroup|tmpfs|binfmt_misc|debugfs|devpts|fusectl|hugetlbfs|fuse.lxcfs|mqueue|pstore|securityfs|sysfs|autofs|devtmpfs|configfs)\"\n\n  prometheus:\n    image: prom/prometheus:v2.34.0\n    container_name: prometheus\n    links:\n      - producer\n      - consumer\n    ports:\n      - 9090:9090\n    volumes:\n      - ./monitoring_configs/prometheus/:/etc/prometheus/\n\n  grafana:\n    image: grafana/grafana:8.4.4\n    container_name: grafana\n    environment:\n      - \"GF_INSTALL_PLUGINS=grafana-piechart-panel\"\n      - \"GF_SECURITY_ADMIN_USER=admin\"\n      - \"GF_SECURITY_ADMIN_PASSWORD=password\"\n      - \"GF_USERS_ALLOW_SIGN_UP=false\"\n    ports:\n      - 3000:3000\n    volumes:\n      - ./monitoring_configs/grafana/provisioning/:/etc/grafana/provisioning/\n\n  producer:\n    <<: [*client-base, *client-base]\n    command: >\n      bash -c \"mvn clean compile -f /tmp/java/\n      &&  mvn -q -f /tmp/java/pom.xml exec:java -Dexec.mainClass=\\\"io.confluent.examples.clients.cloud.ProducerExample\\\" -Dexec.args=\\\"/tmp/client.config demo-topic-1\\\"\"\n\n  consumer:\n    <<: [*client-base, *client-base]\n    command: >\n      bash -c \"sleep 15 &&\n      mvn compile -f /tmp/java/\n      &&  mvn -q -f /tmp/java/pom.xml exec:java -Dexec.mainClass=\\\"io.confluent.examples.clients.cloud.ConsumerExample\\\" -Dexec.args=\\\"/tmp/client.config demo-topic-1\\\"\"\n\n  kafka-lag-exporter:\n    image: lightbend/kafka-lag-exporter:0.5.5\n    container_name: kafka-lag-exporter\n    hostname: kafka-lag-exporter\n    restart: always\n    volumes:\n      - ./monitoring_configs/kafka-lag-exporter/:/opt/docker/conf/\n    environment:\n      - LAG_EXPORTER_ID=$LAG_EXPORTER_ID\n      - BOOTSTRAP_SERVERS=$BOOTSTRAP_SERVERS\n      - SASL_JAAS_CONFIG=$SASL_JAAS_CONFIG\n",
            "ccloud-observability/Dockerfile": "FROM maven:3.6.3-jdk-11-slim\n# Update apt-get and install iptables\nRUN apt-get update && apt-get install -y iptables git\n# Add pom and checkstyle suppressions to cache dependencies\nWORKDIR /tmp/java\nCOPY pom.xml .\nCOPY checkstyle/suppressions.xml /tmp/java/checkstyle/suppressions.xml\nCOPY checkstyle.xml /tmp/java/checkstyle.xml\n# Copy in java src code\nCOPY src/ /tmp/java/src/\nRUN mvn package\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".gitignore",
            "Dockerfile",
            "README.md",
            "ccloud_lib.py",
            "consumer.py",
            "consumer_ccsr.py",
            "producer.py",
            "producer_ccsr.py",
            "requirements.txt"
        ],
        "folders": []
    }
}