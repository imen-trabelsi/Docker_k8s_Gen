{
    "source_code_info": {
        "language": "Python",
        "framework": "Flask",
        "dependencies": {
            "requirements.txt": "click==6.7\nFlask==1.0.2\ngitdb2==2.0.4\nGitPython==2.1.11\nitsdangerous==0.24\nJinja2==2.10\nMarkupSafe==1.1\nsmmap2==2.0.4\nWerkzeug==0.14.1\n"
        },
        "database": null,
        "build_system": "pip",
        "config_files": {
            "docker-compose.yml": "version: '3'\nservices:\n  snack:\n    build: ./snack\n    command: /go/bin/snack\n    ports:\n      - \"8083:8083\"\n    environment:\n      - TEMPLATE_DIR=/go/src/github.com/tilt-dev/servantes/snack/web/templates\n  spoonerisms:\n    build:\n      context: ./spoonerisms\n      dockerfile: ../Dockerfile.js.base\n    command: sh -c \"yarn --cwd /app install && node /app/index.js\"\n    volumes:\n      - ./spoonerisms/src:/app\n      - ./spoonerisms/package.json:/app/package.json\n      - ./spoonerisms/yarn.lock:/app/yarn.lock\n    ports:\n      - \"9006:5000\"\n  vigoda:\n    image: vigoda_for_dc\n    ports:\n      - \"9007:8081\"\n    environment:\n      - TEMPLATE_DIR=/go/src/github.com/tilt-dev/servantes/vigoda/web/templates\n  fortune:\n    image: fortune_for_dc\n    ports:\n      - \"9008:8082\"\n    environment:\n      - TEMPLATE_DIR=/go/src/github.com/tilt-dev/servantes/fortune/web/templates\n",
            "hypothesizer/Dockerfile": "FROM python:3.6-alpine\n\nADD . /app\nRUN cd /app && pip install -r requirements.txt\n",
            ".circleci/config.yml": "version: 2.1\njobs:\n  build:\n    docker:\n      - image: tiltdev/tilt:latest\n    working_directory: /root/go/src/github.com/tilt-dev/servantes\n\n    steps:\n      - checkout\n      - setup_remote_docker:\n          version: 19.03.12\n      - run: apt update && apt install -y unzip time make wget m4 build-essential golang\n      - run: |\n          set -ex\n          export PROTOC_VERSION=\"3.5.1\"\n          wget https://github.com/google/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip && \\\n            unzip protoc-${PROTOC_VERSION}-linux-x86_64.zip -d protoc && \\\n            mv protoc/bin/protoc /usr/bin/protoc\n\n      - run: echo 'export PATH=~/go/bin:$PATH' >> $BASH_ENV\n      - run: cd .. && go get github.com/golang/protobuf/protoc-gen-go\n      - run: make test\n          \n      - run: ctlptl create cluster kind --registry=ctlptl-registry && make integration\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "go.mod",
            "main.go"
        ],
        "folders": [
            "web"
        ]
    }
}