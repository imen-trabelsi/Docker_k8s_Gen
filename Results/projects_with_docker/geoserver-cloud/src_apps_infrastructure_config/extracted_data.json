{
    "source_code_info": {
        "language": "Java",
        "framework": "Spring Boot",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>org.geoserver.cloud</groupId>\n  <artifactId>gs-cloud-bom</artifactId>\n  <version>${revision}</version>\n  <!-- See https://maven.apache.org/maven-ci-friendly.html -->\n  <packaging>pom</packaging>\n  <name>GeoServer Cloud</name>\n  <modules>\n    <module>src</module>\n  </modules>\n  <properties>\n    <revision>2.27.0-SNAPSHOT</revision>\n    <fmt.skip>false</fmt.skip>\n    <spotless.action>apply</spotless.action>\n    <spotless.apply.skip>${fmt.skip}</spotless.apply.skip>\n    <pom.fmt.action>sort</pom.fmt.action>\n    <pom.fmt.skip>${fmt.skip}</pom.fmt.skip>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <sonar.host.url>https://sonarcloud.io</sonar.host.url>\n  </properties>\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-spring-factory</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>spring-boot-simplejndi</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.jackson</groupId>\n        <artifactId>gt-jackson-bindings</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.jackson</groupId>\n        <artifactId>gs-jackson-bindings</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-spring-boot-starter</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-catalog-backend</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-security</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.jackson</groupId>\n        <artifactId>gs-cloud-starter-jackson</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-vector-formats</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-raster-formats</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-webmvc</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-wms-extensions</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-observability</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog</groupId>\n        <artifactId>gs-cloud-catalog-plugin</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog</groupId>\n        <artifactId>gs-cloud-catalog-events</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog</groupId>\n        <artifactId>gs-cloud-catalog-event-bus</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud</groupId>\n        <artifactId>gs-cloud-starter-event-bus</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog</groupId>\n        <artifactId>gs-cloud-catalog-cache</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.backend</groupId>\n        <artifactId>gs-cloud-catalog-backend-common</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.backend</groupId>\n        <artifactId>gs-cloud-catalog-backend-datadir</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.backend</groupId>\n        <artifactId>gs-cloud-catalog-backend-jdbcconfig</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.catalog.backend</groupId>\n        <artifactId>gs-cloud-catalog-backend-pgconfig</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-core</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-catalog-pgconfig</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-blobstores</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-services</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-tiling</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-bus-integration</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-spring-boot-autoconfigure</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.geoserver.cloud.gwc</groupId>\n        <artifactId>gwc-cloud-spring-boot-starter</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n  <repositories>\n    <repository>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <!-- contains release (including third-party-dependences) -->\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n      <id>osgeo-releases</id>\n      <name>OSGeo Nexus Release Repository</name>\n      <url>https://repo.osgeo.org/repository/release/</url>\n    </repository>\n    <repository>\n      <releases>\n        <enabled>false</enabled>\n      </releases>\n      <!-- contains snapshots -->\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n      <id>osgeo-snapshots</id>\n      <name>OSGeo Nexus Snapshot Repository</name>\n      <url>https://repo.osgeo.org/repository/snapshot/</url>\n    </repository>\n    <repository>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n      <id>geoserver-github-packages</id>\n      <name>Customized Geoserver Packages</name>\n      <?SORTPOM IGNORE?>\n      <url>https://public:&#103;hp_Mp4UdrZ2GYC4v4UtdzEirXLig4D8t54dKkAf@maven.pkg.github.com/camptocamp/geoserver-cloud-geoserver</url>\n      <?SORTPOM RESUME?>\n    </repository>\n  </repositories>\n\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>com.diffplug.spotless</groupId>\n          <artifactId>spotless-maven-plugin</artifactId>\n          <version>2.43.0</version>\n        </plugin>\n        <plugin>\n          <groupId>com.github.ekryd.sortpom</groupId>\n          <artifactId>sortpom-maven-plugin</artifactId>\n          <version>3.3.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>flatten-maven-plugin</artifactId>\n          <version>1.5.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.jacoco</groupId>\n          <artifactId>jacoco-maven-plugin</artifactId>\n          <version>0.8.11</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <plugins>\n      <plugin>\n        <groupId>com.github.ekryd.sortpom</groupId>\n        <artifactId>sortpom-maven-plugin</artifactId>\n        <configuration>\n          <encoding>UTF-8</encoding>\n          <keepBlankLines>true</keepBlankLines>\n          <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>\n          <createBackupFile>false</createBackupFile>\n          <lineSeparator>\\n</lineSeparator>\n          <verifyFail>stop</verifyFail>\n          <verifyFailOn>strict</verifyFailOn>\n          <skip>${pom.fmt.skip}</skip>\n        </configuration>\n        <executions>\n          <execution>\n            <goals>\n              <goal>${pom.fmt.action}</goal>\n            </goals>\n            <phase>verify</phase>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>com.diffplug.spotless</groupId>\n        <artifactId>spotless-maven-plugin</artifactId>\n        <configuration>\n          <java>\n            <palantirJavaFormat>\n              <version>2.50.0</version>\n            </palantirJavaFormat>\n          </java>\n          <upToDateChecking>\n            <enabled>true</enabled>\n            <indexFile>${project.basedir}/.spotless-index</indexFile>\n          </upToDateChecking>\n        </configuration>\n        <executions>\n          <execution>\n            <goals>\n              <goal>${spotless.action}</goal>\n            </goals>\n            <phase>validate</phase>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>flatten-maven-plugin</artifactId>\n        <configuration>\n          <updatePomFile>true</updatePomFile>\n          <!--flattenMode>resolveCiFriendliesOnly</flattenMode -->\n          <flattenMode>oss</flattenMode>\n        </configuration>\n        <executions>\n          <execution>\n            <id>flatten</id>\n            <goals>\n              <goal>flatten</goal>\n            </goals>\n            <phase>process-resources</phase>\n          </execution>\n          <execution>\n            <id>flatten.clean</id>\n            <goals>\n              <goal>clean</goal>\n            </goals>\n            <phase>clean</phase>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>coverage</id>\n      <activation>\n        <activeByDefault>false</activeByDefault>\n        <property>\n          <name>coverage</name>\n        </property>\n      </activation>\n      <modules>\n        <module>report-aggregate</module>\n      </modules>\n    </profile>\n  </profiles>\n</project>\n"
        },
        "database": "PostgreSQL",
        "build_system": "Maven",
        "config_files": {
            "src/apps/infrastructure/config/Dockerfile": "ARG REPOSITORY=geoservercloud\nARG TAG=latest\n\nFROM $REPOSITORY/gs-cloud-base-jre:$TAG AS builder\nARG JAR_FILE=target/gs-cloud-*-bin.jar\n\nCOPY ${JAR_FILE} application.jar\n\nRUN java -Djarmode=layertools -jar application.jar extract\n\n##########\nFROM $REPOSITORY/gs-cloud-base-spring-boot:$TAG\n\n# WORKDIR already set to /opt/app/bin\n\nCOPY --from=builder dependencies/ ./\nCOPY --from=builder snapshot-dependencies/ ./\nCOPY --from=builder spring-boot-loader/ ./\n#see https://github.com/moby/moby/issues/37965\nRUN true\nCOPY --from=builder application/ ./\n\n# Either 'git' or 'native'.\nENV SPRING_PROFILES_ACTIVE=native,standalone\n# 'native' profile config, use the default config embedded in the Docker image.\n# Feel free to override with a mounted volume\nENV CONFIG_NATIVE_PATH=/etc/geoserver\n\n# Config for the 'git' profile\n# Uses the default sample git repository to download the services configuration from\nENV CONFIG_GIT_URI: https://github.com/geoserver/geoserver-cloud-config.git\n# Override to get the config from the appropriate release TAG or branch\nENV SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL: master\n# where to store the cloned repository, if unset, it'll use /tmp/config-repo-<randomid>\nENV CONFIG_GIT_BASEDIR: /tmp/git_config\n# avoid stack trace due to jgit not being able of creating a .config dir at $HOME\nENV XDG_CONFIG_HOME: /tmp\n\n# Execute the CDS training run\nRUN java -XX:ArchiveClassesAtExit=application.jsa \\\n-Dspring.context.exit=onRefreshed \\\n-Dserver.port=0 -Dmanagement.server.port=0 \\\norg.springframework.boot.loader.JarLauncher\nRUN rm -rf /tmp/*\n\nENV JAVA_TOOL_OPTIONS=\"${DEFAULT_JAVA_TOOL_OPTIONS} -XX:SharedArchiveFile=application.jsa\"\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "README.md",
            "pom.xml"
        ],
        "folders": [
            "src"
        ]
    }
}