{
    "docker_info": {
        "base_image": "$REPOSITORY/gs-cloud-base-jre:$TAG",
        "multi_stage_build": false,
        "exposed_ports": [],
        "user": [],
        "labels": [],
        "health_checks": [
            "HEALTHCHECK \\"
        ],
        "build_args": [
            "REPOSITORY=geoservercloud",
            "TAG=latest",
            "JAR_FILE=target/gs-cloud-*-bin.jar"
        ],
        "envs": [
            "ENV JAVA_TOOL_OPTIONS=\"${DEFAULT_JAVA_TOOL_OPTIONS} -XX:SharedArchiveFile=application.jsa\""
        ],
        "copy_instructions": [
            "COPY ${JAR_FILE} application.jar",
            "COPY --from=builder dependencies/ ./",
            "COPY --from=builder snapshot-dependencies/ ./",
            "COPY --from=builder spring-boot-loader/ ./"
        ],
        "execution": [
            {
                "command": "cmd",
                "arguments": [
                    "curl",
                    "-f",
                    "-s",
                    "-o",
                    "/dev/null",
                    "localhost:8080/actuator/health",
                    "||",
                    "exit",
                    "1"
                ]
            },
            {
                "command": "cmd",
                "arguments": [
                    "exec",
                    "env",
                    "USER_ID=\"$(id",
                    "-u)\"",
                    "USER_GID=\"$(id",
                    "-g)\"",
                    "java",
                    "$JAVA_OPTS",
                    "org.springframework.boot.loader.JarLauncher"
                ]
            }
        ],
        "run": [
            [
                "java -Djarmode=layertools -jar application.jar extract",
                ""
            ],
            [
                "true",
                "COPY --from=builder application/ ./"
            ],
            [
                "java -XX:ArchiveClassesAtExit=application.jsa \\",
                "-Dspring.context.exit=onRefreshed",
                "-Dspring.profiles.active=standalone,offline",
                "-Dserver.port=0 -Dmanagement.server.port=0",
                "org.springframework.boot.loader.JarLauncher"
            ],
            [
                "rm -rf /tmp/*",
                ""
            ]
        ]
    }
}