{
    "source_code_info": {
        "language": "Python",
        "framework": "Tornado",
        "dependencies": {
            "setup.py": "# Copyright 2017 IoT-Lab Team\n# Contributor(s) : see AUTHORS file\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions are met:\n#\n# 1. Redistributions of source code must retain the above copyright notice,\n# this list of conditions and the following disclaimer.\n#\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n# this list of conditions and the following disclaimer in the documentation\n# and/or other materials provided with the distribution.\n#\n# 3. Neither the name of the copyright holder nor the names of its contributors\n# may be used to endorse or promote products derived from this software without\n# specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n# POSSIBILITY OF SUCH DAMAGE.\n\n\"\"\"pyaiot package installation module.\"\"\"\n\nimport os\nfrom os.path import join as pjoin\nfrom setuptools import setup, find_packages\n\n\nPACKAGE = 'pyaiot'\n\n\ndef readme(fname):\n    \"\"\"Utility function to read the README. Used for long description.\"\"\"\n    return open(os.path.join(os.path.dirname(__file__), fname),\n                encoding='utf-8').read()\n\n\ndef get_version(package):\n    \"\"\"Extract package version without importing file.\n\n    Inspired from pep8 setup.py.\n    \"\"\"\n    with open(os.path.join(package, '__init__.py')) as init_fd:\n        for line in init_fd:\n            if line.startswith('__version__'):\n                return eval(line.split('=')[-1])\n\n\nif __name__ == '__main__':\n\n    setup(name=PACKAGE,\n          version=get_version(PACKAGE),\n          description=('Provides tools for setting up a complete IoT '\n                       'dashboard using standards protocols.'),\n          long_description=readme('README.md'),\n          author='IoT-LAB Team',\n          author_email='admin@iot-lab.info',\n          url='http://www.iot-lab.info',\n          license='BSD',\n          keywords=\"iot demonstration web coap mqtt\",\n          platforms='any',\n          packages=find_packages(),\n          scripts=[pjoin('bin', 'aiot-broker'),\n                   pjoin('bin', 'aiot-coap-gateway'),\n                   pjoin('bin', 'aiot-mqtt-gateway'),\n                   pjoin('bin', 'aiot-ws-gateway'),\n                   pjoin('bin', 'aiot-dashboard'),\n                   pjoin('bin', 'aiot-generate-keys')],\n          install_requires=[\n            'tornado>=6.0',\n            'aiocoap>=0.3',\n            'gmqtt',\n            'cryptography>=1.7.2'\n          ],\n          classifiers=[\n            'Development Status :: 4 - Beta',\n            'Programming Language :: Python :: 3 :: Only',\n            'Programming Language :: Python :: 3.6',\n            'Programming Language :: Python :: 3.7',\n            'Programming Language :: Python :: 3.8',\n            'Programming Language :: Python :: 3.9',\n            'Intended Audience :: Developers',\n            'Environment :: Console',\n            'Topic :: Communications',\n            'License :: OSI Approved :: ',\n            'License :: OSI Approved :: BSD License'],\n          zip_safe=False,\n          )\n"
        },
        "database": "Redis",
        "build_system": "setuptools",
        "config_files": {
            "docker/docker-compose.yml": "version: \"3\"\n\nservices:\n  broker:\n    image: pyaiot/broker\n    container_name: pyaiot-broker\n    restart: always\n    ports:\n      - 8000:8000\n\n  dashboard:\n    image: pyaiot/dashboard\n    container_name: pyaiot-dashboard\n    restart: always\n    ports:\n      - 8080:8080\n    environment:\n      BROKER_HOST: \"localhost\"\n      BROKER_PORT: \"8000\"\n      BROKER_SSL: \"False\"\n      WEB_PORT: \"8080\"\n      MAP_API_KEY: \"edit_me\"\n\n  coap-gw:\n    image: pyaiot/coap-gw\n    container_name: pyaiot-coap-gw\n    restart: always\n    ports:\n      - 5684:5683/udp\n    environment:\n      BROKER_HOST: \"pyaiot-broker\"\n      BROKER_PORT: \"8000\"\n",
            "docker/base/Dockerfile": "FROM python:3.7-slim-stretch\n\nLABEL maintainer=\"alexandre.abadie@inria.fr\"\n\nRUN apt-get update && apt-get install -y git && apt-get autoremove && apt-get autoclean\nRUN pip3 install git+https://github.com/pyaiot/pyaiot.git\n\nRUN aiot-generate-keys\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "run.sh"
        ],
        "folders": []
    }
}