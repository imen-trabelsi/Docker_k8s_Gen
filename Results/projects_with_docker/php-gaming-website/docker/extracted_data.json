{
    "source_code_info": {
        "language": "PHP",
        "framework": "Symfony",
        "dependencies": {
            "composer.json": "{\n  \"name\": \"marein/php-gaming-website\",\n  \"description\": \"A gaming website where people can play against each other.\",\n  \"license\": \"MIT\",\n  \"authors\": [\n    {\n      \"name\": \"Markus Reinhold\",\n      \"email\": \"markusreinhold@icloud.com\"\n    }\n  ],\n  \"repositories\": [\n    {\n      \"type\": \"composer\",\n      \"url\": \"https://gaming-platform.github.io/satis/\"\n    }\n  ],\n  \"autoload\": {\n    \"psr-4\": {\n      \"Gaming\\\\\": \"src/\"\n    }\n  },\n  \"autoload-dev\": {\n    \"psr-4\": {\n      \"Gaming\\\\Tests\\\\Unit\\\\\": \"tests/unit/\"\n    }\n  },\n  \"require\": {\n    \"php\": \"^8.4\",\n    \"ext-pcntl\": \"*\",\n    \"ext-posix\": \"*\",\n    \"ext-session\": \"*\",\n    \"doctrine/dbal\": \"^4.0\",\n    \"doctrine/doctrine-bundle\": \"^2.11\",\n    \"doctrine/doctrine-migrations-bundle\": \"^3.3\",\n    \"doctrine/migrations\": \"^3.7\",\n    \"doctrine/orm\": \"^3.0\",\n    \"gaming-platform/api\": \"^1.2\",\n    \"jms/serializer\": \"^3.17\",\n    \"marein/php-nchan-client\": \"^3.1\",\n    \"marein/symfony-lock-doctrine-migrations-bundle\": \"^1.0\",\n    \"marein/symfony-standard-headers-csrf-bundle\": \"^1.0\",\n    \"nyholm/psr7\": \"^1.5\",\n    \"php-amqplib/php-amqplib\": \"^3.2\",\n    \"predis/predis\": \"^2.0\",\n    \"psr/clock\": \"^1.0\",\n    \"psr/event-dispatcher\": \"^1.0\",\n    \"psr/log\": \"^3.0\",\n    \"symfony/asset\": \"^7.0\",\n    \"symfony/asset-mapper\": \"^7.0\",\n    \"symfony/clock\": \"^7.0\",\n    \"symfony/config\": \"^7.0\",\n    \"symfony/console\": \"^7.0\",\n    \"symfony/finder\": \"^7.0\",\n    \"symfony/form\": \"^7.1\",\n    \"symfony/framework-bundle\": \"^7.0\",\n    \"symfony/http-client\": \"^7.0\",\n    \"symfony/http-foundation\": \"^7.0\",\n    \"symfony/http-kernel\": \"^7.0\",\n    \"symfony/lock\": \"^7.0\",\n    \"symfony/monolog-bundle\": \"^3.8\",\n    \"symfony/runtime\": \"^7.1\",\n    \"symfony/security-bundle\": \"^7.0\",\n    \"symfony/service-contracts\": \"^3.3\",\n    \"symfony/translation-contracts\": \"^3.5\",\n    \"symfony/twig-bundle\": \"^7.0\",\n    \"symfony/uid\": \"^7.0\",\n    \"symfony/validator\": \"^7.0\",\n    \"symfony/yaml\": \"^7.0\",\n    \"twig/twig\": \"^3.4\"\n  },\n  \"require-dev\": {\n    \"codeception/codeception\": \"^5.0\",\n    \"codeception/module-asserts\": \"^3.0\",\n    \"codeception/module-webdriver\": \"^4.0\",\n    \"phpstan/extension-installer\": \"^1.4\",\n    \"phpstan/phpstan\": \"^2.1\",\n    \"phpstan/phpstan-doctrine\": \"^2.0\",\n    \"phpunit/phpunit\": \"^10.3\",\n    \"roave/security-advisories\": \"dev-master\",\n    \"squizlabs/php_codesniffer\": \"^3.11\",\n    \"symfony/debug-bundle\": \"^7.0\",\n    \"symfony/error-handler\": \"^7.0\",\n    \"symfony/stopwatch\": \"^7.0\",\n    \"symfony/web-profiler-bundle\": \"^7.0\"\n  },\n  \"config\": {\n    \"sort-packages\": true,\n    \"allow-plugins\": {\n      \"composer/package-versions-deprecated\": true,\n      \"phpstan/extension-installer\": true,\n      \"symfony/runtime\": true\n    }\n  }\n}\n"
        },
        "database": "Redis",
        "build_system": "Composer",
        "config_files": {
            ".env": "############################\n#          Shared          #\n############################\n# dev|prod\nAPP_ENV='dev'\nAPP_KERNEL_SECRET='ThisTokenIsNotSoSecretChangeIt'\nAPP_WAIT_FOR='unix:///var/run/proxysql/proxysql.sock,mysql:3306,redis:6379,rabbitmq:5672,nchan:81'\nAPP_RUN_MIGRATIONS='1'\nAPP_NCHAN_BASE_URL='http://nchan:81'\nAPP_RABBIT_MQ_DSN='amqp://guest:guest@rabbitmq:5672?heartbeat=60&prefetchCount=30'\n\n############################\n#       Chat Context       #\n############################\nAPP_CHAT_DOCTRINE_DBAL_URL='mysqli://root:password@localhost/chat?persistent=1&unix_socket=/var/run/proxysql/proxysql.sock'\nAPP_CHAT_PREDIS_CLIENT_URL='redis://redis:6379?persistent=1'\n\n############################\n#   Connect Four Context   #\n############################\nAPP_CONNECT_FOUR_DOCTRINE_DBAL_URL='mysqli://root:password@localhost/%env(APP_CONNECT_FOUR_DOCTRINE_DBAL_DATABASE)%?persistent=1&unix_socket=/var/run/proxysql/proxysql.sock'\nAPP_CONNECT_FOUR_DOCTRINE_DBAL_DATABASE='connect-four'\nAPP_CONNECT_FOUR_DOCTRINE_DBAL_SHARDS='connect-four'\nAPP_CONNECT_FOUR_PUBLISH_TO_BROWSER_SHARDS='1'\nAPP_CONNECT_FOUR_PREDIS_CLIENT_URL='redis://redis:6379?persistent=1'\n\n############################\n#     Identity Context     #\n############################\nAPP_IDENTITY_DOCTRINE_DBAL_URL='mysqli://root:password@localhost/identity?persistent=1&unix_socket=/var/run/proxysql/proxysql.sock'\n\n############################\n#  Web Interface Context   #\n############################\nAPP_WEB_INTERFACE_PREDIS_CLIENT_URL='redis://redis:6379?persistent=1'\n",
            "docker-compose.yml": "version: '3.4'\n\nx-php-container-volumes:\n    &php-container-volumes\n    volumes:\n        - ./:/project:delegated\n        - php-vendor:/project/vendor\n        - asset-vendor:/project/assets/vendor\n        - proxysql.sock:/var/run/proxysql\n        -   type: tmpfs\n            target: /project/var\n\nx-php-container:\n    &php-container\n    <<: *php-container-volumes\n    build:\n        context: .\n        dockerfile: ./docker/Dockerfile\n    env_file: ./.env\n    depends_on:\n        - mysql\n        - proxysql\n        - redis\n        - rabbitmq\n        - nchan\n    restart: on-failure\n\nservices:\n    ##############################\n    #  Database and application  #\n    ##############################\n    traefik:\n        image: traefik:2.10\n        command:\n            - --metrics.prometheus=true\n            - --providers.docker\n            - --providers.docker.exposedbydefault=false\n        ports:\n            - \"80:80\"\n        depends_on:\n            - nchan\n            - php-fpm\n        volumes:\n            - /var/run/docker.sock:/var/run/docker.sock\n        labels:\n            - \"prometheus-job=traefik\"\n            - \"prometheus-port=8080\"\n    grafana:\n        image: ghcr.io/gaming-platform/docker-grafana:10.0\n        ports:\n            - \"8083:3000\"\n    prometheus:\n        image: ghcr.io/gaming-platform/docker-prometheus:2.45\n        command: --config.file=/etc/prometheus/docker.yml\n        volumes:\n            - prometheus:/prometheus\n            - /var/run/docker.sock:/var/run/docker.sock\n        restart: on-failure\n    node-exporter:\n        image: prom/node-exporter:v1.6.0\n        labels:\n            - \"prometheus-job=node\"\n            - \"prometheus-port=9100\"\n    mysql:\n        image: ghcr.io/gaming-platform/docker-mysql:8.2\n        volumes:\n            - mysql:/var/lib/mysql\n        restart: on-failure\n    mysql-exporter:\n        image: prom/mysqld-exporter:v0.15.0\n        command: --mysqld.username=root --mysqld.address mysql:3306\n        environment:\n            MYSQLD_EXPORTER_PASSWORD: password\n        labels:\n            - \"prometheus-job=mysql\"\n            - \"prometheus-port=9104\"\n    proxysql:\n        image: ghcr.io/gaming-platform/docker-proxysql:2.5\n        environment:\n            PROXYSQL_CONFIG: |\n                admin_variables: {\n                    restapi_enabled=\"true\"\n                    hash_passwords=\"false\"\n                }\n                mysql_variables: {\n                    interfaces=\"/var/run/proxysql/proxysql.sock\"\n                    server_version=\"8.2\"\n                    monitor_username=\"root\"\n                    monitor_password=\"password\"\n                    auto_increment_delay_multiplex=0\n                }\n                mysql_servers: (\n                    {hostgroup=1,address=\"mysql\",port=3306,max_connections=100}\n                )\n                mysql_users: (\n                    {username=\"root\",password=\"password\",default_hostgroup=1}\n                )\n        depends_on:\n            - mysql\n        volumes:\n            - proxysql.sock:/var/run/proxysql\n        labels:\n            - \"prometheus-job=proxysql\"\n            - \"prometheus-port=6070\"\n        restart: on-failure\n    redis:\n        image: ghcr.io/gaming-platform/docker-redis:7.2\n        volumes:\n            - redis:/data\n        restart: on-failure\n    redis-exporter:\n        image: oliver006/redis_exporter:v1.51.0\n        command:\n            - '-redis.addr=redis:6379'\n        labels:\n            - \"prometheus-job=redis\"\n            - \"prometheus-port=9121\"\n    rabbitmq:\n        image: ghcr.io/gaming-platform/docker-rabbitmq:3.12\n        hostname: rabbitmq\n        volumes:\n            - rabbitmq:/var/lib/rabbitmq/mnesia\n        labels:\n            - \"prometheus-job=rabbitmq\"\n            - \"prometheus-port=15692\"\n            - \"prometheus-path=/metrics/per-object\"\n        restart: on-failure\n    nchan:\n        image: ghcr.io/gaming-platform/docker-nchan:1.3\n        restart: on-failure\n        labels:\n            - \"traefik.enable=true\"\n            - \"traefik.http.routers.nchan.priority=20\"\n            - \"traefik.http.routers.nchan.rule=PathPrefix(`/sse`)\"\n            - \"traefik.http.routers.nchan.middlewares=nchan-stripprefix\"\n            - \"traefik.http.middlewares.nchan-stripprefix.stripprefix.prefixes=/sse\"\n            - \"prometheus-job=nchan\"\n            - \"prometheus-port=81\"\n    php-fpm:\n        <<: *php-container\n        labels:\n            - \"traefik.enable=true\"\n            - \"traefik.http.routers.php-fpm.priority=10\"\n            - \"traefik.http.routers.php-fpm.rule=PathPrefix(`/`)\"\n            - \"traefik.http.services.php-fpm.loadbalancer.server.port=80\"\n\n    ##############################\n    #   Long running processes   #\n    ##############################\n    php-connect-four-follow-event-store:\n        <<: *php-container\n        command: bin/restartOnChange bin/console connect-four:follow-event-store pointer all\n    php-connect-four-publish-running-games-count-to-nchan:\n        <<: *php-container\n        command: bin/restartOnChange bin/console connect-four:publish-running-games-count-to-nchan\n    php-chat-follow-event-store:\n        <<: *php-container\n        command: bin/restartOnChange bin/console chat:follow-event-store pointer all\n    php-identity-follow-event-store:\n        <<: *php-container\n        command: bin/restartOnChange bin/console identity:follow-event-store pointer all\n    php-consume-messages:\n        <<: *php-container\n        command: bin/restartOnChange bin/console gaming:consume-messages all\n\n    ##############################\n    #     Development helper     #\n    ##############################\n    php:\n        <<: *php-container-volumes\n        build:\n            context: .\n            dockerfile: ./docker/Dockerfile\n        entrypoint: ''\n        command: 'true'\n        env_file: ./.env\n    phpmyadmin:\n        image: phpmyadmin/phpmyadmin:5.2\n        environment:\n            PMA_HOST: mysql\n            PMA_USER: root\n            PMA_PASSWORD: password\n        ports:\n            - \"8081:80\"\n        depends_on:\n            - mysql\n    phpredisadmin:\n        image: erikdubbelboer/phpredisadmin:1\n        environment:\n            REDIS_1_HOST: redis\n        ports:\n            - \"8082:80\"\n        depends_on:\n            - redis\n\nvolumes:\n    asset-vendor:\n    php-vendor:\n    mysql:\n    proxysql.sock:\n    redis:\n    rabbitmq:\n    prometheus:\n",
            "docker/Dockerfile": "ARG environment=development\n\n##############################\n#     Build dependencies     #\n##############################\nFROM ghcr.io/gaming-platform/docker-php-fpm:8.4-development as builder\n\nARG environment=development\n\nWORKDIR /project\n\nCOPY /docker/composer-install.sh /docker/composer-install-after-code-copy.sh /\nCOPY /composer.json /composer.lock /project/\nRUN /composer-install.sh\n\nCOPY / /project\nRUN /composer-install-after-code-copy.sh\n\n##############################\n#       Build php-fpm        #\n##############################\nFROM ghcr.io/gaming-platform/docker-php-fpm:8.4-$environment\n\nARG environment=development\n\nWORKDIR /project\n\nCOPY /docker/entrypoint.sh /docker/warmup.sh /\n\nCOPY --from=builder /project /project\n\nRUN /warmup.sh\n\nCOPY /docker/${environment}.ini /etc/php/8.4/fpm/conf.d/\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php-http\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "composer-install-after-code-copy.sh",
            "composer-install.sh",
            "development.ini",
            "entrypoint.sh",
            "production.ini",
            "warmup.sh"
        ],
        "folders": []
    }
}