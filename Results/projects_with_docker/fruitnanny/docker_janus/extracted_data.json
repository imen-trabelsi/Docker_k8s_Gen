{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"fruitnanny\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Raspberry Pi based baby monitor\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"grunt\": \"grunt\",\n    \"start\": \"node server/app.js\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"Dmitry Ivanov\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@types/body-parser\": \"0.0.33\",\n    \"@types/ejs\": \"^2.3.30\",\n    \"@types/express\": \"^4.0.33\",\n    \"@types/mime\": \"0.0.29\",\n    \"@types/node\": \"^6.0.41\",\n    \"@types/serve-static\": \"^1.7.31\",\n    \"body-parser\": \"^1.15.2\",\n    \"ejs\": \"^2.5.2\",\n    \"express\": \"^4.14.0\",\n    \"grunt\": \"^1.0.1\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-ts\": \"^6.0.0-beta.3\",\n    \"grunt-tslint\": \"^3.2.1\",\n    \"pug\": \"^2.0.3\",\n    \"tslint\": \"^3.15.1\",\n    \"typescript\": \"^2.0.3\"\n  },\n  \"devDependencies\": {\n    \"grunt-contrib-clean\": \"^1.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-watch\": \"^1.0.0\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '3'\nservices:\n  janus:\n    image: ivadim/fruitnanny-janus\n    restart: always\n    privileged: true\n    network_mode: \"host\"\n    volumes:\n      - ./configuration/janus:/etc/janus\n      - ./configuration/ssl:/etc/fruitnanny-ssl\n    expose:\n      - 8088 # api http\n      - 8089 # api https\n      - 5002 # audio\n      - 5004 # video\n\n  gstreamer-video:\n    image: ivadim/fruitnanny-gstreamer\n    restart: always\n    privileged: true\n    network_mode: \"host\"\n    depends_on:\n      - janus\n    volumes:\n      - /etc/timezone:/etc/timezone:ro\n      - /etc/localtime:/etc/localtime:ro\n    devices:\n      - \"/dev/vchiq:/dev/vchiq\"\n    command: gst-launch-1.0 -v rpicamsrc name=src preview=0 exposure-mode=night fullscreen=0 bitrate=1000000 annotation-mode=time+date annotation-text-size=20 ! video/x-h264,width=960,height=540,framerate=12/1,profile=constrained-baseline ! queue max-size-bytes=0 max-size-buffers=0 ! h264parse ! rtph264pay config-interval=1 pt=96 ! queue ! udpsink host=127.0.0.1 port=5004  sync=false\n\n  gstreamer-audio:\n    image: ivadim/fruitnanny-gstreamer\n    restart: always\n    privileged: true\n    network_mode: \"host\"\n    depends_on:\n      - janus\n    devices:\n      - \"/dev/snd:/dev/snd\"\n        #command: gst-launch-1.0 -v pulsesrc device=microphone ! audioconvert ! audioresample ! opusenc ! rtpopuspay ! queue max-size-bytes=0 max-size-buffers=0 ! udpsink host=127.0.0.1 port=5002\n    command: \"/audio_entry.sh\"\n\n  fruitnanny:\n    image: ivadim/fruitnanny-app\n    restart: always\n    privileged: true\n    volumes:\n      - ./fruitnanny_config.js:/opt/fruitnanny/fruitnanny_config.js\n      - ./bin:/opt/fruitnanny/bin  \n    network_mode: \"host\"\n    depends_on:\n      - janus\n    expose:\n      - 7000\n\n  nginx:\n    image: arm32v6/nginx:alpine\n    restart: always\n    network_mode: \"host\"\n    depends_on:\n      - janus\n      - fruitnanny\n    volumes:\n      - ./configuration/nginx/fruitnanny_http:/etc/nginx/conf.d/default.conf\n      - ./configuration/nginx/fruitnanny_https:/etc/nginx/conf.d/default-ssl.conf\n      - ./configuration/nginx/.htpasswd:/etc/nginx/.htpasswd\n      - ./configuration/ssl:/etc/fruitnanny-ssl\n    ports:\n      - \"80:80\"\n      - \"443:443\"",
            "docker/janus/Dockerfile": "FROM balenalib/raspberry-pi:buster\n\nRUN buildDeps=\"build-essential git debhelper gobject-introspection gtk-doc-tools libgirepository1.0-dev libglib2.0-dev libgnutls28-dev libgstreamer1.0-dev libgupnp-igd-1.0-dev autotools-dev dh-autoreconf dh-systemd gengetopt libavcodec-dev libavformat-dev libavutil-dev libconfig-dev libcurl4-openssl-dev libcurl4-openssl-dev libjansson-dev liblua5.3-dev libmicrohttpd-dev libnanomsg-dev libogg-dev libopus-dev librabbitmq-dev libre-dev libsofia-sip-ua-dev libsrtp2-dev libssl-dev libsystemd-dev libusrsctp-dev libwebsockets-dev pkg-config rename fakeroot gir1.2-glib-2.0 libgirepository-1.0-1 pandoc brotli doxygen graphviz node-rollup-plugin-replace pigz rollup uglifyjs node-terser uglifyjs.terser\" \\\n    && runDeps=\"avahi-daemon libnss-mdns\" \\\n    && echo 'APT::Install-Recommends \"false\";' >/etc/apt/apt.conf.d/00recommends \\\n    && echo 'APT::Install-Suggests \"false\";' >>/etc/apt/apt.conf.d/00recommends \\\n    && apt-get update \\\n    && apt-get install $buildDeps $runDeps \\\n    && git clone --depth 1 --single-branch --branch debian/0.1.16-1 https://salsa.debian.org/telepathy-team/libnice.git /tmp/libnice \\\n    && cd /tmp/libnice \\\n    && dpkg-buildpackage -b --no-sign -rfakeroot \\\n    && dpkg -i ../libnice10_0.1.16-1_armhf.deb ../gir1.2-nice-0.1_0.1.16-1_armhf.deb ../libnice-dev_0.1.16-1_armhf.deb \\\n    && git clone --depth 1 --single-branch --branch debian/0.7.3-2 https://salsa.debian.org/pkg-voip-team/janus.git  /tmp/janus \\\n    && cd /tmp/janus \\\n    && dpkg-buildpackage -b --no-sign -rfakeroot \\\n    && dpkg -i ../janus_0.7.3-2_armhf.deb ../janus-tools_0.7.3-2_armhf.deb \\\n    && cd / \\\n    && apt-get --purge remove libnice-dev $buildDeps \\\n    && apt-get --purge autoremove \\\n    && apt-get clean \\\n    && rm -rf /tmp/* \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY docker/janus/start.sh /start.sh\n\nCMD /start.sh\n",
            "azure-pipelines.yml": "name: $(major).$(minor).$(patch)\n\ntrigger:\n- master\n\npr: none\n\nvariables:\n  major: 1\n  minor: 0\n  patch: $[counter('versioncounter', 1)]\n\njobs:\n  - job: Build\n    pool:\n      vmImage: 'ubuntu-18.04'\n    strategy:\n      matrix:\n        Janus:\n          stage.name: 'janus'\n          label.name: 'fruitnanny-janus'\n          container.name: 'ivadim/fruitnanny-janus'\n        GStreamer:\n          stage.name: 'gstreamer'\n          label.name: 'fruitnanny-gstreamer'\n          container.name: 'ivadim/fruitnanny-gstreamer'\n        Fruitnanny:\n          stage.name: 'fruitnanny'\n          label.name: 'fruitnanny-app'\n          container.name: 'ivadim/fruitnanny-app'\n      maxParallel: 3\n    steps:\n      - script: |\n          docker version\n          docker run --rm --privileged multiarch/qemu-user-static:register --reset\n          docker build . -f docker/$(stage.name)/Dockerfile -t $(container.name)\n          docker images\n          docker inspect $(container.name)\n        displayName: 'Build $(stage.name) Container'\n\n      - script: |\n          docker image save $(container.name) -o $(Build.ArtifactStagingDirectory)/$(label.name)-v$(Build.BuildNumber).tgz\n        displayName: 'Export $(stage.name) Container Image'\n\n      - task: PublishBuildArtifacts@1\n        inputs:\n          pathtoPublish: $(Build.ArtifactStagingDirectory)\n          artifactName: images"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile"
        ],
        "folders": []
    }
}