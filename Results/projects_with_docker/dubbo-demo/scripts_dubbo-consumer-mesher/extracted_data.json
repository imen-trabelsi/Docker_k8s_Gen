{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\"?>\n<project\n        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n        xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.service</groupId>\n    <artifactId>csedemo</artifactId>\n    <version>1.0.0</version>\n    <packaging>jar</packaging>\n\n    <name>csedemo</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <cse.version>2.2.31</cse.version>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <demo.main>com.service.csedemo.CsedemoApplication</demo.main>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.huawei.paas.cse</groupId>\n                <artifactId>cse-dependency</artifactId>\n                <version>${cse.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>com.huawei.paas.cse</groupId>\n            <artifactId>cse-solution-service-engine</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <version>2.10</version>\n                <executions>\n                    <execution>\n                        <id>copy-dependencies</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>copy-dependencies</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>target/lib</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <artifactId>maven-antrun-plugin</artifactId>\n                <version>1.8</version>\n                <executions>\n                    <execution>\n                        <id>make-vm-zip</id>\n                        <phase>package</phase>\n                        <configuration>\n                        <target>\n                            <zip destfile=\"target/${build.finalName}.zip\">\n                            <zipfileset dir=\"target/lib\" prefix=\"lib\" />\n                            <zipfileset dir=\"target\" includes=\"*.jar\" />\n                            <zipfileset dir=\".\" includes=\"start.sh\" />\n                            </zip>\n                        </target>\n                        </configuration>\n                            <goals>\n                                <goal>run</goal>\n                            </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>2.6</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addClasspath>true</addClasspath>\n                            <classpathPrefix>./lib/</classpathPrefix>\n                            <mainClass>${demo.main}</mainClass>\n                        </manifest>\n                        <manifestEntries>\n                            <Class-Path>.</Class-Path>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "scripts/docker-compose.yml": "version: '3'\nservices:\n\n  meshprovider:\n    build:\n      context: dubbo-provider-mesher/\n      dockerfile: Dockerfile\n#    image: meshdubboprov:v1\n    environment: \n      - CSE_REGISTRY_ADDR=http://serveraddress:30100\n\n  provider:\n    build:\n      context: dubbo-provider/\n      dockerfile: Dockerfile\n#    image: provider:v1\n    network_mode: \"service:meshprovider\"\n    depends_on: \n      - \"meshprovider\"\n\n  meshconsumer:\n    build:\n      context: dubbo-consumer-mesher/\n      dockerfile: Dockerfile\n#    image: meshdubbocons:latest\n    environment:\n      - CSE_REGISTRY_ADDR=http://serveraddress:30100\n    depends_on: \n      - \"provider\"\n \n\n  dubboconsumer:\n    build:\n      context: dubbo-consumer/\n      dockerfile: Dockerfile\n#    image: consumer:v1\n    network_mode: \"service:meshconsumer\"\n    depends_on: \n      - \"meshconsumer\"\n\n  csedemo:\n    build:\n      context: cse-demo/\n      dockerfile: Dockerfile\n#    image: csedemo:v1\n    depends_on: \n      - \"dubboconsumer\"\n\n  \n  meshercsecons:\n    build:\n      context: cse-consumer-mesher/\n      dockerfile: Dockerfile\n#    image: meshcsecons:latest\n    environment:\n      - CSE_REGISTRY_ADDR=http://serveraddress:30100\n    network_mode: \"service:csedemo\"\n    depends_on: \n      - \"csedemo\"\n\n\n  cseconsumer:\n    build:\n      context: cse-consumer/\n      dockerfile: Dockerfile\n#    image: cseconsumer:v1\n    network_mode: \"service:csedemo\"\n    depends_on: \n      - \"meshercsecons\" \n",
            "scripts/dubbo-consumer-mesher/Dockerfile": "FROM ninokop/dubbo-demo-base\nRUN cd home/\nRUN mkdir /app\nADD . /app\n#RUN bash app/mystart.sh\nENTRYPOINT [\"bash\",\"app/mystart.sh\"]\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "mystart.sh"
        ],
        "folders": [
            "conf"
        ]
    }
}