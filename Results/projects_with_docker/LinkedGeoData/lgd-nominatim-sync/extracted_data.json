{
    "source_code_info": {
        "language": "Java",
        "framework": "Java",
        "dependencies": {
            "pom.xml": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\nxsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.aksw.linkedgeodata</groupId>\n    <artifactId>linkedgeodata-docker</artifactId>\n    <parent>\n\t    <groupId>org.aksw.linkedgeodata</groupId>\n\t    <artifactId>linkedgeodata-parent</artifactId>\n\t    <version>4.0.0-SNAPSHOT</version>\n    </parent>\n    <packaging>jar</packaging>\n    <dependencies>\n        <dependency>\n            <groupId>org.aksw.linkedgeodata</groupId>\n            <artifactId>linkedgeodata-nominatim-core</artifactId>\n\t    <version>2.5.1-1-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n            </plugin>\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>\n                    maven-dependency-plugin</artifactId>\n                    <version>3.0.2</version>\n                    <executions>\n                        <execution>\n                            <phase>prepare-package</phase>\n                            <!-- <phase>package</phase> -->\n                            <goals>\n                                <goal>copy-dependencies</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <!-- <useBaseVersion>false</useBaseVersion> -->\n                        <overWriteReleases>\n                        false</overWriteReleases>\n                        <overWriteSnapshots>\n                        true</overWriteSnapshots>\n                        <excludeTransitive>true</excludeTransitive>\n                        <includeScope>runtime</includeScope>\n                        <outputDirectory>\n                        ${project.build.directory}/lib</outputDirectory>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n\n\n</project>\n"
        },
        "database": null,
        "build_system": "Maven",
        "config_files": {
            "docker-compose.yml": "version: '3.3'\n\nservices:\n\n  lgd-db:\n    env_file: .env\n    build:\n      context: ./lgd-db\n    environment:\n      - POSTGRES_DB=${DB_NAME}\n      - POSTGRES_USER=${DB_USER}\n      - POSTGRES_PASSWORD=${DB_PASS}\n      - PGDATA=/var/lib/postgresql/data\n    sysctls:\n      - kernel.shmmax=10737418240\n    shm_size: 10g\n    volumes:\n      - lgd-db-vol:/var/lib/postgresql/data\n    ports:\n      - ${DB_PORT_EXPOSE}:5432\n    restart: always\n    networks:\n      - lgd-net\n\n  lgd-nominatim-sync:\n    env_file: .env\n    build:\n      context: ./lgd-nominatim-sync\n    depends_on:\n      - lgd-db\n    volumes:\n      - lgd-nominatim-sync-vol:/lgd/nominatim/src/settings\n    restart: on-failure\n    networks:\n      - lgd-net\n\n  lgd-osmosis-sync:\n    env_file: .env\n    build:\n      context: ./lgd-osmosis-sync\n    depends_on:\n      - lgd-db\n    volumes:\n      - lgd-osmosis-sync-vol:/lgd/osmosis/sync\n    restart: on-failure\n    networks:\n      - lgd-net\n\n  lgd-nominatim-web:\n    env_file: .env\n    build:\n      context: ./lgd-nominatim-web\n    depends_on:\n      - lgd-db\n    restart: always\n    ports:\n      - ${NOMINATIM_PORT_EXPOSE}:80\n    networks:\n      - lgd-net\n\n  lgd-ontop-web:\n    env_file: .env\n    build:\n      context: ./lgd-ontop-web\n    environment:\n      - ONTOP_JAVA_ARGS=-Xmx2g\n      - ONTOP_DB_USER=${DB_USER}\n      - ONTOP_DB_PASSWORD=${DB_PASS}\n      - ONTOP_DB_URL=jdbc:${DB_TYPE_JDBC}://${DB_HOST}:${DB_PORT}/${DB_NAME}\n      - ONTOP_DB_DRIVER=org.postgresql.Driver\n      - ONTOP_DEBUG=true\n      - ONTOP_DEV_MODE=true\n      - ONTOP_MAPPING_FILE=/opt/ontop/input/lgd.obda\n      - ONTOP_ONTOLOGY_FILE=/opt/ontop/input/lgd.owl\n      - ONTOP_XML_CATALOG_FILE=/opt/ontop/input/catalog-v001.xml\n      - ONTOP_PORTAL_FILE=/opt/ontop/input/lgd.portal.toml\n    ports:\n      - ${ONTOP_PORT_EXPOSE}:8080\n    depends_on:\n      - lgd-db\n    restart: always\n    networks:\n      - lgd-net\n\n  lgd-sparqlify-web:\n    env_file: .env\n    build:\n      context: ./lgd-sparqlify-web\n    ports:\n      - ${SPARQLIFY_PORT_EXPOSE}:7531\n    depends_on:\n      - lgd-db\n    volumes:\n      - lgd-sparqlify-web-vol:/lgd/sparqlify/conf\n    restart: always\n    networks:\n      - lgd-net\n\n  lgd-pubby-web:\n    image: aksw/dld-present-pubby\n    env_file: .env\n    environment:\n      - STORE_SPARQL_ENDPOINT_URL=${PUBBY_ENDPOINT_URL}\n      - STORE_MAIN_GRAPH=${PUBBY_DEFAULT_GRAPH}\n      - DATASET_BASE=${PUBBY_DATASET_BASE}\n      - WEB_BASE=${PUBBY_WEB_BASE}\n      - INDEX_RESOURCE=${PUBBY_INDEX_RESOURCE}\n      - PORT=8080\n    ports:\n      - ${PUBBY_PORT_EXPOSE}:8080\n    depends_on:\n      - lgd-sparqlify-web\n#     - lgd-ontop-web\n    restart: always\n    networks:\n      - lgd-net\n\nvolumes:\n  lgd-db-vol:\n  lgd-osmosis-sync-vol:\n  lgd-nominatim-sync-vol:\n  lgd-sparqlify-web-vol:\n\nnetworks:\n  lgd-net:\n\n",
            "lgd-nominatim-sync/Dockerfile": "FROM lgd-build-nominatim:4.0.1\nMAINTAINER Claus Stadler <cstadler@informatik.uni-leipzig.de>\n\n#COPY target/linkedgeodata.deb .\n#RUN dpkg -i linkedgeodata.deb || true\n#RUN apt-get install -y -f\n\nCOPY start.sh .\nCOPY wait-for-postgres.sh .\n\nRUN chmod +x ./start.sh ./wait-for-postgres.sh\n\nCMD [ \"./wait-for-postgres.sh\", \"./start.sh\" ]\n\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            "Dockerfile",
            "start.sh",
            "wait-for-postgres.sh"
        ],
        "folders": []
    }
}