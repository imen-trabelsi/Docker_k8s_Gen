{
    "source_code_info": {
        "language": "JavaScript",
        "framework": "Node.js",
        "dependencies": {
            "package.json": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.0.0\",\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\",\n    \"extract-translations\": \"ngx-translate-extract --input ./src --output ./src/assets/i18n/*.json --clean --sort --format namespaced-json --marker _\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/animations\": \"^7.2.16\",\n    \"@angular/common\": \"^7.2.16\",\n    \"@angular/compiler\": \"^7.2.16\",\n    \"@angular/core\": \"^7.2.16\",\n    \"@angular/forms\": \"^7.2.16\",\n    \"@angular/platform-browser\": \"^7.2.16\",\n    \"@angular/platform-browser-dynamic\": \"^7.2.16\",\n    \"@angular/router\": \"^7.2.16\",\n    \"@ngx-translate/core\": \"^11.0.1\",\n    \"@ngx-translate/http-loader\": \"^4.0.0\",\n    \"angular-highcharts\": \"^8.0.3\",\n    \"angulartics2\": \"^7.5.2\",\n    \"base\": \"^3.0.0\",\n    \"blakejs\": \"^1.1.0\",\n    \"bulma\": \"^0.7.4\",\n    \"core-js\": \"^2.6.11\",\n    \"extend-shallow\": \"^3.0.2\",\n    \"faker\": \"^4.1.0\",\n    \"font-awesome\": \"^4.7.0\",\n    \"highcharts\": \"^7.2.2\",\n    \"is-extendable\": \"^1.0.1\",\n    \"lodash\": \"^4.17.19\",\n    \"lodash.mergewith\": \"^4.6.2\",\n    \"messageformat\": \"^2.3.0\",\n    \"mixin-deep\": \"^2.0.1\",\n    \"ngx-jsonapi\": \"^2.1.15\",\n    \"ngx-markdown\": \"^8.2.2\",\n    \"ngx-timeago\": \"^1.0.4\",\n    \"ngx-translate-messageformat-compiler\": \"^4.7.0\",\n    \"ngx-webstorage-service\": \"^4.1.0\",\n    \"node-sass\": \"^4.14.1\",\n    \"rxjs\": \"^6.5.5\",\n    \"set-value\": \"^3.0.2\",\n    \"tslib\": \"^1.13.0\",\n    \"zone.js\": \"~0.8.26\"\n  },\n  \"devDependencies\": {\n    \"@angular-builders/custom-webpack\": \"^7.4.3\",\n    \"@angular-devkit/build-angular\": \"^0.13.10\",\n    \"@angular/cli\": \"^7.3.10\",\n    \"@angular/compiler-cli\": \"^7.2.16\",\n    \"@angular/language-service\": \"^7.2.16\",\n    \"@biesbjerg/ngx-translate-extract\": \"^3.0.5\",\n    \"@types/google.analytics\": \"0.0.40\",\n    \"@types/jasmine\": \"~2.8.8\",\n    \"@types/jasminewd2\": \"^2.0.8\",\n    \"@types/node\": \"^8.10.60\",\n    \"codelyzer\": \"~4.5.0\",\n    \"jasmine-core\": \"~2.99.1\",\n    \"jasmine-spec-reporter\": \"~4.2.1\",\n    \"karma\": \"~4.0.0\",\n    \"karma-chrome-launcher\": \"~2.2.0\",\n    \"karma-coverage-istanbul-reporter\": \"^2.1.1\",\n    \"karma-jasmine\": \"~1.1.2\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"protractor\": \"^5.4.4\",\n    \"ts-node\": \"~7.0.0\",\n    \"tslint\": \"~5.11.0\",\n    \"typescript\": \"~3.2.2\"\n  }\n}\n"
        },
        "database": null,
        "build_system": "npm",
        "config_files": {
            "docker-compose.yml": "version: '3.2'\n\nservices:\n\n  explorer-api:\n    build: explorer-api/.\n    image: polkascan/pre-explorer-api:latest\n    hostname: explorer-api\n    volumes:\n      - './explorer-api:/usr/src/app'\n    command: ./start.sh\n    environment:\n      - PYTHONPATH=/usr/src/app\n      - ENVIRONMENT=prod\n      - DB_HOST=mysql\n      - DB_PORT=3306\n      - DB_USERNAME=root\n      - DB_PASSWORD=root\n      - DB_NAME=polkascan\n      - SUBSTRATE_RPC_URL=http://substrate-node:9933/\n      - SUBSTRATE_ADDRESS_TYPE=42\n      - TYPE_REGISTRY=kusama\n      - SUBSTRATE_METADATA_VERSION=9\n    depends_on:\n      - mysql\n      - substrate-node\n\n  harvester-api:\n    build: harvester/.\n    image: polkascan/pre-harvester:latest\n    hostname: harvester-api\n    volumes:\n      - './harvester:/usr/src/app'\n    command: ./start.sh\n    environment: &env\n      - CELERY_BROKER=redis://redis:6379/0\n      - CELERY_BACKEND=redis://redis:6379/0\n      - PYTHONPATH=/usr/src/app:/usr/src/app/py-substrate-interface/:/usr/src/app/py-scale-codec/\n      - ENVIRONMENT=prod\n      - DB_HOST=mysql\n      - DB_PORT=3306\n      - DB_USERNAME=root\n      - DB_PASSWORD=root\n      - DB_NAME=polkascan\n      - SUBSTRATE_RPC_URL=http://substrate-node:9933/\n      - TYPE_REGISTRY=kusama\n      - SUBSTRATE_ADDRESS_TYPE=42\n      - SUBSTRATE_METADATA_VERSION=9\n      - NEW_SESSION_EVENT_HANDLER=True\n    depends_on:\n      - redis\n      - mysql\n      - substrate-node\n\n  harvester-worker:\n    build: harvester/.\n    image: polkascan/pre-harvester:latest\n    volumes:\n      - './harvester:/usr/src/app'\n    command: celery -A app.tasks worker --loglevel=INFO\n    environment: *env\n    depends_on:\n      - redis\n      - mysql\n\n  harvester-beat:\n    build: harvester/.\n    image: polkascan/pre-harvester:latest\n    volumes:\n      - './harvester:/usr/src/app'\n      - '/usr/src/app/data'\n    command: celery -A app.tasks beat --loglevel=INFO  --schedule=\"data/celerybeat-schedule\" --pidfile=\"data/celerybeat.pid\"\n    environment: *env\n    depends_on:\n      - redis\n\n  harvester-monitor:\n    build: harvester/.\n    image: polkascan/pre-harvester:latest\n    ports:\n      - '5555:5555'\n    command:  flower -A app.tasks --port=5555 --broker=redis://redis:6379/0\n    depends_on:\n      - redis\n\n  redis:\n    image: redis:3.2.11\n    hostname: redis\n\n  mysql:\n    image: mysql:8.0.23\n    hostname: mysql\n    volumes:\n      - 'db-data:/var/lib/mysql'\n    ports:\n      - '33061:3306'\n    environment:\n      - MYSQL_ROOT_PASSWORD=root\n      - MYSQL_DATABASE=polkascan\n\n  substrate-node:\n    image: polkasource/substrate-client:kusama-latest\n    hostname: substrate-node\n    volumes:\n      - 'substrate-data:/data'\n    ports:\n      - '30333:30333'\n      - '9933:9933'\n      - '9944:9944'\n    command: --dev --rpc-external --ws-external --rpc-cors=all --pruning=archive\n\n  explorer-gui:\n    image: polkascan/pre-explorer-gui:latest\n    build:\n      context: explorer-gui/.\n      args:\n        NETWORK_NAME: Kusama Dev\n        NETWORK_ID: kusama\n        NETWORK_TYPE: pre\n        CHAIN_TYPE: relay\n        NETWORK_TOKEN_SYMBOL: KSM\n        NETWORK_TOKEN_DECIMALS: 12\n        NETWORK_COLOR_CODE: d32e79\n        API_URL: http://127.0.0.1:8080/api/v1\n    ports:\n      - '8080:80'\n    depends_on:\n      - harvester-api\n      - explorer-api\n\n  polkadot-ui:\n    image: polkasource/substrate-ui:polkadot-latest\n    ports:\n      - '8081:80'\n\nvolumes:\n  db-data:\n  substrate-data:\n",
            "explorer-gui/explorer-gui/Dockerfile": "### STAGE 1: Build ###\n# We label our stage as \u2018builder\u2019\nFROM node:10-alpine as builder\n\nCOPY package.json package-lock.json ./\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\n\nRUN npm ci && mkdir /ng-app && mv ./node_modules ./ng-app\n\nWORKDIR /ng-app\n\nCOPY . /ng-app/\n\nRUN ls /ng-app/src/\n\n## Build the angular app in production mode and store the artifacts in dist folder\nARG DISCOVERY_API_URL=https://discovery-31.polkascan.io\nENV DISCOVERY_API_URL=$DISCOVERY_API_URL\n\nARG API_URL=https://host-01.polkascan.io/kusama/api/v1\nENV API_URL=$API_URL\n\nARG NETWORK_NAME=Kusama\nENV NETWORK_NAME=$NETWORK_NAME\n\nARG NETWORK_ID=kusama\nENV NETWORK_ID=$NETWORK_ID\n\nARG NETWORK_TYPE=pre\nENV NETWORK_TYPE=$NETWORK_TYPE\n\nARG CHAIN_TYPE=relay\nENV CHAIN_TYPE=$CHAIN_TYPE\n\nARG NETWORK_TOKEN_SYMBOL=KSM\nENV NETWORK_TOKEN_SYMBOL=$NETWORK_TOKEN_SYMBOL\n\nARG NETWORK_TOKEN_DECIMALS=12\nENV NETWORK_TOKEN_DECIMALS=$NETWORK_TOKEN_DECIMALS\n\nARG NETWORK_COLOR_CODE=d32e79\nENV NETWORK_COLOR_CODE=$NETWORK_COLOR_CODE\n\nRUN npm run ng build -- --prod --output-path=dist\n\n\n### STAGE 2: Setup ###\nFROM nginx:1.14.1-alpine\n\n## Remove default nginx configs\nRUN rm -rf /etc/nginx/conf.d/*\n\n## Copy our default nginx config\n#COPY nginx/polkascan.conf /etc/nginx/conf.d/\nCOPY nginx.conf /etc/nginx/conf.d/\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From \u2018builder\u2019 stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist /usr/share/nginx/html\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n",
            "explorer-gui/explorer-gui/nginx.conf": "# portal\nserver {\n\n    # Production\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    listen 80;\n    server_name localhost;\n}\n"
        },
        "static_files": {}
    },
    "project_structure": {
        "files": [
            ".dockerignore",
            ".editorconfig",
            ".gitignore",
            ".gitmodules",
            "Dockerfile",
            "LICENSE",
            "README.md"
        ],
        "folders": [
            "explorer-gui",
            "nginx"
        ]
    }
}