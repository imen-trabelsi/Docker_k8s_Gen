apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: 'true'
  name: kibana-logging
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        addonmanager.kubernetes.io/mode: Reconcile
        k8s-app: kibana-logging
        kubernetes.io/cluster-service: 'true'
    spec:
      containers:
      - image: zhongyuanzhao000/docker_elastic_co_kibana_kibana-oss:v6.2.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 80
        name: kibana-logging
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /ready
            port: 80
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 512Mi
          requests:
            cpu: 100m
            ephemeral-storage: 500Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsGroup: 1000
          runAsUser: 1000
        volumeMounts: []
      serviceAccountName: default
      volumes: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: 'true'
  name: kibana-logging
spec:
  ports:
  - port: 80
  selector:
    k8s-app: kibana-logging
  type: ClusterIP
